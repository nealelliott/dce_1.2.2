/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * (c) Copyright International Business Machines Corp. 1994, 1996
 * Copyright (c) 1990, 1991, 1992, 1993, 1994, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 */
/*
 * HISTORY
 * $Log: aud_test.idl,v $
 * Revision 1.1.6.1  1996/07/09  15:08:41  arvind
 * 	Audit for 1.2.2
 * 	[1996/06/21  20:28 UTC  arvind  /main/arvind_audit122/1]
 *
 * 	Audit for 1.2.2
 * 	[1996/03/11  02:36:00  marty  1.1.4.2]
 *
 * Revision 1.1.4.2  1996/03/11  02:36:00  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  20:04:16  marty]
 * 
 * Revision 1.1.4.1  1995/12/11  21:51:28  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  20:53:40  root]
 * 
 * Revision 1.1.2.5  1994/09/27  17:32:38  weisz
 * 	CR 10703: added tests for trail full situation.
 * 	[1994/09/27  17:31:29  weisz]
 * 
 * Revision 1.1.2.4  1994/08/30  17:21:40  weisz
 * 	CR 11884: added new API - dce_aud_start_with_uuid
 * 	[1994/08/30  17:18:22  weisz]
 * 
 * Revision 1.1.2.3  1994/08/17  19:56:59  weisz
 * 	CR 11443: added PENDING as a new valid outcome.
 * 	[1994/08/17  19:55:31  weisz]
 * 
 * Revision 1.1.2.2  1994/06/10  20:45:50  devsrc
 * 	cr10872 - fixed copyright
 * 	[1994/06/10  17:17:13  devsrc]
 * 
 * Revision 1.1.2.1  1994/04/20  13:27:56  weisz
 * 	initial submission
 * 	[1994/04/20  13:26:12  weisz]
 * 
 * $EndLog$
 */
[
uuid(0069182e-21e2-1d6c-8b9c-10005a4f578b),
version(1.0)
]

interface aud_test {

    import "dce/rgynbase.idl";

    void aud_test_case1 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case2 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case3 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case4 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case5 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );


    void aud_test_case6 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case7 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case8 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case9 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case10 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case11 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case12 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case13 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case14 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case15 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case16 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case17 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case18 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case19 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case20 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case21 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case22 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );

    void aud_test_case23 (
        [in] 	handle_t	h,
        [out]	error_status_t  *st
    );
}

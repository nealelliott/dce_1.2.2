# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# 
# 
# HISTORY
# $Log: dfa.mkf,v $
# Revision 1.1.2.2  1996/03/11  14:07:25  marty
# 	Update OSF copyright years.
# 	[1996/03/11  13:56:52  marty]
#
# Revision 1.1.2.1  1996/02/22  00:55:10  takano
# 	First Submit
# 	[1996/02/22  00:54:59  takano]
# 
# $EndLog$

!ifdef %SILENT
.silent
!endif

copyright = Copyright 1996 Hitachi, Ltd.  All Rights Reserved.  Derechos Reservados.


pvmaj = 1
pvmin = 01
pvrev = 0



!ifndef %qmkver
!   define version d
!else
!   define version $(%qmkver)
!endif
!ifeq version d
!   define lversion DEBUG
!   define debug /dDEBUG /dUSER250
!   define usercomment (250 user)
!else ifeq version p5
!   define lversion PRODUCTION
!   define debug /dUSER5
!   define usercomment (5 user)
!else ifeq version p10
!   define lversion PRODUCTION
!   define debug /dUSER10
!   define usercomment (10 user)
!else ifeq version p25
!   define lversion PRODUCTION
!   define debug /dUSER25
!   define usercomment (25 user)
!else ifeq version p50
!   define lversion PRODUCTION
!   define debug /dUSER50
!   define usercomment (50 user)
!else ifeq version p100
!   define lversion PRODUCTION
!   define debug /dUSER100
!   define usercomment (100 user)
!else ifeq version p250
!   define lversion PRODUCTION
!   define debug /dUSER250
!   define usercomment (250 user)
!else
!   define lversion PRODUCTION
!   define debug /dUSER5
!   define usercomment (5 user)
!endif


program = Distributed File Access Manager $(usercomment)
dfa_screen = Distributed File Access Manager



nlm_SYSTEM = system NETWARE
nlm_TYPE = Form Novell NLM '$(program)'
nlm_NAME = Name $^&
nlm_SCREEN = Op ScreenName '$(dfa_screen)'
nlm_THREAD = Op ThreadName 'DFA Main'
nlm_STACK = Op Stack = 32k
nlm_NLMVER = Op Version = $(pvmaj).$(pvmin).$(pvrev)
nlm_COPYRIGHT = Op Copyright '$(copyright)'
linkop = $+$(linkop)$- Caseexact
linkop = $+$(linkop)$- Map
!ifeq version d
!   define linkop $+$(linkop)$- Verbose
!   define ldebug debug all debug novell
!endif


objlst = GMAIN.obj
objlst = $+$(objlst)$- GMAIINIT.obj
objlst = $+$(objlst)$- GMAICCNF.obj
objlst = $+$(objlst)$- GMAITBL.obj
objlst = $+$(objlst)$- GFNWACCS.obj
objlst = $+$(objlst)$- GFNWMAIN.obj
objlst = $+$(objlst)$- GFNWTBL.obj
objlst = $+$(objlst)$- GFNWCODE.obj

objlst = $+$(objlst)$- GAUTHEN.obj
objlst = $+$(objlst)$- gencrypt.obj

objlst = $+$(objlst)$- GRIDCLPR.obj
objlst = $+$(objlst)$- GRIDCMN1.obj
objlst = $+$(objlst)$- GRIDCMN2.obj
objlst = $+$(objlst)$- GRIDCOPR.obj
objlst = $+$(objlst)$- GRIDCOPO.obj
objlst = $+$(objlst)$- GRIDCPBK.obj
objlst = $+$(objlst)$- GRIDLST.obj
objlst = $+$(objlst)$- GRIDCRDR.obj
objlst = $+$(objlst)$- GRIDCRPO.obj
objlst = $+$(objlst)$- GRIDDEDR.obj
objlst = $+$(objlst)$- GRIDDEPO.obj
objlst = $+$(objlst)$- GRIDERPR.obj
objlst = $+$(objlst)$- GRIDERPO.obj
objlst = $+$(objlst)$- GRIDOPPO.obj
objlst = $+$(objlst)$- GRIDOPPR.obj
objlst = $+$(objlst)$- GRIDRNPR.obj
objlst = $+$(objlst)$- GRIDRNPO.obj
objlst = $+$(objlst)$- GTSYNC.obj

objlst = $+$(objlst)$- GTSHMALC.obj
objlst = $+$(objlst)$- GTSHFALL.obj
objlst = $+$(objlst)$- GTSHDUMP.obj
objlst = $+$(objlst)$- GTSHFREE.obj
objlst = $+$(objlst)$- GFILACLM.obj
objlst = $+$(objlst)$- GRCVWDOG.obj

objlst = $+$(objlst)$- GNCPLIB.obj
objlst = $+$(objlst)$- GNCPMAIN.obj
objlst = $+$(objlst)$- GLIOLGIN.obj
objlst = $+$(objlst)$- GLIOLGOT.obj
objlst = $+$(objlst)$- GLIOPASS.obj
objlst = $+$(objlst)$- GLIOBIND.obj

objlst = $+$(objlst)$- GFILANAL.obj
objlst = $+$(objlst)$- GFILCVOL.obj
objlst = $+$(objlst)$- GFILERCH.obj
objlst = $+$(objlst)$- GFILGRNT.obj
objlst = $+$(objlst)$- GFILLSDR.obj
objlst = $+$(objlst)$- GFILNDIR.obj
objlst = $+$(objlst)$- GFILRGHT.obj
objlst = $+$(objlst)$- GFILRMAP.obj
objlst = $+$(objlst)$- GFILRMOV.obj
objlst = $+$(objlst)$- GFILRVOK.obj
objlst = $+$(objlst)$- GFILTLST.obj
objlst = $+$(objlst)$- GFILDTBL.obj
objlst = $+$(objlst)$- GFILFTBL.obj
objlst = $+$(objlst)$- GFILGMAP.obj
objlst = $+$(objlst)$- GFILCDAT.obj
objlst = $+$(objlst)$- GFILCOWN.obj

objlst = $+$(objlst)$- GDIRCLR.obj
objlst = $+$(objlst)$- GDIRENT.obj
objlst = $+$(objlst)$- GDIRGLBL.obj
objlst = $+$(objlst)$- GDIRHDL.obj
objlst = $+$(objlst)$- GDIRIF.obj
objlst = $+$(objlst)$- GDIRINIT.obj
objlst = $+$(objlst)$- GDIRLIST.obj
objlst = $+$(objlst)$- GDIRMAIN.obj
objlst = $+$(objlst)$- GDIRMK.obj
objlst = $+$(objlst)$- GDIRMSG.obj
objlst = $+$(objlst)$- GDIRPATH.obj
objlst = $+$(objlst)$- GDIRRM.obj
objlst = $+$(objlst)$- GDIRSYNC.obj

objlst = $+$(objlst)$- $(startup)

import = $(clibimp)
import = $+$(import)$- dfalib.imp
import = $+$(import)$- dfadce.imp
import = $+$(import)$- $(socklibimp)

export = dfa.imp

module = CLib
module = $+$(module)$- dfalib.NLM
module = $+$(module)$- dfadce.NLM

build_msg = Building a $(lversion) version of $(program)

pgm_ver = /dvMAJ="$(pvmaj)" /dvMIN="$(pvmin)" /dvREV="$(pvrev)"

!ifndef %ccf386
!   define  d_wcc386opt /bt=NETWARE /bm /en /ms /w4 /e99 /zp1 /3s /ot /d2 $(debug)
!   define  p_wcc386opt /bt=NETWARE /bm /en /ms /w4 /s /zp1 /3s /oaxt $(debug)
!   define  p5_wcc386opt /bt=NETWARE /bm /en /ms /w4 /s /zp1 /3s /oaxt $(debug)
!   define  p10_wcc386opt /bt=NETWARE /bm /en /ms /w4 /s /zp1 /3s /oaxt $(debug)
!   define  p25_wcc386opt /bt=NETWARE /bm /en /ms /w4 /s /zp1 /3s /oaxt $(debug)
!   define  p50_wcc386opt /bt=NETWARE /bm /en /ms /w4 /s /zp1 /3s /oaxt $(debug)
!   define  p100_wcc386opt /bt=NETWARE /bm /en /ms /w4 /s /zp1 /3s /oaxt $(debug)
!   define  p250_wcc386opt /bt=NETWARE /bm /en /ms /w4 /s /zp1 /3s /oaxt $(debug)
!   define  x_wcc386opt $($(version)_wcc386opt) $(pgm_ver)
!else
!   define  x_wcc386opt $(%ccf386)
!endif

compiler_cmd = $(wcc386) $(x_wcc386opt) $[*.c

.BEFORE
    echo $(build_msg)
    set inc386=$(inc_386)
    set lib386=$(lib_386)
    set wcg386=$(code_386)

.c.obj:
	$(compiler_cmd)

dfa.nlm : $(objlst) dfa.LNK
	$(linker) @dfa

dfa.LNK : dfa.mkf
  if exist $^&.LNK del $^&.LNK
  %append $^&.LNK $(nlm_TYPE)
  %append $^&.LNK $(nlm_NAME)
  %append $^&.LNK $(nlm_SCREEN)
  %append $^&.LNK $(nlm_THREAD)
  %append $^&.LNK $(nlm_STACK)
  %append $^&.LNK $(nlm_NLMVER)
!ifdef copyright
  %append $^&.LNK $(nlm_COPYRIGHT)
!endif
!ifdef ldebug
  %append $^&.LNK $(ldebug)
!endif
  for %i in ($(linkop)) do %append $^&.LNK Op %i
  for %i in ($(objlst)) do %append $^&.LNK File %i
  for %i in ($(import)) do %append $^&.LNK Import @%i
  for %i in ($(export)) do %append $^&.LNK Export @%i
  for %i in ($(module)) do %append $^&.LNK Module %i
  for %i in ($(library)) do %append $^&.LNK Library %i

clean : .symbolic
    del *.MAP
    del *.OBJ
    del *.ERR
    del *.LNK
    del *.NLM
    del *.bak

zip : .symbolic
    -pkzip -u dfa dfa.mkf *.c *.h

unzip : .symbolic
    -pkunzip -n -d dfa

save : .symbolic
    %make zip
    %make clean

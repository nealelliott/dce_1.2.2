/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 * 
 */
/*
 * HISTORY
 * $Log: matrix.idl,v $
 * Revision 1.1.2.2  1996/03/09  20:49:08  marty
 * 	Add OSF copyright
 * 	[1996/03/09  20:27:36  marty]
 *
 * Revision 1.1.2.1  1995/12/11  19:34:39  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:18:15  root]
 * 
 * $EndLog$
 */
[
    uuid(C664B260-A5DC-11CB-832C-08002B2A1BCA)
] interface Matrix
{
    typedef struct {
	Matrix * m;
	long x;
    } Struct1;

    typedef struct {
	long *x;
	long y;
    } Struct2;

    typedef union switch(long s) unionPart {
      case 0: long x;
      case 1: Matrix *m;
    } Union1;

    /* Create a 2x2 matrix  */
    Matrix * new2x2(
	[in] double &v11,
	[in] double &v12,
	[in] double &v21,
	[in] double &v22
    );

    /* Create a 3x3 matrix  */
    Matrix * new3x3(
	[in] double v11,
	[in] double v12,
	[in] double v13,
	[in] double v21,
	[in] double v22,
	[in] double v23,
	[in] double v31,
	[in] double v32,
	[in] double v33
    );

    /* Set a new value in the matrix */
    void set(
	[in] long row,
	[in] long col,
	[in] double value
	);

    /* Get a value from the matrix */
    double get(
	[in] long row,
	[in] long col
	);

    /* Return the inversion of the specified matrix */
    Matrix * invert();

    /* Return the product */
    Matrix * multiply(
	[in] Matrix * m1
    );

    /* Return the sum */
    Matrix * add(
	[in] Matrix * m1
    );

    void add2(
	[in] Matrix * m1,
	[out]Matrix ** m2
    );

    /* Return the sum */
    Matrix * addStruct1(
	[in] Struct1 s
    );

    /* Return the sum */
    Matrix * addArray(
	[in] Matrix *arr[2]
	);

    /* Return the sum */
    Matrix * addUnion1(
	[in] Union1 myun
	);

    /* Return the sum */
    Matrix * addStruct2(
	[in] Struct2 mystruct
	);

    void sum(
	[in,out] Matrix **m1,
	[in,out] long * x,
	[in] long y,
	[out] long *z
    );
}

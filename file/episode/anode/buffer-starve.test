# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# 
# HISTORY
# $Log: buffer-starve.test,v $
# Revision 1.1.12.1  1996/10/02  17:16:53  damon
# 	Newest DFS from Transarc
# 	[1996/10/01  18:26:49  damon]
#
# Revision 1.1.6.1  1994/06/09  13:57:10  annie
# 	fixed copyright in src/file
# 	[1994/06/08  21:32:06  annie]
# 
# Revision 1.1.4.4  1993/01/18  22:02:18  cjd
# 	embedded copyright notice
# 	[1993/01/18  21:41:48  cjd]
# 
# Revision 1.1.4.3  1992/09/15  17:30:56  jaffe
# 	Transarc delta: mason-ot2930-logbuf-parts-of-nbs 1.14
# 	  Selected comments:
# 	    This is the logbuf portion of new block security (making sure someone
# 	    else's data does not appear in your file across a system crash.)  For
# 	    details, see the OT report, the postings to transarc.afs.episode, and
# 	    the white paper on this subject.  Not done yet.  SNAPSHOT ONLY.
# 	    Just wanted to fix a small nit in test_res.
# 	    More work on NBS.  This is only a snapshot.
# 	    Another snapshot; this time we make the interfaces between anode & buffer
# 	    uniform (each was using a different convention).  Clean up names at the same
# 	    time.  SNAPSHOT ONLY.
# 	    Another snapshot.  NBS now works in the forward direction for basic.test!
# 	    This part of this delta was removed and added to delta
# 	    mason-ot5070-gc-tran-in-logfull-avoidance
# 	    Snapshot of code working in the forward path in mp.test.
# 	    Removed the contents of revision 1.6
# 	    Checkpoint.  No work done here, just made sure that the other new
# 	    delta works OK (mason-ot5070-gc-tran-in-logfull-avoidance).
# 	    Make all_tests work again.
# 	    Finish making all the tests run now.
# 	    Log size must increase.
# 	    Cleanup compilation on OSF/1.
# 	    Continue work to get new block security going.
# 	    Add a script for the nbs tests.
# 	[1992/09/14  19:22:28  jaffe]
# 
# Revision 1.1.4.2  1992/08/31  18:32:18  jaffe
# 	added a header line
# 	[1992/08/30  12:57:40  jaffe]
# 
# Revision 1.1.2.3  1992/05/13  21:54:38  jdp
# 	Transarc delta: ota-anode-handles-on-tap-2566-2358 1.4
# 	  Files modified:
# 	    anode: all_tests, anode.p.h, buffer-starve.test
# 	    anode: fixed_anode.c
# 	  Selected comments:
# 	    This delta changes the anode handle management code in the fixed anode
# 	    module to use the fifo package.  There are three fifos, on containing in
# 	    use handles (refCount > 0), one containing free handles (refCount == 0),
# 	    and one for invalidated handles (device == 0).  This should be both
# 	    allow handles to be allocated on demand as well as being a performance
# 	    improvement.
# 	    Rev 1.1 is a check point.  The basic work is done but can't compile without
# 	    fixing a bug in another delta.
# 	    The all_tests scripts now runs except for unrelated problems.
# 	    To better tests this code and make use of the new handle allocation code
# 	    all_tests was modified to specify -maxhandles on in two cases where it
# 	    was interesting, but previously impossible, to do so.
# 	    At the same time all_tests was improved to check to make sure there was
# 	    enough disk space in /tmp to proceed.  Further related to this the
# 	    buffer-starve script was changed to reduce peak disk space requirements.
# 	    Several bugs were found in new handle management code in fixed_anode.
# 	    Reduce disk space consumption from 16M to 12M.
# 	    Found a problem with all_tests when no files in /tmp/dev* exist at all.
# 	    Fix problem found when compiling in the new build environment with xlc
# 	    instead of cc.
# 	[1992/05/13  19:38:17  jdp]
# 
# Revision 1.1.2.2  1992/05/05  20:39:35  jdp
# 	delta ota-2K-1K-wrong-block-returned-2342 1.2
# 	[1992/05/04  15:25:26  jdp]
# 
# $EndLog$
# /* Copyright (C) 1992 Transarc Corporation - All rights reserved */
# $Header: /u0/rcs_trees/dce/rcs/file/episode/anode/buffer-starve.test,v 1.1.12.1 1996/10/02 17:16:53 damon Exp $

buffer-starve 1
modify_afsdb anode on 31		# turn on code block counting
modify_afsdb anode on 29		# turn on preempts

open_device 0 1024 1024 3100		# 1K/1K
create_aggregate
create_vol dev0 0,,0 30000
fork big_file.int.test
wait
check_device

open_device 1 2048 1024 1600		# 2K/1K
create_aggregate 60
create_vol dev1 0,,0 30000
fork big_file.int.test
wait
check_device

open_device 2 4096 1024 800		# 4K/1K
create_aggregate 60
create_vol dev2 0,,0 30000
fork big_file.int.test
wait
check_device

open_device 3 8192 1024 400		# 8K/1K
create_aggregate 60
create_vol dev3 0,,0 30000
fork big_file.int.test
wait
check_device

# Now do two at a time

open_file dev0.root
fork big_file.int.test

open_file dev1.root
fork big_file.int.test
wait

open_file dev2.root
fork big_file.int.test

open_file dev3.root
fork big_file.int.test

wait
check_device

# Now do all four at once

open_file dev0.root
fork big_file.int.test

open_file dev1.root
fork big_file.int.test

open_file dev2.root
fork big_file.int.test

open_file dev3.root
fork big_file.int.test

wait
check_device

end

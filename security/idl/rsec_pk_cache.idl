/*
 * @OSF_COPYRIGHT@
 */
/*
 * HISTORY
 * $Log: rsec_pk_cache.idl,v $
 * Revision 1.1.2.3  1996/10/03  14:53:26  arvind
 * 	CHFts19896: public key version support
 * 	[1996/09/13  23:45 UTC  aha  /main/DCE_1.2.2/aha_pk9_3/1]
 *
 * 	Modify to support public key version numbers
 * 	[1996/09/10  21:09 UTC  aha  /main/DCE_1.2.2/aha_pk9_2/1]
 *
 * 	Bug fixes for rsec_pk_cache
 * 	[1996/07/15  19:43 UTC  aha  /main/DCE122_PK/aha_pk6/4]
 *
 * Revision 1.1.2.2  1996/08/09  12:06:36  arvind
 * 	Bug fixes for rsec_pk_cache
 * 	[1996/07/15  19:43 UTC  aha  /main/DCE122_PK/aha_pk6/4]
 * 
 * 	Changes for Public Key Login; fix rsec_pk_cache_kdc_key() problems
 * 	[1996/06/19  20:33 UTC  aha  /main/DCE122_PK/aha_pk6/2]
 * 
 * 	Changes for Public Key Login; update header for rsec_pk_cache_kdc_key()
 * 	to reflect new location for cache file.
 * 	[1996/06/18  20:56 UTC  aha  /main/DCE122_PK/aha_pk6/1]
 * 
 * 	Merge PSM, sec_pvtkey, sec_pubkey, dced, base defs for Public Key Login
 * 	[1996/06/11  17:59 UTC  aha  /main/DCE_1.2.2/1]
 * 
 * Revision 1.1.2.1  1996/07/08  20:19:57  arvind
 * 	OSF DCE1.2.2 Drop3
 * 	rsec_pk_cache.idl,v
 * 	Revision /main/DCE_1.2.2/2  1996/06/13  21:30 UTC  sommerfeld
 * 	Fix comment.
 * 	[1996/06/11  18:42 UTC  sommerfeld  /main/DCE122_PK/sommerfeld_pk_indir/1]
 * 
 * Revision /main/DCE_1.2.2/1  1996/06/11  17:59 UTC  aha
 * 	Merge PSM, sec_pvtkey, sec_pubkey, dced, base defs for Public Key Login
 * 
 * Revision /main/DCE122_PK/1  1996/06/04  18:53 UTC  psn
 * 	Merge PK work from DCE12_PK off of DCE_1.2 to DCE122_PK off of DCE_1.2.2.
 * 
 * Revision /main/DCE12_PK/3  1996/05/16  14:19 UTC  aha
 * 	Merge changes from aha_pk2 - remove the refresh parameter
 * 	from rsec_pk_cache_kdc_key()
 * 
 * Revision /main/DCE12_PK/2  1996/04/17  16:54 UTC  aha
 * 	Fix log comments
 * 
 * Revision /main/DCE12_PK/1  1996/04/12  19:36 UTC  aha
 * 	rsec_pk_cache interface
 * 
 * Revision /main/DCE_1.2/1  1996/04/11  13:40 UTC  aha
 * 	Additions for public key login
 * 
 * Revision /main/aha_mothra12/1  1996/03/07  16:37 UTC  aha
 * 	Remote interface for sec_login to request
 * 	dced to cache a particular KDC public key
 * 
 * $EndLog$
 */
/*
 * rsec_pk_cache.idl
 *
 * Copyright (c) Hewlett-Packard Company 1996
 * Unpublished work. All Rights Reserved.
 *
 * rsec_pk_cache.idl - Remote request for dced to cache or
 * refresh the public key of a KDC
 *
 */

[
    uuid(d9a38608-688d-11cf-ae3c-08000919ebb5),
    pointer_default(ptr),
    version(1.1)
]

interface rsec_pk_cache {

    import "dce/rgynbase.idl";
    import "dce/sec_pk_base.idl";

    /* r s e c _ p k _ c a c h e _ k d c _ k e y
     *
     * rsec_pk_cache_kdc_key - this routine requests dced to
     * obtain and cache, or refresh cache, of public key of
     * the KDC of a specified cell.  The key is cached in
     * the file ${KDC_PUBKEY_CACHE_DIR}/<cell>/${KDC_PUBKEY_CACHE_FILE}
     * (KDC_PUBKEY_CACHE_DIR/FILE defined in security/h/rca_fileloc.h).
     *
     * Keys may be retrieved from this file via the
     * sec_pubkey_retrieve() interface with domain
     * sec_pk_domain_pk_kdc_cache.  The sec_pubkey interface invokes
     * the rsec_pk_cache_kdc_key interface if the cache is empty or
     * a refresh request is being made.
     *
     * rsec_pk_cache_kdc_key refuses to refresh an existing
     * cache file if it has been written within the past five
     * minutes.  This is intended to stall denial-of-service
     * attacks.
     *
     * In Parameters
     *   cell           - canonical cell name (/.../cell_name)
     *   usage          - must be "sec_pk_usage_digitalSignature" in the
     *                    reference implementation.
     *   kvno           - pointer to key version desired (or NULL)
     *
     * Out Parameters
     *   kvno           - pointer to key version returned (or NULL)
     *   public_key     - DER-encoded public key value
     *
     * Returns:
     *   dced_s_pkcache_cellname_invalid - bad cellname
     *   dced_s_pkcache_usage_unsupp - usage value unsupported
     *   dced_s_pkcache_key_fresh - key was cached recently
     *            (within KEY_CACHE_STALE_SECS)
     */
    error_status_t rsec_pk_cache_kdc_key (
        [in]    handle_t                handle,
        [in]    sec_rgy_name_t          cell,
        [in]    sec_pk_usage_flags_t    usage,
        [in,out] unsigned32             *kvno,
        [out]   sec_pk_pubkey_t         *pubkey_p
    );
}

/*
 * @OSF_COPYRIGHT@
 * Copyright (c) 1994, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: hostdata.idl,v $
 * Revision 1.1.4.2  1996/03/09  23:06:59  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:25:46  marty]
 *
 * Revision 1.1.4.1  1995/12/08  21:27:28  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/08  17:59:39  root]
 * 
 * Revision 1.1.2.5  1994/08/23  19:24:04  rsalz
 * 	Change names of hostdata ERA attributes (OT CR 11711).
 * 	[1994/08/22  18:20:07  rsalz]
 * 
 * Revision 1.1.2.4  1994/03/07  20:18:01  rsalz
 * 	Updating to second edition of functional spec.
 * 	[1994/03/07  19:39:19  rsalz]
 * 
 * Revision 1.1.2.3  1994/02/22  20:16:37  rsalz
 * 	Add attribute UUID to hostdata_get.
 * 	[1994/02/22  20:16:17  rsalz]
 * 
 * Revision 1.1.2.2  1994/02/18  22:19:53  bowe
 * 	Added missing uuid_t param to hostdata_set() function.
 * 	[1994/02/18  19:03:54  bowe]
 * 
 * Revision 1.1.2.1  1994/01/21  18:03:31  bowe
 * 	Initial checkin
 * 	[1994/01/21  18:00:25  bowe]
 * 
 * $EndLog$
 */


[
    uuid(006e3297-1a21-1d33-b6ff-0000c09ce054),
    version(1.0)
]


/*
**  H O S T D A T A
**  This service allows a server to provide remote access to local
**  configuration data.  As implemented in dced, there are several
**  well-known hostdata items with special semantics; see the dced
**  documentation for details.  In addition, all implementations support
**  at least two attributes (with UUID's defined elsewhere):  the
**  "data" as an array of strings, and the "bindata" as an
**  uninterpreted array of bytes.
*/
interface hostdata
{
    import "dce/dced_base.idl";


    /*
    **  Get the list of hostdata objects.
    */
    void
    hostdata_get_list(
	[in]		handle_t		h,
	[out]		dced_entry_list_t	*items,
	[out]		error_status_t		*st
    );


    /*
    **  Create a hostdata object, adding it to the entry list.
    **  If just_import is TRUE then the item mentioned in the
    **  id->storage_tag field must exist and the value must be NULL.
    */
    void
    hostdata_create(
	[in]		handle_t		h,
	[in]		dced_entry_t		*id,
	[in]		boolean32		just_import,
	[in]		sec_attr_t		*value,
	[out]		error_status_t		*st
    );


    /*
    **  Delete a hostdata object.  If remove_object is true, then the
    **  id->storage_tag backing storage is also removed.
    */
    void
    hostdata_delete(
	[in]		handle_t		h,
	[in]		uuid_t			*id,
	[in]		boolean32		remove_object,
	[out]		error_status_t		*st
    );


    /*
    **  Read an attribute (of information) about a hostdata object.
    */
    void
    hostdata_get(
	[in]		handle_t		h,
	[in]		uuid_t			*id,
	[in]		uuid_t			*attr_id,
	[out]		sec_attr_t		*value,
	[out]		error_status_t		*st
    );


    /*
    **  Write an attribute (of information) on an existing hostdata
    **  object.
    */
    void
    hostdata_set(
	[in]		handle_t		h,
	[in]		uuid_t			*id,
	[in]		sec_attr_t		*value,
	[out]		error_status_t		*st
    );
}

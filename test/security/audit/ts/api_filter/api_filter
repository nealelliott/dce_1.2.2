#!/bin/ksh
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# (c) Copyright International Business Machines Corp. 1994, 1996
# Copyright (c) 1990, 1991, 1992, 1993, 1994, 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
#
# HISTORY
#
#  02/11/94	Weisz 	Initial design.  

tet_startup="startup"
tet_cleanup="cleanup"
iclist="ic1"
ic1="api_filter1"

typeset -i16 overall_status
typeset -i16 tp_status

typeset -i16 tp1_error
typeset -i16 tp2_error
typeset -i16 tp3_error 
typeset -i16 tp4_error 
typeset -i16 tp5_error 
typeset -i16 tp6_error 
typeset -i16 tp7_error 
typeset -i16 tp8_error 
typeset -i16 tp9_error 
typeset -i16 tp10_error 
typeset -i16 tp11_error 

 (( tp1_error  = 16#00000001 ))
 (( tp2_error  = 16#00000002 ))
 (( tp3_error  = 16#00000004 ))
 (( tp4_error  = 16#00000008 ))
 (( tp5_error  = 16#00000010 ))
 (( tp6_error  = 16#00000020 ))
 (( tp7_error  = 16#00000040 ))
 (( tp8_error  = 16#00000080 ))
 (( tp9_error  = 16#00000100 ))
 (( tp10_error = 16#00000200 ))
 (( tp11_error = 16#00000400 ))


#set -x
startup() {

	print "\nSTART DCE audit functional test: api_filter; DATE: `date`"
	tet_infoline "START DCE audit functional test: ${TET_PNAME}; DATE: `date`"
        DCEAUDITFILTERON=1
        export DCEAUDITFILTERON

        $TET_ROOT/test/functional/security/audit/ts/api_filter/startauditd 
}

api_filter1() {

#set -x
 print "\nSTART: api_filter1 started\n"
 tet_infoline "START: api_filter1 started"
 DCEAUDITFILTERON=1
 export DCEAUDITFILTERON

 $TET_ROOT/test/functional/security/audit/ts/api_filter/aud_testf
 (( overall_status = $? ))

 print "Overall status: $overall_status\n"

 ((tp_status = $overall_status & $tp1_error))
 if (( $tp_status  == 0 ))
 then
   print "\nPASS: api_filter01 passed"
   tet_infoline "PASS: api_filter01 passed"
 else
   print "\nERROR: api_filter01 failed"
   tet_infoline "ERROR: api_filter01 failed"
 fi

 ((tp_status = $overall_status & $tp2_error))
 if (( $tp_status  == 0 ))
 then
   print "\nPASS: api_filter02 passed"
   tet_infoline "PASS: api_filter02 passed"
 else
   print "\nERROR: api_filter02 failed"
   tet_infoline "ERROR: api_filter02 failed"
 fi

 ((tp_status = $overall_status & $tp3_error))
 if (( $tp_status  == 0 ))
 then
   print "\nPASS: api_filter03 passed"
   tet_infoline "PASS: api_filter03 passed"
 else
   print "\nERROR: api_filter03 failed"
   tet_infoline "ERROR: api_filter03 failed"
 fi

 ((tp_status = $overall_status & $tp4_error))
 if (( $tp_status  == 0 ))
 then
   print "\nPASS: api_filter04 passed"
   tet_infoline "PASS: api_filter04 passed"
 else
   print "\nERROR: api_filter04 failed"
   tet_infoline "ERROR: api_filter04 failed"
 fi

 ((tp_status = $overall_status & $tp5_error))
 if (( $tp_status  == 0 ))
 then
   print "\nPASS: api_filter05 passed"
   tet_infoline "PASS: api_filter05 passed"
 else
   print "\nERROR: api_filter05 failed"
   tet_infoline "ERROR: api_filter05 failed"
 fi


 ((tp_status = $overall_status & $tp6_error))
 if (( $tp_status  == 0 ))
 then
   print "\nPASS: api_filter06 passed"
   tet_infoline "PASS: api_filter06 passed"
 else
   print "\nERROR: api_filter06 failed"
   tet_infoline "ERROR: api_filter06 failed"
 fi

 ((tp_status = $overall_status & $tp7_error))
 if (( $tp_status  == 0 ))
 then
   print "\nPASS: api_filter07 passed"
   tet_infoline "PASS: api_filter07 passed"
 else
   print "\nERROR: api_filter07 failed"
   tet_infoline "ERROR: api_filter07 failed"
 fi

 ((tp_status = $overall_status & $tp8_error))
 if (( $tp_status  == 0 ))
 then
   print "\nPASS: api_filter08 passed"
   tet_infoline "PASS: api_filter08 passed"
 else
   print "\nERROR: api_filter08 failed"
   tet_infoline "ERROR: api_filter08 failed"
 fi


 ((tp_status = $overall_status & $tp9_error))
 if (( $tp_status  == 0 ))
 then
   print "\nPASS: api_filter09 passed"
   tet_infoline "PASS: api_filter09 passed"
 else
   print "\nERROR: api_filter09 failed"
   tet_infoline "ERROR: api_filter09 failed"
 fi


 ((tp_status = $overall_status & $tp10_error))
 if (( $tp_status  == 0 ))
 then
   print "\nPASS: api_filter10 passed"
   tet_infoline "PASS: api_filter10 passed"
 else
   print "\nERROR: api_filter10 failed"
   tet_infoline "ERROR: api_filter10 failed"
 fi

 ((tp_status = $overall_status & $tp11_error))
 if (( $tp_status  == 0 ))
 then
   print "\nPASS: api_filter11 passed"
   tet_infoline "PASS: api_filter11 passed"
 else
   print "\nERROR: api_filter11 failed"
   tet_infoline "ERROR: api_filter11 failed"
 fi

 if (( $overall_status  == 0 ))
 then
   tet_result PASS
 else
   tet_result FAIL
 fi

}

#set +x
# cleanup of DCE audit test
cleanup() {

        $TET_ROOT/test/functional/security/audit/ts/api_filter/stopauditd
        rm /opt/dcelocal/var/audit/esl-*
	print "\nEND DCE audit functional test: api_filter; DATE: `date`"
	tet_infoline "END DCE audit functional test: ${TET_PNAME}; DATE: `date`"
}

#source tcm
. $TET_ROOT/lib/ksh/tcm.ksh

# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994, 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# 
# 
# HISTORY
# $Log: init.gdscp,v $
# Revision 1.1.4.2  1996/03/09  23:13:53  marty
# 	Update OSF copyright year
# 	[1996/03/09  22:31:11  marty]
#
# Revision 1.1.4.1  1995/12/08  15:58:40  root
# 	Submit OSF/DCE 1.2.1
# 	[1995/12/08  15:12:56  root]
# 
# Revision 1.1.2.3  1994/06/09  18:46:07  devsrc
# 	cr10871 - expand copyright
# 	[1994/06/09  18:19:08  devsrc]
# 
# Revision 1.1.2.2  1994/05/10  15:55:36  marrek
# 	Code submission on April 1994.
# 	[1994/05/03  14:58:31  marrek]
# 
# Revision 1.1.2.1  1994/03/23  15:18:12  keutel
# 	creation
# 	[1994/03/21  12:57:26  keutel]
# 
# $EndLog$
#  
# $RCSfile: init.gdscp,v $ $Revision: 1.1.4.2 $ $Date: 1996/03/09 23:13:53 $
# 

#-----------------------------------------------------------------#
#                                                                 #
# Copyright (c) 1993 Siemens Nixdorf Informationssysteme AG       #
# All Rights Reserved                                             #
#                                                                 #
# Project     : GDS Control Program                               #
# File Name   : init.gdscp					  #
# Description : This file contains the initialization scripts for #
#		"gdscp". 					  #
# Date	      : January 1994				  	  #
# Author      : B T Naik, SNI BU BA KP13, SISL India.             #
#                                                                 #
#-----------------------------------------------------------------#


# The existing gdscp "list" command is overwriting the TCL "list" 
# command.  So rename the TCL "list" command to "llist"
rename list llist;

#-----------------------------------------------------------------#
#                                                                 #
# Procedure Name: bind						  #
# Description   : This script is used to perform the "bind" 	  #
#		  operation on the "x500obj" object.		  #
# Return Value  : The return value of this procedure is the same  #
#		  as that of the "x500obj" command with "bind"    #
#		  operation.  					  #
#		  NULL is returned in case of a successful        #
#		  operation. Otherwise, an error message string   #
#	          is returned.  The error exception can be trapped#
#		  with the help of the "catch" command.  The TCL  #
#		  error variables errorCode and errorInfo are also#
#		  appropriately set in case of errors.		  # 
# Author        : B T Naik, SNI BU BA KP13, SISL India.	   	  #
#                                                                 #
#-----------------------------------------------------------------#
proc bind args {
    eval "x500obj bind $args"
}


#-----------------------------------------------------------------#
#                                                                 #
# Procedure Name: compare					  #
# Description   : This script is used to perform the "compare" 	  #
#		  operation on the "x500obj" object.		  #
# Return Value  : The return value of this procedure is the same  #
#		  as that of the "x500obj" command with "compare" #
#		  operation.  					  #
#		  The result string is returned in case of a      #
#		  successful operation. Otherwise, an error       #
#		  message string is returned.  The error exception#
#		  can be trapped with the help of the "catch"     #
#		  command.  The TCL error variables errorCode and #
#		  errorInfo are also appropriately set in case    #
#	          of errors.				  	  # 
# Author        : B T Naik, SNI BU BA KP13, SISL India.	   	  #
#                                                                 #
#-----------------------------------------------------------------#
proc compare args {
    eval "x500obj compare $args"
}


#-----------------------------------------------------------------#
#                                                                 #
# Procedure Name: create					  #
# Description   : This script is used to perform the "create" 	  #
#		  operation on the "x500obj" object.		  #
# Return Value  : The return value of this procedure is the same  #
#		  as that of the "x500obj" command with "create"  #
#		  operation.  					  #
#		  NULL is returned in case of a successful        #
#		  operation. Otherwise, an error message string   #
#	          is returned.  The error exception can be trapped#
#		  with the help of the "catch" command.  The TCL  #
#		  error variables errorCode and errorInfo are also#
#		  appropriately set in case of errors.		  # 
# Author        : B T Naik, SNI BU BA KP13, SISL India.	   	  #
#                                                                 #
#-----------------------------------------------------------------#
proc create args {
    eval "x500obj create $args"
}


#-----------------------------------------------------------------#
#                                                                 #
# Procedure Name: delete					  #
# Description   : This script is used to perform the "delete" 	  #
#		  operation on the "x500obj" object.		  #
# Return Value  : The return value of this procedure is the same  #
#		  as that of the "x500obj" command with "delete"  #
#		  operation.  					  #
#		  NULL is returned in case of a successful        #
#		  operation. Otherwise, an error message string   #
#	          is returned.  The error exception can be trapped#
#		  with the help of the "catch" command.  The TCL  #
#		  error variables errorCode and errorInfo are also#
#		  appropriately set in case of errors.		  # 
# Author        : B T Naik, SNI BU BA KP13, SISL India.	   	  #
#                                                                 #
#-----------------------------------------------------------------#
proc delete args {
    eval "x500obj delete $args"
}


#-----------------------------------------------------------------#
#                                                                 #
# Procedure Name: list					          #
# Description   : This script is used to perform the "list" 	  #
#		  operation on the "x500obj" object.		  #
# Return Value  : The return value of this procedure is the same  #
#		  as that of the "x500obj" command with "list"    #
#		  operation.  					  #
#		  The results are returned in a TCL list in case  #
#		  of a successful operation. Otherwise, an error  #
#		  message string is returned.  The error exception#
#		  can be trapped with the help of the "catch"     #
#		  command.  The TCL error variables errorCode and #
#		  errorInfo are also appropriately set in case    #
#	          of errors.				  	  # 
# Author        : B T Naik, SNI BU BA KP13, SISL India.	   	  #
#                                                                 #
#-----------------------------------------------------------------#
proc list args {
    eval "x500obj list $args"
}


#-----------------------------------------------------------------#
#                                                                 #
# Procedure Name: modify					  #
# Description   : This script is used to perform the "modify" 	  #
#		  operation on the "x500obj" object.		  #
# Return Value  : The return value of this procedure is the same  #
#		  as that of the "x500obj" command with "modify"    #
#		  operation.  					  #
#		  NULL is returned in case of a successful        #
#		  operation. Otherwise, an error message string   #
#	          is returned.  The error exception can be trapped#
#		  with the help of the "catch" command.  The TCL  #
#		  error variables errorCode and errorInfo are also#
#		  appropriately set in case of errors.		  # 
# Author        : B T Naik, SNI BU BA KP13, SISL India.	   	  #
#                                                                 #
#-----------------------------------------------------------------#
proc modify args {
    eval "x500obj modify $args"
}


#-----------------------------------------------------------------#
#                                                                 #
# Procedure Name: search				          #
# Description   : This script is used to perform the "search" 	  #
#		  operation on the "x500obj" object.		  #
# Return Value  : The return value of this procedure is the same  #
#		  as that of the "x500obj" command with "search"  #
#		  operation.  					  #
#		  The results are returned in a TCL list in case  #
#		  of a successful operation. Otherwise, an error  #
#		  message string is returned.  The error exception#
#		  can be trapped with the help of the "catch"     #
#		  command.  The TCL error variables errorCode and #
#		  errorInfo are also appropriately set in case    #
#	          of errors.				  	  # 
# Author        : B T Naik, SNI BU BA KP13, SISL India.	   	  #
#                                                                 #
#-----------------------------------------------------------------#
proc search args {
    eval "x500obj search $args"
}


#-----------------------------------------------------------------#
#                                                                 #
# Procedure Name: show					          #
# Description   : This script is used to perform the "show" 	  #
#		  operation on the "x500obj" object.		  #
# Return Value  : The return value of this procedure is the same  #
#		  as that of the "x500obj" command with "show"    #
#		  operation.  					  #
#		  The results are returned in a TCL list in case  #
#		  of a successful operation. Otherwise, an error  #
#		  message string is returned.  The error exception#
#		  can be trapped with the help of the "catch"     #
#		  command.  The TCL error variables errorCode and #
#		  errorInfo are also appropriately set in case    #
#	          of errors.				  	  # 
# Author        : B T Naik, SNI BU BA KP13, SISL India.	   	  #
#                                                                 #
#-----------------------------------------------------------------#
proc show args {
    eval "x500obj show $args"
}


#-----------------------------------------------------------------#
#                                                                 #
# Procedure Name: operations				          #
# Description   : This script is used to perform the "operations" #
#		  operation on the "x500obj" object.		  #
# Return Value  : The return value of this procedure is the same  #
#		  as that of the "x500obj" command with           #
#		  "operations" operation.  			  #
#		  The results are returned in a TCL list in case  #
#		  of a successful operation. Otherwise, an error  #
#		  message string is returned.  The error exception#
#		  can be trapped with the help of the "catch"     #
#		  command.  The TCL error variables errorCode and #
#		  errorInfo are also appropriately set in case    #
#	          of errors.				  	  # 
# Author        : B T Naik, SNI BU BA KP13, SISL India.	   	  #
#                                                                 #
#-----------------------------------------------------------------#
proc operations args {
    eval "x500obj operations $args"
}


#-----------------------------------------------------------------#
#                                                                 #
# Procedure Name: help				                  #
# Description   : This script is used to perform the "help"       #
#		  operation on the "x500obj" object.		  #
# Return Value  : The return value of this procedure is the same  #
#		  as that of the "x500obj" command with           #
#		  "help" operation.  			  	  #
# Author        : B T Naik, SNI BU BA KP13, SISL India.	   	  #
#                                                                 #
#-----------------------------------------------------------------#
proc help args {
    eval "x500obj help $args"
}

#!/bin/ksh

# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# 
# 
# HISTORY
# $Log: rpc.fun.tet,v $
# Revision 1.1.2.2  1996/03/09  20:50:25  marty
# 	Add OSF copyright
# 	[1996/03/09  20:28:33  marty]
#
# Revision 1.1.2.1  1995/12/11  20:00:25  root
# 	Submit OSF/DCE 1.2.1
# 	[1995/12/11  19:41:43  root]
# 
# $EndLog$

# This is a startup script for the rpc tests  
# comment out test47
#set -x

tet_startup="startup"
tet_cleanup="cleanup"

#iclist="ic3 ic4 ic5"

iclist="ic1 ic2 ic3 ic4 ic5 ic6 ic7 ic8 ic9 ic10 ic11 ic12 ic13 ic14 ic15 ic16 ic17 ic18 ic19 ic20 ic21 \
	ic22 ic23 ic24 ic25 ic26 ic27 ic28 ic29 ic30 ic31 ic32 ic33 ic34 ic35 ic36 ic37 ic38 ic39 ic40 ic41 ic42 \
	ic43 ic44 ic45 ic46 ic48 ic49 ic50 ic51 ic52 ic53 ic54 ic55 ic56 ic57 ic58 ic59 \
	ic60 ic61 ic62 ic63 ic64 ic65 ic66 ic67 ic68 ic69 ic70 ic71 ic72 ic73 ic74 ic75 ic76 ic77 ic78 ic79 \
	ic80 ic81 ic82 ic83 ic84 ic85 ic86 ic87 ic88 ic89"
ic1="test1"
ic2="test2"
ic3="test3"
ic4="test4"
ic5="test5"
ic6="test6"
ic7="test7"
ic8="test8"
ic9="test9"
ic10="test10"
ic11="test11"
ic12="test12"
ic13="test13"
ic14="test14"
ic15="test15"
ic16="test16"
ic17="test17"
ic18="test18"
ic19="test19"
ic20="test20"
ic21="test21"
ic22="test22"
ic23="test23"
ic24="test24"
ic25="test25"
ic26="test26"
ic27="test27"
ic28="test28"
ic29="test29"
ic30="test30"
ic31="test31"
ic32="test32"
ic33="test33"
ic34="test34"
ic35="test35"
ic36="test36"
ic37="test37"
ic38="test38"
ic39="test39"
ic40="test40"
ic41="test41"
ic42="test42"
ic43="test43"
ic44="test44"
ic45="test45"
ic46="test46"
#ic47="test47"
ic48="test48"
ic49="test49"
ic50="test50"
ic51="test51"
ic52="test52"
ic53="test53"
ic54="test54"
ic55="test55"
ic56="test56"
ic57="test57"
ic58="test58"
ic59="test59"
ic60="test60"
ic61="test61"
ic62="test62"
ic63="test63"
ic64="test64"
ic65="test65"
ic66="test66"
ic67="test67"
ic68="test68"
ic69="test69"
ic70="test70"
ic71="test71"
ic72="test72"
ic73="test73"
ic74="test74"
ic75="test75"
ic76="test76"
ic77="test77"
ic78="test78"
ic79="test79"
ic80="test80"
ic81="test81"                                       
ic82="test82"
ic83="test83"
ic84="test84"
ic85="test85"
ic86="test86"
ic87="test87"
ic88="test88"
ic89="test89"



startup()        #preparation of DCE rpc suite  
{
	case "$TET_EXEC_IN_PLACE" in
	[Tt][Rr][Uu][Ee])	my_exec_dirname=${TET_STDERR%/*} ;;
	*)			my_exec_dirname=${TET_CONFIG%/*}/rtandidl/control ;;
	esac
#	echo "TET_STDERR=$TET_STDERR"
#	echo "TET_CONFIG=$TET_CONFIG"
#	echo "my_exec_dirname=$my_exec_dirname"
	tet_infoline "START DCE RPC tests: ${TET_PNAME}; DATE:  `date`" 
        control_dir="${TET_ROOT}/test/rpc/rtandidl/control"
#        control_dir=.
#	echo $control_dir
#        testsh_dir="../testsh"
        testsh_dir="${TET_ROOT}/test/rpc/rtandidl/testsh"
#	moretests_dir="../moretests"
	moretests_dir="${TET_ROOT}/test/rpc/rtandidl/moretests"
        include_dir="/usr/include"
        host=`hostname`
        export host 
        cargs="$testsh_dir $moretests_dir $include_dir"
#	echo $cargs
        export cargs
        NLSPATH=/usr/lib/nls/%L/%N
        export NLSPATH
        PATH=$control_dir:$moretests_dir:$testsh_dir:/opt/dcelocal/bin:/bin:/usr/bin
#	echo $PATH
#	PATH=$control_dir:$moretests_dir:$testsh_dir:$PATH
#	PATH=/tet/test/rpc/rtandidl/control:/tet/test/rpc/rtandidl/moretests:$PATH
	export PATH
        export LANG=C
        export CALLER_NAME=cell_admin
#	echo $CALLER_NAME
        export CALLER_KEY="-dce-"
#	echo $CALLER_KEY
        export SERVER_NAME=server
#	echo $SERVER_NAME
        export SERVER_KEY=server
#	echo $SERVER_KEY
        export CLIENT_NAME=client
#	echo $CLIENT_NAME
        export CLIENT_KEY=client
#	echo $CLIENT_KEY 
		export PROTOCOL=ncadg_ip_udp
#    echo $PROTOCOL 
		export SERVERHOST=`hostname`
#	echo $SERVERHOST

	tet_infoline $PATH
	person="`whoami`"
#	echo $person
	LOGDIR=${LOGDIR:-/tet/test/results}
	LOGFILE=${LOGDIR}/rpc_log.$(date +%h%d_%H:%M)
	> ${LOGFILE}
	link=0 
        if [ -f /usr/bin/dce_login -a ! -f /usr/bin/dce_login_noexec ]
	then
	   ln -s /usr/bin/dce_login /usr/bin/dce_login_noexec >/dev/null
	   link=1
        fi
	KRB5CCNAME=`dce_login_noexec cell_admin -dce-`
	export KRB5CCNAME
        cdscp show directory /.:/NSTEST_DIR 
	if (( $? != 0 ))
	then
        	cdscp create directory /.:/NSTEST_DIR
        fi
#	$control_dir/setup_princ_acct.sh

	# start servers 
	echo "Start server"
	$control_dir/run_server $moretests_dir > server_log 2>&1 
#	$control_dir/run_server $moretests_dir
	sleep 30

}

cleanup()      #cleanup of DCE rpc tests
{
	# kill servers
	ps -ef | grep /moretests/ | grep -v grep | while read line
	do
		set -- $line
		kill $2
	done
	cat server_log | while read line
	do
		tet_infoline "server_log: $line"
	done 
	rm server_log  
	rm COM*
	tet_infoline "`pwd`"
	tet_infoline "END DCE RPC tests: ${TET_PNAME}; DATE: `date`"
	if (( link == 1 ))
	then
		 rm /usr/bin/dce_login_noexec
	         link=0
        fi
}

check_log () { 
	typeset fname="$1"
	typeset string="$2"

	if [ -z "$string" ] ; then 
	   string="FAILED"
        fi
	if grep "$string" $fname > /dev/null ; then
	   return 1
        else
	   return 0
        fi
}



test1()
{
        tet_infoline "DCE RPC TESTS"
#	current_dir=$PWD
#	cd $control_dir  

	tet_infoline "START DCE RPC tests: ${TET_PNAME}; DATE:  `date`" 

#        $testsh_dir/testsh -d63 -I$moretests_dir cmd_line.tsh
		$control_dir/run_client $host $cargs cmd_line

        if (( $? == 0 ))
        then
                 check_log cmd_line.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test1 "cmd_line":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test1 "cmd_line":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test1 "cmd_line":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat cmd_line.log  >> ${LOGFILE}
        rm -f cmd_line.log
#	cd $current_dir
        tet_infoline "END TEST: ${tet_thistest};"
}


test2()
{
        tet_infoline "DCE RPC TESTS"
#	current_dir=$PWD
#	cd $control_dir
        $control_dir/run_client $host $cargs nocode
        if (( $? == 0 ))
        then
                 check_log nocode.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test2 "nocode":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test2 "nocode":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test2 "nocode":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat nocode.log  >> ${LOGFILE}
        rm -f nocode.log
#	cd $current_dir
        tet_infoline "END TEST: ${tet_thistest};"
}


test3()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ary
        if (( $? == 0 ))
        then
                 check_log ary.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test3 "ary":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test3 "ary":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test3 "ary":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ary.log  >> ${LOGFILE}
        rm -f ary.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test4()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs enum
        if (( $? == 0 ))
        then
                 check_log enum.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test4 "enum":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test4 "enum":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test4 "enum":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat enum.log  >> ${LOGFILE}
        rm -f enum.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test5()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs iattr
        if (( $? == 0 ))
        then
                 check_log iattr.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test5 "iattr":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test5 "iattr":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test5 "iattr":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat iattr.log  >> ${LOGFILE}
        rm -f iattr.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test6()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ih
        if (( $? == 0 ))
        then
                 check_log ih.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test6 "ih":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test6 "ih":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test6 "ih":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ih.log  >> ${LOGFILE}
        rm -f ih.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test7()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs outofline
        if (( $? == 0 ))
        then
                 check_log outofline.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test7 "outofline":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test7 "outofline":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test7 "outofline":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat outofline.log  >> ${LOGFILE}
        rm -f outofline.log
        tet_infoline "END TEST: ${tet_thistest};"
}

test8()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs pipe
        if (( $? == 0 ))
        then
                 check_log pipe.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test9 "pipe":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test9 "pipe":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test9 "pipe":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat pipe.log  >> ${LOGFILE}
        rm -f pipe.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test9()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs rattr
        if (( $? == 0 ))
        then
                 check_log rattr.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test10 "rattr":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test10 "rattr":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test10 "rattr":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat rattr.log  >> ${LOGFILE}
        rm -f rattr.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test10()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs rec
        if (( $? == 0 ))
        then
                 check_log rec.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test11 "rec":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test11 "rec":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test11 "rec":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat rec.log  >> ${LOGFILE}
        rm -f rec.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test11()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs repas
        if (( $? == 0 ))
        then
                 check_log repas.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test12 "repas":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test12 "repas":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test12 "repas":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat repas.log  >> ${LOGFILE}
        rm -f repas.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test12()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs scal
        if (( $? == 0 ))
        then
                 check_log scal.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test13 "scal":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test13 "scal":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test13 "scal":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat scal.log  >> ${LOGFILE}
        rm -f scal.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test13()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs spec
        if (( $? == 0 ))
        then
                 check_log spec.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test14 "spec":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test14 "spec":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test14 "spec":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat spec.log  >> ${LOGFILE}
        rm -f spec.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test14()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs string
        if (( $? == 0 ))
        then
                 check_log string.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test15 "string":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test15 "string":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test15 "string":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat string.log  >> ${LOGFILE}
        rm -f string.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test15()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs strz
        if (( $? == 0 ))
        then
                 check_log strz.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test16 "strz":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test16 "strz":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test16 "strz":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat strz.log  >> ${LOGFILE}
        rm -f strz.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test16()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs tattr
        if (( $? == 0 ))
        then
                 check_log tattr.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test17 "tattr":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test17 "tattr":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test17 "tattr":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat tattr.log  >> ${LOGFILE}
        rm -f tattr.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test17()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs vrec
        if (( $? == 0 ))
        then
                 check_log vrec.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test18 "vrec":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test18 "vrec":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test18 "vrec":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat vrec.log  >> ${LOGFILE}
        rm -f vrec.log
        tet_infoline "END TEST: ${tet_thistest};"
}

 
test18()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs pattr
        if (( $? == 0 ))
        then
                 check_log pattr.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test8 "pattr":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test8 "pattr":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test8 "pattr":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat pattr.log  >> ${LOGFILE}
        rm -f pattr.log
        tet_infoline "END TEST: ${tet_thistest};"
}

 

test19()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs uuid_create
        if (( $? == 0 ))
        then
                 check_log uuid_create.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test19 "uuid_create":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test19 "uuid_create":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test19 "uuid_create":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat uuid_create.log  >> ${LOGFILE}
        rm -f uuid_create.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test20()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs uuid_create_nil
        if (( $? == 0 ))
        then
                 check_log uuid_create_nil.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test20 "uuid_create_nil":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test20 "uuid_create_nil":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test20 "uuid_create_nil":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat uuid_create_nil.log  >> ${LOGFILE}
        rm -f uuid_create_nil.log
        tet_infoline "END TEST: ${tet_thistest};"
}
     


test21()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs uuid_compare
        if (( $? == 0 ))
        then
                 check_log uuid_compare.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test21 "uuid_compare":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test21 "uuid_compare":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test21 "uuid_compare":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat uuid_compare.log  >> ${LOGFILE}
        rm -f uuid_compare.log
        tet_infoline "END TEST: ${tet_thistest};"
}

test22()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs uuid_equal
        if (( $? == 0 ))
        then
                 check_log uuid_equal.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test22 "uuid_equal":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test22 "uuid_equal":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test22 "uuid_equal":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat uuid_equal.log  >> ${LOGFILE}
        rm -f uuid_equal.log
        tet_infoline "END TEST: ${tet_thistest};"
}



test23()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs uuid_from_string
        if (( $? == 0 ))
        then
                 check_log uuid_from_string.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test23 "uuid_from_string":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test23 "uuid_from_string":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test23 "uuid_from_string":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat uuid_from_string.log  >> ${LOGFILE}
        rm -f uuid_from_string.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test24()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs uuid_hash
        if (( $? == 0 ))
        then
                 check_log uuid_hash.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test24 "uuid_hash":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test24 "uuid_hash":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test24 "uuid_hash":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat uuid_hash.log  >> ${LOGFILE}
        rm -f uuid_hash.log
        tet_infoline "END TEST: ${tet_thistest};"
}



test25()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs uuid_is_nil 
        if (( $? == 0 ))
        then
                 check_log uuid_is_nil.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test25 "uuid_is_nil":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test25 "uuid_is_nil":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test25 "uuid_is_nil":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat uuid_is_nil.log  >> ${LOGFILE}
        rm -f uuid_is_nil.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test26()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs uuid_to_string 
        if (( $? == 0 ))
        then
                 check_log uuid_to_string.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test26 "uuid_to_string":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test26 "uuid_to_string":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test26 "uuid_to_string":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat uuid_to_string.log  >> ${LOGFILE}
        rm -f uuid_to_string.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test27()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs string_compose
        if (( $? == 0 ))
        then
                 check_log string_compose.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test27 "string_compose":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test27 "string_compose":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test27 "string_compose":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat string_compose.log  >> ${LOGFILE}
        rm -f string_compose.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test28()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs string_parse
        if (( $? == 0 ))
        then
                 check_log string_parse.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test28 "string_parse":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test28 "string_parse":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test28 "string_parse":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat string_parse.log  >> ${LOGFILE}
        rm -f string_parse.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test29()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs string_free
        if (( $? == 0 ))
        then
                 check_log string_free.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test29 "string_free":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test29 "string_free":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test29 "string_free":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat string_free.log  >> ${LOGFILE}
        rm -f string_free.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test30()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs binding_from_string
        if (( $? == 0 ))
        then
                 check_log binding_from_string.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test30 "binding_from_string":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test30 "binding_from_string":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test30 "binding_from_string":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat binding_from_string.log  >> ${LOGFILE}
        rm -f binding_from_string.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test31()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs binding_copy
        if (( $? == 0 ))
        then
                 check_log binding_copy.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test31 "binding_copy":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test31 "binding_copy":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test31 "binding_copy":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat binding_copy.log  >> ${LOGFILE}
        rm -f binding_copy.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test32()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs binding_free
        if (( $? == 0 ))
        then
                 check_log binding_free.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test32 "binding_free":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test32 "binding_free":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test32 "binding_free":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat binding_free.log  >> ${LOGFILE}
        rm -f binding_free.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test33()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs binding_inq_object
        if (( $? == 0 ))
        then
                 check_log binding_inq_object.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test33 "binding_inq_object":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test33 "binding_inq_object":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test33 "binding_inq_object":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat binding_inq_object.log  >> ${LOGFILE}
        rm -f binding_inq_object.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test34()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs binding_reset
        if (( $? == 0 ))
        then
                 check_log binding_reset.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test34 "binding_reset":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test34 "binding_reset":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test34 "binding_reset":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat binding_reset.log  >> ${LOGFILE}
        rm -f binding_reset.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test35()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs binding_server_to_client
        if (( $? == 0 ))
        then
                 check_log binding_server_to_client.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test35 "binding_server_to_client":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test35 "binding_server_to_client":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test35 "binding_server_to_client":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat binding_server_to_client.log  >> ${LOGFILE}
        rm -f binding_server_to_client.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test36()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs binding_set_object
        if (( $? == 0 ))
        then
                 check_log binding_set_object.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test36 "binding_set_object":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test36 "binding_set_object":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test36 "binding_set_object":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat binding_set_object.log  >> ${LOGFILE}
        rm -f binding_set_object.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test37()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs binding_vector_free
        if (( $? == 0 ))
        then
                 check_log binding_vector_free.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test37 "binding_vector_free":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test37 "binding_vector_free":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test37 "binding_vector_free":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat binding_vector_free.log  >> ${LOGFILE}
        rm -f binding_vector_free.log
        tet_infoline "END TEST: ${tet_thistest};"
}



test38()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs error_inq_text
        if (( $? == 0 ))
        then
                 check_log error_inq_text.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test38 "error_inq_text":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test38 "error_inq_text":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test38 "error_inq_text":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat error_inq_text.log  >> ${LOGFILE}
        rm -f error_inq_text.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test39()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs object_set_type
        if (( $? == 0 ))
        then
                 check_log object_set_type.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test39 "object_set_type":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test39 "object_set_type":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test39 "object_set_type":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat object_set_type.log  >> ${LOGFILE}
        rm -f object_set_type.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test40()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs object_inq_type
        if (( $? == 0 ))
        then
                 check_log object_inq_type.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test40 "object_inq_type":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test40 "object_inq_type":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test40 "object_inq_type":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat object_inq_type.log  >> ${LOGFILE}
        rm -f object_inq_type.log
        tet_infoline "END TEST: ${tet_thistest};"
}



test41()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs mgmt_inq_com_timeout
        if (( $? == 0 ))
        then
                 check_log mgmt_inq_com_timeout.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test41 "mgmt_inq_com_timeout":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test41 "mgmt_inq_com_timeout":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test41 "mgmt_inq_com_timeout":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat mgmt_inq_com_timeout.log  >> ${LOGFILE}
        rm -f mgmt_inq_com_timeout.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test42()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs mgmt_inq_if_ids
        if (( $? == 0 ))
        then
                 check_log mgmt_inq_if_ids.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test42 "mgmt_inq_if_ids":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test42 "mgmt_inq_if_ids":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test42 "mgmt_inq_if_ids":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat mgmt_inq_if_ids.log  >> ${LOGFILE}
        rm -f mgmt_inq_if_ids.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test43()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs mgmt_inq_stats
        if (( $? == 0 ))
        then
                 check_log mgmt_inq_stats.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test43 "mgmt_inq_stats":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test43 "mgmt_inq_stats":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test43 "mgmt_inq_stats":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat mgmt_inq_stats.log  >> ${LOGFILE}
        rm -f mgmt_inq_stats.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test44()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs mgmt_set_com_timeout
        if (( $? == 0 ))
        then
                 check_log mgmt_set_com_timeout.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test44 "mgmt_set_com_timeout":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test44 "mgmt_set_com_timeout":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test44 "mgmt_set_com_timeout":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat mgmt_set_com_timeout.log  >> ${LOGFILE}
        rm -f mgmt_set_com_timeout.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test45()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs mgmt_set_server_stack
        if (( $? == 0 ))
        then
                 check_log mgmt_set_server_stack.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test45 "mgmt_set_server_stack":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test45 "mgmt_set_server_stack":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test45 "mgmt_set_server_stack":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat mgmt_set_server_stack.log  >> ${LOGFILE}
        rm -f mgmt_set_server_stack.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test46()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs mgmt_stop_server_listening 
        if (( $? == 0 ))
        then
                 check_log mgmt_stop_server_listening.log
                 if (( $? == 0 )) ; then
			  print "PASSED, Test46 "mgmt_stop_server_listening":    Test ran successfully."
			  tet_result PASS
                 else
			  print "FAILED, Test46 "mgmt_stop_server_listening":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test46 "mgmt_stop_server_listening":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat mgmt_stop_server_listening.log  >> ${LOGFILE}
        rm -f mgmt_stop_server_listening.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test47()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs mgmt_ep_elt_inq
        if (( $? == 0 ))
        then
                 check_log mgmt_ep_elt_inq.log 
                 if (( $? == 0 )) ; then
                          print "PASSED, Test47 "mgmt_ep_elt_inq":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test47 "mgmt_ep_elt_inq":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test47 "mgmt_ep_elt_inq":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat mgmt_ep_elt_inq.log  >> ${LOGFILE}
        rm -f mgmt_ep_elt_inq.log
        tet_infoline "END TEST: ${tet_thistest};"
}      

test48()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs protseqs
        if (( $? == 0 ))
        then
                 check_log protseqs.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test48 "protseqs":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test48 "protseqs":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test48 "protseqs":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat protseqs.log  >> ${LOGFILE}
        rm -f protseqs.log
        tet_infoline "END TEST: ${tet_thistest};"
}


            
test49()
{
	tet_infoline "DCE RPC TESTS"
	$control_dir/run_client $host $cargs inq_auth_client
	if (( $? == 0 ))
	then
		 check_log inq_auth_client.log
        	 if (( $? == 0 )) ; then
		          print "PASSED, Test49 "inq_auth_client":    Test ran successfully."
	                  tet_result PASS
                 else
        		  print "FAILED, Test49 "inq_auth_client":    Test ran unsuccessfully."
			  tet_result FAIL
		 fi
        else
	         print "FAILED, Test49 "inq_auth_client":     Test ran unsuccessfully."
	         tet_result FAIL
        fi
        cat inq_auth_client.log  >> ${LOGFILE}
        rm -f inq_auth_client.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test50()
{
	tet_infoline "DCE RPC TESTS"
	$control_dir/run_client $host $cargs inq_auth_info 
	if (( $? == 0 ))
	then
		 check_log inq_auth_info.log
        	 if (( $? == 0 )) ; then
		          print "PASSED, Test50 "inq_auth_info":    Test ran successfully."
	                  tet_result PASS
                 else
        		  print "FAILED, Test50 "inq_auth_info":    Test ran unsuccessfully."
			  tet_result FAIL
		 fi
        else
	         print "FAILED, Test50 "inq_auth_info":     Test ran unsuccessfully."
	         tet_result FAIL
        fi
        cat inq_auth_info.log  >> ${LOGFILE}
        rm -f inq_auth_info.log
        tet_infoline "END TEST: ${tet_thistest};"
}



test51()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs mgmt_inq_dflt_authn_level 
        if (( $? == 0 ))
        then
                 check_log mgmt_inq_dflt_authn_level.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test51 "mgmt_inq_dflt_authn_level":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test51 "mgmt_inq_dflt_authn_level":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test51 "mgmt_inq_dflt_authn_level":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat mgmt_inq_dflt_authn_level.log  >> ${LOGFILE}
        rm -f mgmt_inq_dflt_authn_level.log
        tet_infoline "END TEST: ${tet_thistest};"
}



test52()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs mgmt_set_authz_fn
        if (( $? == 0 ))
        then
                 check_log mgmt_set_authz_fn.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test52 "mgmt_set_authz_fn":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test52 "mgmt_set_authz_fn":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test52 "mgmt_set_authz_fn":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat mgmt_set_authz_fn.log  >> ${LOGFILE}
        rm -f mgmt_set_authz_fn.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test53()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs svr_reg_auth_info
        if (( $? == 0 ))
        then
                 check_log svr_reg_auth_info.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test53 "svr_reg_auth_info":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test53 "svr_reg_auth_info":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test53 "svr_reg_auth_info":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat svr_reg_auth_info.log  >> ${LOGFILE}
        rm -f svr_reg_auth_info.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test54()
{
        tet_infoline "DCE RPC TESTS"  
		
       $control_dir/run_client $host $cargs set_auth_info
        if (( $? == 0 ))
        then
                 check_log set_auth_info.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test54 "set_auth_info":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test54 "set_auth_info":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test54 "set_auth_info":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat set_auth_info.log  >> ${LOGFILE}
        rm -f set_auth_info.log
        tet_infoline "END TEST: ${tet_thistest};"
}



test55()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs if_reg_auth_info
        if (( $? == 0 ))
        then
                 check_log if_reg_auth_info.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test55 "if_reg_auth_info":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test55 "if_reg_auth_info":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test55 "if_reg_auth_info":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat if_reg_auth_info.log  >> ${LOGFILE}
        rm -f if_reg_auth_info.log
        tet_infoline "END TEST: ${tet_thistest};"
}   

test56()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_binding_export
        if (( $? == 0 ))
        then
                 check_log ns_binding_export.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test56 "ns_binding_export":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test56 "ns_binding_export":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test56 "ns_binding_export":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_binding_export.log  >> ${LOGFILE}
        rm -f ns_binding_export.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test57()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_binding_unexport
        if (( $? == 0 ))
        then
                 check_log ns_binding_unexport.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test57 "ns_binding_unexport":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test57 "ns_binding_unexport":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test57 "ns_binding_unexport":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_binding_unexport.log  >> ${LOGFILE}
        rm -f ns_binding_unexport.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test58()
{
	tet_infoline "DCE RPC TESTS"
	$control_dir/run_client $host $cargs ns_mgmt_binding_unexport 
	if (( $? == 0 ))
	then
		 check_log ns_mgmt_binding_unexport.log
        	 if (( $? == 0 )) ; then
		          print "PASSED, Test58 "ns_mgmt_binding_unexport":    Test ran successfully."
	                  tet_result PASS
                 else
        		  print "FAILED, Test58 "ns_mgmt_binding_unexport":    Test ran unsuccessfully."
			  tet_result FAIL
		 fi
        else
	         print "FAILED, Test58 "ns_mgmt_binding_unexport":     Test ran unsuccessfully."
	         tet_result FAIL
        fi
        cat ns_mgmt_binding_unexport.log  >> ${LOGFILE}
        rm -f ns_mgmt_binding_unexport.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test59()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_entry_object_inq
        if (( $? == 0 ))
        then
                 check_log ns_entry_object_inq.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test59 "ns_entry_object_inq":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test59 "ns_entry_object_inq":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test59 "ns_entry_object_inq":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_entry_object_inq.log  >> ${LOGFILE}
        rm -f ns_entry_object_inq.log
        tet_infoline "END TEST: ${tet_thistest};"
}

test60()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_entry_inq_if_ids
        if (( $? == 0 ))
        then
                 check_log ns_entry_inq_if_ids.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test60 "ns_entry_inq_if_ids":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test60 "ns_entry_inq_if_ids":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test60 "ns_entry_inq_if_ids":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_entry_inq_if_ids.log  >> ${LOGFILE}
        rm -f ns_entry_inq_if_ids.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test61()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_binding_select
        if (( $? == 0 ))
        then
                 check_log ns_binding_select.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test61 "ns_binding_select":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test61 "ns_binding_select":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test61 "ns_binding_select":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_binding_select.log  >> ${LOGFILE}
        rm -f ns_binding_select.log
        tet_infoline "END TEST: ${tet_thistest};"
}
    
test62()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_binding_import_begin
        if (( $? == 0 ))
        then
                 check_log ns_binding_import_begin.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test62 "ns_binding_import_begin":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test62 "ns_binding_import_begin":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test62 "ns_binding_import_begin":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_binding_import_begin.log  >> ${LOGFILE}
        rm -f ns_binding_import_begin.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test63()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_binding_import_done
        if (( $? == 0 ))
        then
                 check_log ns_binding_import_done.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test63 "ns_binding_import_done":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test63 "ns_binding_import_done":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test63 "ns_binding_import_done":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_binding_import_done.log  >> ${LOGFILE}
        rm -f ns_binding_import_done.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test64()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_binding_import_next
        if (( $? == 0 ))
        then
                 check_log ns_binding_import_next.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test64 "ns_binding_import_next":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test64 "ns_binding_import_next":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test64 "ns_binding_import_next":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_binding_import_next.log  >> ${LOGFILE}
        rm -f ns_binding_import_next.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test65()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_binding_lookup_begin
        if (( $? == 0 ))
        then
                 check_log ns_binding_lookup_begin.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test65 "ns_binding_lookup_begin":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test65 "ns_binding_lookup_begin":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test65 "ns_binding_lookup_begin":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_binding_lookup_begin.log  >> ${LOGFILE}
        rm -f ns_binding_lookup_begin.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test66()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_binding_lookup_done
        if (( $? == 0 ))
        then
                 check_log ns_binding_lookup_done.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test66 "ns_binding_lookup_done":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test66 "ns_binding_lookup_done":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test66 "ns_binding_lookup_done":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_binding_lookup_done.log  >> ${LOGFILE}
        rm -f ns_binding_lookup_done.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test67()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_binding_lookup_next
        if (( $? == 0 ))
        then
                 check_log ns_binding_lookup_next.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test67 "ns_binding_lookup_next":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test67 "ns_binding_lookup_next":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test67 "ns_binding_lookup_next":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_binding_lookup_next.log  >> ${LOGFILE}
        rm -f ns_binding_lookup_next.log
        tet_infoline "END TEST: ${tet_thistest};"
}



test68()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_profile_elt_inq_begin
        if (( $? == 0 ))
        then
                 check_log ns_profile_elt_inq_begin.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test68 "ns_profile_elt_inq_begin":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test68 "ns_profile_elt_inq_begin":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test68 "ns_profile_elt_inq_begin":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_profile_elt_inq_begin.log  >> ${LOGFILE}
        rm -f ns_profile_elt_inq_begin.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test69()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_profile_elt_inq_next
        if (( $? == 0 ))
        then
                 check_log ns_profile_elt_inq_next.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test69 "ns_profile_elt_inq_next":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test69 "ns_profile_elt_inq_next":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test69 "ns_profile_elt_inq_next":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_profile_elt_inq_next.log  >> ${LOGFILE}
        rm -f ns_profile_elt_inq_next.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test70()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_profile_elt_inq_done
        if (( $? == 0 ))
        then
                 check_log ns_profile_elt_inq_done.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test70 "ns_profile_elt_inq_done":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test70 "ns_profile_elt_inq_done":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test70 "ns_profile_elt_inq_done":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_profile_elt_inq_done.log  >> ${LOGFILE}
        rm -f ns_profile_elt_inq_done.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test71()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_profile_elt_add
        if (( $? == 0 ))
        then
                 check_log ns_profile_elt_add.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test71 "ns_profile_elt_add":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test71 "ns_profile_elt_add":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test71 "ns_profile_elt_add":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_profile_elt_add.log  >> ${LOGFILE}
        rm -f ns_profile_elt_add.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test72()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_profile_delete
        if (( $? == 0 ))
        then
                 check_log ns_profile_delete.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test72 "ns_profile_delete":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test72 "ns_profile_delete":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test72 "ns_profile_delete":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_profile_delete.log  >> ${LOGFILE}
        rm -f ns_profile_delete.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test73()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs ns_profile_elt_remove
        if (( $? == 0 ))
        then
                 check_log ns_profile_elt_remove.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test73 "ns_profile_elt_remove":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test73 "ns_profile_elt_remove":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test73 "ns_profile_elt_remove":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat ns_profile_elt_remove.log  >> ${LOGFILE}
        rm -f ns_profile_elt_remove.log
        tet_infoline "END TEST: ${tet_thistest};"
}







test74()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs group_mbr_inq_begin
        if (( $? == 0 ))
        then
                 check_log group_mbr_inq_begin.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test74 "group_mbr_inq_begin":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test74 "group_mbr_inq_begin":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test74 "group_mbr_inq_begin":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat group_mbr_inq_begin.log  >> ${LOGFILE}
        rm -f group_mbr_inq_begin.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test75()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs group_mbr_inq_done
        if (( $? == 0 ))
        then
                 check_log group_mbr_inq_done.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test75 "group_mbr_inq_done":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test75 "group_mbr_inq_done":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test75 "group_mbr_inq_done":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat group_mbr_inq_done.log  >> ${LOGFILE}
        rm -f group_mbr_inq_done.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test76()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs group_mbr_inq_next
        if (( $? == 0 ))
        then
                 check_log group_mbr_inq_next.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test76 "group_mbr_inq_next":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test76 "group_mbr_inq_next":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test76 "group_mbr_inq_next":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat group_mbr_inq_next.log  >> ${LOGFILE}
        rm -f group_mbr_inq_next.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test77()
{
	tet_infoline "DCE RPC TESTS"
	$control_dir/run_client $host $cargs group_mbr_add 
	if (( $? == 0 ))
	then
		 check_log group_mbr_add.log
        	 if (( $? == 0 )) ; then
		          print "PASSED, Test77 "group_mbr_add":    Test ran successfully."
	                  tet_result PASS
                 else
        		  print "FAILED, Test77 "group_mbr_add":    Test ran unsuccessfully."
			  tet_result FAIL
		 fi
        else
	         print "FAILED, Test77 "group_mbr_add":     Test ran unsuccessfully."
	         tet_result FAIL
        fi
        cat group_mbr_add.log  >> ${LOGFILE}
        rm -f group_mbr_add.log
        tet_infoline "END TEST: ${tet_thistest};"
}

test78()
{
	tet_infoline "DCE RPC TESTS"
	$control_dir/run_client $host $cargs group_mbr_remove 
	if (( $? == 0 ))
	then
		 check_log group_mbr_remove.log
        	 if (( $? == 0 )) ; then
		          print "PASSED, Test78 "group_mbr_remove":    Test ran successfully."
	                  tet_result PASS
                 else
        		  print "FAILED, Test78 "group_mbr_remove":    Test ran unsuccessfully."
			  tet_result FAIL
		 fi
        else
	         print "FAILED, Test78 "group_mbr_remove":     Test ran unsuccessfully."
	         tet_result FAIL
        fi
        cat group_mbr_remove.log  >> ${LOGFILE}
        rm -f group_mbr_remove.log
        tet_infoline "END TEST: ${tet_thistest};"
}
 

test79()
{
	tet_infoline "DCE RPC TESTS"
	$control_dir/run_client $host $cargs ns_mgmt_entry_create 
	if (( $? == 0 ))
	then
		 check_log ns_mgmt_entry_create.log
        	 if (( $? == 0 )) ; then
		          print "PASSED, Test79 "ns_mgmt_entry_create":    Test ran successfully."
	                  tet_result PASS
                 else
        		  print "FAILED, Test79 "ns_mgmt_entry_create":    Test ran unsuccessfully."
			  tet_result FAIL
		 fi
        else
	         print "FAILED, Test79 "ns_mgmt_entry_create":     Test ran unsuccessfully."
	         tet_result FAIL
        fi
        cat ns_mgmt_entry_create.log  >> ${LOGFILE}
        rm -f ns_mgmt_entry_create.log
        tet_infoline "END TEST: ${tet_thistest};"
}

test80()
{
	tet_infoline "DCE RPC TESTS"
	$control_dir/run_client $host $cargs ns_mgmt_entry_delete 
	if (( $? == 0 ))
	then
		 check_log ns_mgmt_entry_delete.log
        	 if (( $? == 0 )) ; then
		          print "PASSED, Test80 "ns_mgmt_entry_delete":    Test ran successfully."
	                  tet_result PASS
                 else
        		  print "FAILED, Test80 "ns_mgmt_entry_delete":    Test ran unsuccessfully."
			  tet_result FAIL
		 fi
        else
	         print "FAILED, Test80 "ns_mgmt_entry_delete":     Test ran unsuccessfully."
	         tet_result FAIL
        fi
        cat ns_mgmt_entry_delete.log  >> ${LOGFILE}
        rm -f ns_mgmt_entry_delete.log
        tet_infoline "END TEST: ${tet_thistest};"
}
                    






test81()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs client
        if (( $? == 0 ))
        then
                 check_log client.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test81 "client":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test81 "client":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test81 "client":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat client.log  >> ${LOGFILE}
        rm -f client.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test82()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs interface
        if (( $? == 0 ))
        then
                 check_log interface.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test82 "interface":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test82 "interface":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test82 "interface":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat interface.log  >> ${LOGFILE}
        rm -f interface.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test83()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs network
        if (( $? == 0 ))
        then
                 check_log network.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test83 "network":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test83 "network":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test83 "network":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat network.log  >> ${LOGFILE}
        rm -f network.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test84()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs binding
        if (( $? == 0 ))
        then
                 check_log binding.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test84 "binding":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test84 "binding":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test84 "binding":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat binding.log  >> ${LOGFILE}
        rm -f binding.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test85()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs uuid
        if (( $? == 0 ))
        then
                 check_log uuid.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test85 "uuid":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test85 "uuid":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test85 "uuid":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat uuid.log  >> ${LOGFILE}
        rm -f uuid.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test86()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs server
        if (( $? == 0 ))
        then
                 check_log server.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test86 "server":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test86 "server":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test86 "server":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat server.log  >> ${LOGFILE}
        rm -f server.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test87()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs srvrif
        if (( $? == 0 ))
        then
                 check_log srvrif.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test87 "srvrif":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test87 "srvrif":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test87 "srvrif":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat srvrif.log  >> ${LOGFILE}
        rm -f srvrif.log
        tet_infoline "END TEST: ${tet_thistest};"
}


test88()
{
        tet_infoline "DCE RPC TESTS"
        $control_dir/run_client $host $cargs clisrv
        if (( $? == 0 ))
        then
                 check_log clisrv.log
                 if (( $? == 0 )) ; then
                          print "PASSED, Test88 "clisrv":    Test ran successfully."
                          tet_result PASS
                 else
                          print "FAILED, Test88 "clisrv":    Test ran unsuccessfully."
                          tet_result FAIL
                 fi
        else
                 print "FAILED, Test88 "clisrv":     Test ran unsuccessfully."
                 tet_result FAIL
        fi
        cat clisrv.log  >> ${LOGFILE}
        rm -f clisrv.log
        tet_infoline "END TEST: ${tet_thistest};"
}

test89()
{
	tet_infoline "DCE RPC TESTS"
	$control_dir/run_client $host $cargs ns_mgmt_exp_age 
	if (( $? == 0 ))
	then
		 check_log ns_mgmt_exp_age.log
        	 if (( $? == 0 )) ; then
		          print "PASSED, Test89 "ns_mgmt_exp_age":    Test ran successfully."
	                  tet_result PASS
                 else
        		  print "FAILED, Test89 "ns_mgmt_exp_age":    Test ran unsuccessfully."
			  tet_result FAIL
		 fi
        else
	         print "FAILED, Test89 "ns_mgmt_exp_age":     Test ran unsuccessfully."
	         tet_result FAIL
        fi
        cat ns_mgmt_exp_age.log  >> ${LOGFILE}
        rm -f ns_mgmt_exp_age.log
        tet_infoline "END TEST: ${tet_thistest};"
}



#source tcm
. ${TET_ROOT:?}/lib/ksh/tcm.ksh

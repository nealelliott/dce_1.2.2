/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1994, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 * 
 */
/*
 * HISTORY
 * $Log: dcdrel001b.idl,v $
 * Revision 1.1.4.2  1996/03/11  02:38:21  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  20:05:20  marty]
 *
 * Revision 1.1.4.1  1995/12/11  21:55:33  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  20:55:31  root]
 * 
 * Revision 1.1.2.1  1994/07/21  21:27:17  fadden
 * 	Initial version after renaming
 * 	[1994/07/21  20:37:44  fadden]
 * 
 * $EndLog$
 */
/* 
 * NAME
 * 
 *   dcdrel001b.idl  
 *
 * COMPONENT
 *   
 *   DCE dced system test
 *   
 * ABSTRACT
 *
 *   This module defines an interface for a set of server routines which
 *   are used in the DCDREL001 system test.
 *
 */

[
uuid(00808b4e-7769-1e1c-a038-0000c019da56),
version(1.0)
]

interface dcdrel001b 
{
    typedef 
        [string] char uuidst_b[37];

    /* define a structure containing a conformant array, which is 
     * compatible with uuid_vector_t
     */

    typedef struct 
    {
	unsigned32 count;
	[size_is(count)] uuid_p_t   uuid[];
    }  uuid_vec_b_t;   
    

/* ______________________________________________________________ */

    /* register_uuid_all_protseqs_b - registers an obj with specified uuid */
    [idempotent] void register_uuid_all_protseqs_b(
	[in]		handle_t	h,
	[in,string]	uuidst_b        ustring,
	[out]		error_status_t	*st
    );

    /* unregister_uuid_all_protseqs_b - unregisters obj with specified uuid */
    [idempotent] void unregister_uuid_all_protseqs_b(
	[in]		handle_t	h,
	[in,string]	uuidst_b         ustring,
	[out]		error_status_t	*st
    );

    /* register_uuid_vec_all_protseqsb - request server to register with the
     * endpoint mapper a uuid vector (passed as a conformant array) 
     * with all current protseqs 
     */ 
    [idempotent] void register_uuid_vec_all_protseqsb(
	[in]		handle_t	h,
	[in]		uuid_vec_b_t    *obj_vec,
	[out]		error_status_t	*st
    );

    /* unregister_obj_all_protseqs_b  - get object uuid from this binding 
     *                  and unregister it
     */
    [idempotent] void unregister_obj_all_protseqs_b(
	[in]		handle_t	h,
	[out]		error_status_t	*st
    );

}

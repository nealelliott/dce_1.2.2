#!/bin/ksh
#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994, 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# 
# HISTORY
# $Log: xoms_st,v $
# Revision 1.1.4.2  1996/03/11  02:05:42  marty
# 	Update OSF copyright years
# 	[1996/03/10  19:49:55  marty]
#
# Revision 1.1.4.1  1995/12/11  19:47:39  root
# 	Submit OSF/DCE 1.2.1
# 	[1995/12/11  19:25:06  root]
# 
# 	Submit OSF/DCE 1.2.1
# 	[1995/12/11  18:16:20  root]
# 
# Revision 1.1.2.9  1994/08/17  11:51:50  marrek
# 	Use uname -n .
# 	[1994/08/17  07:37:31  marrek]
# 
# Revision 1.1.2.8  1994/08/01  12:27:30  marrek
# 	Fixes for OT 10742, 11357, 11432.
# 	[1994/08/01  12:26:27  marrek]
# 
# Revision 1.1.2.7  1994/07/15  16:58:28  keutel
# 	OT 11316: unsetting of XDS_LOG and D2_LOG removed
# 	[1994/07/15  15:29:59  keutel]
# 
# Revision 1.1.2.6  1994/07/06  15:55:35  marrek
# 	Add version string in July 1994 code drop.
# 	[1994/07/06  15:45:01  marrek]
# 
# Revision 1.1.2.5  1994/06/21  14:30:00  marrek
# 	June 1994 code submission.
# 	[1994/06/16  07:51:30  marrek]
# 
# Revision 1.1.2.4  1994/06/10  20:42:29  devsrc
# 	cr10872 - fixed copyright
# 	[1994/06/10  17:14:51  devsrc]
# 
# Revision 1.1.2.3  1994/05/23  17:42:33  zeliff
# 	ot10705: fix tet lock problem
# 	[1994/05/23  15:56:12  zeliff]
# 
# Revision 1.1.2.2  1994/05/18  22:10:50  zeliff
# 	ot10695: fix testcases mismatch
# 	[1994/05/18  21:54:14  zeliff]
# 
# 	ot10647: added prefixs for script invocations
# 	[1994/05/15  21:03:21  zeliff]
# 
# Revision 1.1.2.1  1994/05/10  15:09:57  marrek
# 	Add shell interpreter in first line.
# 	[1994/05/09  09:13:46  marrek]
# 
# 	Created in April 1994 submission.
# 	[1994/05/03  12:19:21  marrek]
# 
# $EndLog$
#
# $RCSfile: xoms_st,v $ $Revision: 1.1.4.2 $ $Date: 1996/03/11 02:05:42 $
#
#  (c) Copyright 1991-1994 Siemens-Nixdorf Information Systems
#  Munich, Germany
#  All Rights Reserved
#
# xoms_st
# NAME xoms_st
#
# DESC
# {
# GDS XOM/Convenience Tests (single threaded mode)
# Each invocable component runs the 'xt_test -i' executable using as standard
# input the batch file specified in each strategy statement.
# Also, the DIT must already contain at least the two following object:
#  DSA1:        /C=de/O=dbp/OU=dap11/CN=dsa/CN=dsa-m1
#  DSA2:        /C=de/O=dbp/OU=dap11/CN=dsa/CN=dsa-m2
# }
#

TP_PATH="lib/"
_HOST_NAME=`uname -n`

tet_startup="Startup"			# startup function
tet_cleanup="Cleanup"			# cleanup function

iclist="ic1 ic2 ic3 ic4 ic5"

ic1="tp1"				# functions for ic1
ic2="tp3"				# functions for ic2
ic3="tp1"				# functions for ic3
ic4="tp4"				# functions for ic4
ic5="tp1"				# functions for ic5

tp1() {
	tet_infoline "Convenience/XOM - cleantree"
	$API_SCRIPTS/cleantree "${TP_PATH}"
}

tp3() {
        tet_infoline "Convenience/XOM - valid Testcases"
        $API_SCRIPTS/TEST "${TP_PATH}"valid > /tmp/test_trace 2>&1
        check_ERROR_xds "${TP_PATH}valid.$_HOST_NAME.result" 0 1
}

tp4() {
        tet_infoline "Convenience/XOM - invalid Testcases"
        $API_SCRIPTS/TEST "${TP_PATH}"invalid > /tmp/test_trace 2>&1
        check_ERROR_xds "${TP_PATH}invalid.$_HOST_NAME.result" 0 1
}

Cleanup() {
        rm -f /tmp/test_trace
        if [[ -z "$KEEP_API_LOGS" ]]
        then
          find ${TET_EXECUTE}/xoms/lib/valid -name *.log -exec rm -f {} \;
          find ${TET_EXECUTE}/xoms/lib/invalid -name *.log -exec rm -f {} \;
        fi
        rm -f ${TET_EXECUTE}/xoms/save*
	tet_infoline "TESTING (XOM/Convenience) with XT_TEST FINISHED"
}

Startup() {
        export  XT_TEST_FLAGS="-c"
	export_paths
        rm -f ${TET_EXECUTE}/tet.log
	tet_infoline "TESTING (XOM/Convenience) with XT_TEST STARTED"
        . ${TET_EXECUTE}/config/two_dsas.sh
}

#source shell common functions
. ${TET_EXECUTE}/lib/shfuncs

#execute shell test case manager - must be last line
. ${TET_ROOT}/lib/xpg3sh/tcm.sh


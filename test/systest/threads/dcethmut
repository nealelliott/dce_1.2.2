#!/bin/ksh
#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
#
# HISTORY
# $Log: dcethmut,v $
# Revision 1.1.15.2  1996/03/11  02:49:02  marty
# 	Update OSF copyright years
# 	[1996/03/10  20:09:44  marty]
#
# Revision 1.1.15.1  1995/12/11  22:49:28  root
# 	Submit OSF/DCE 1.2.1
# 
# 	HP revision /main/HPDCE02/1  1994/07/05  18:05 UTC  bissen
# 	Merge hpdce02 (DCE 1.1 beta) and HPDCE01 into HPDCE02
# 
# 	HP revision /main/HPDCE01/2  1994/04/12  15:45 UTC  truitt
# 
# 	HP revision /main/HPDCE01/truitt_junk/1  1994/04/12  15:31 UTC  truitt
# 	clean up reference to profile
# 
# 	HP revision /main/HPDCE01/1  1994/01/31  19:55  bissen
# 	merge kk and hpdce01
# 	[1995/12/11  22:23:12  root]
# 
# Revision 1.1.7.2  1993/07/09  14:56:48  root
# 	Initial King Kong branch
# 	[1993/07/09  14:56:21  root]
# 
# Revision 1.1.5.3  1993/04/27  14:51:26  eheller
# 	Removed characters left behind by the emerge operation
# 	[1993/04/27  14:50:44  eheller]
# 
# Revision 1.1.5.2  1993/04/23  13:52:54  eheller
# 	Merged time looping changes
# 	[1993/04/23  13:27:13  eheller]
# 
# 	Merged Hp_dce1_0_1 changes
# 	[1993/04/16  17:14:47  eheller]
# 
# Revision 1.1.1.7  1993/03/11  22:14:56  osfrcs
# 	    Loading drop DCE1_0_2B18
# 
# Revision 1.1.5.2  1993/02/05  15:26:33  cjd
# 	Embedded copyright notice
# 	[1993/02/05  14:47:48  cjd]
# 
# Revision 1.1.3.2  1993/02/04  22:18:55  cjd
# 	Embedded copyright notice
# 
# Revision 1.1.3.2  1992/11/04  18:38:47  mgm
# 	Ported to TET on HPUX
# 	[1992/11/04  18:37:56  mgm]
# 	Revision 1.1.2.2  1992/06/07  15:43:27  ramb
# 	Changed script to pass in number_of_threads as an argument when
# 	dcethmut_c program is invoked. The number_of_threads is derived from
# 	the environment variable NUMBER_OF_THREADS.
# 	[1992/04/06  15:24:33  ramb]
# 
# Revision 1.1.1.4  1992/06/16  06:49:28  root
# 	    Loading drop Dce1_0_1b19
# 
# $EndLog$
#
#
#   TEST_NAME: dcethmut
#
#   COMPONENT_NAME: dce.systest
#
#
#   (C) COPYRIGHT International Business Machines Corp. 1991
#   All Rights Reseprvbed
#
#
#   FILES: dcethmut
#	   dcethmut_c - prvb_mut_001.c.orig
#	   cts_test.h
#	   cts_test.c
#
#   REQUIREMENTS:
#      Threads
#      Note:  This testcase expects certain environment variables to be set
#	      prior to execution.  The skeleton driver set the following
#	      variables:  NUMBER_OF_THREADS
#
#   RESTRICTIONS:
#      None
#
#   USAGE:
#	Run from driver in $TET_ROOT/threads/bin/run.thr
#
#   TESTCASE OVERVIEW:
#
#	dcethmut is designed to exercise the ability of creating threads and
#	using mutual exclusion primitives.
#
#       dcethmut_c creates a NUBMER_OF_THREADS which and then has each one
#       lock and unlock the same mutex repeatedly. 
#
#   HISTORY: 12/11/90   Gerald Cantor     Initial code
#
#	     11/04/92	Mary MacGregor	  Ported to TET on HPUX
#	
tet_startup="startup"
tet_cleanup="cleanup"
iclist="ic1"
ic1="do_tests"
#ic1="run_tests"
#ic2="check_results"

startup()
{
	tet_infoline "Creating threads using mutual exclusion primitives"
	tet_infoline "Log workstation parameters"
	tet_infoline "Number of threads =	$NUMBER_OF_THREADS"
	tet_infoline "Processes =		$PROCESSES"
}

cleanup()
{
	rm $STTMPDIR/dcethmut.res.*
}

do_tests()
{
        error=0
        CURRENT_LOOP=1
        SECONDS=0
        SECONDS_TO_EXECUTE=`awk "BEGIN { printf (\"%d\", 3600 * $RUN_TIME); exit; }"`
        while [ $SECONDS -lt $SECONDS_TO_EXECUTE ]
        do
                tet_infoline "starting iteration $CURRENT_LOOP"
                run_tests
                check_results
                cleanup
                CURRENT_LOOP=`expr $CURRENT_LOOP + 1`
        done

        if [ $error -ne 0 ]
        then
                tet_infoline "ERROR:Dcethmut threads test failed"
                tet_result DCE_ERROR
        else
                tet_infoline "Dcethmut threads test succeeded"
                tet_result PASS
        fi
}


run_tests()
{
	I=0

	tet_infoline "Starting dcethmut $PROCESSES time(s)"
        while [ "$I" -ne "$PROCESSES" ]
        do
                (./dcethmut_c $NUMBER_OF_THREADS 2>&1 | tee -a $STTMPDIR/dcethmut.res.$I) &
		PIDS="$PIDS""$! "
		I=`expr $I + 1`
        done

	tet_infoline "Waiting for processes to complete"
	for PID in $PIDS
	do
		wait $PID
	done

# If you get here, then all processes have completed
# Otherwise, a process is hung

	return
}

check_results()
{
	I=0

        tet_infoline "Checking results"
        while [ "$I" -ne "$PROCESSES" ]
        do
                grep PASSED "$STTMPDIR/dcethmut.res.$I" > /dev/null
                if [ "$?" != 0 ]
                then
                        error=1
                        tet_infoline "Iteration $I of $FILE failed"
                fi
		I=`expr $I + 1`
        done
	
	return
}

. $TET_ROOT/profile.dcest
. ./dcethmut.data
. $TET_ROOT/lib/ksh/tcm.ksh


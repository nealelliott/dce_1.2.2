#
# ID: $Id: savedb-1.1e,v 1.5 1996/01/21 09:48:44 hyer Exp $
#
# COMPONENT_NAME: bak
#
# The following functions list may not be complete.
# Functions defined by/via macros may not be included.
#
# FUNCTIONS:
#
#
# ORIGINS: Transarc Corp.
#
# (C) COPYRIGHT Transarc Corp. 1994
# All Rights Reserved
# Licensed Materials - Property of Transarc
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with Transarc Corp
#
# HISTORY
# $TALog: savedb-1.1e,v $
# Revision 1.5  1996/01/21  09:48:44  hyer
# Changes to make the backup test scripts with the callout routines for
# mount and unmount in DCE 1.2.
#
# Added cm checkfilesets and cleaned up test to run with callout routines
# [from r1.4 by delta hyer-7265-backup-test-mods-for-callout-routines, r1.1]
#
# Revision 1.4  1995/12/06  15:25:32  hyer
# The backup test scripts were not working. Most of the tests either
# failed or never ran. Made significant changes to all scripts to make
# them work:
#
# Added function CATCHEXEC that does the same thing as catch "exec ..."
# but also displays each command and the response as well as any error codes
# that are returned from the exec.
#
# Added a loop in is_butc_ready to wait up to 200 seconds for the butc
# process to start, sleeping 10 seconds between checks.
#
# Changed the expected command output to match the messages generated
# by the current version of the code.
#
# Added sleeps around some of the tape I/O commands to keep them from
# failing because the device wasn't ready.
#
# Added chmod ogu+rwx commands after each fts crmount to give the test
# scripts access to the test filesets
#
#
# [from r1.2 by delta hyer-7109-backup-test-changes, r1.1]
#
# Revision 1.3  1995/11/29  17:14:08  hyer
# Delta for changes made to the backup scripts to get the backup tests running.
# Several changes were made to get the tests to run:
#
# 1. A loop was added to is_butc_ready to retry the status command
#    every 10 seconds, and time out after 200 seconds. The tests were
#    not being run because it can take over 1 minute for butc to start.
#
# 2. The directory permissions needed to be changed to allow R/W access
#    on the test filesets after they were created with fts crmount.
#
# 3. The error checking code in restore_disk and restore_ft, and dump
#    was reworked to make sure that the success or failure of the
#    operation was detected during the test.
#
# 4. The calls to "fts dump" and "fts restore" were returing error status
#    even though the operation succeeded. Changed the script to read the
#    response from the command to decide whether or not the command worked.
#
# 5. Added a EXEC routine that calls exec, but prints out each command and
#    the response.
#
# 6. Several other minor changes were made to address verious problems
#    with how the scripts were checking the success or failure of the
#    tests. The tests have run successfully start to finish on
#    Solaris with the changes reflected in this delta.
#
# see above
# [from r1.2 by delta hyer_7109_fixes_to_backup_test_scripts, r1.1]
#
# Revision 1.2  1994/01/10  18:27:39  davecarr
# Upgraded tests to work with expect-5.1.3.  Also moved some configuration
# dependencies from savedb-cmd to generic.exp.  In the process, some
# variables had "sa_" prepended to them to indicate that they are used only
# for the savedb tests.
#
# Upgraded test to work with expect-5.1.3.  Cleaned up a misleading comment.
# [from r1.1 by delta davecarr-db4737-bak-savedb-tests, r1.2]
#
# Revision 1.1  1993/11/24  19:04:31  davecarr
#    This is the first pass at automating tests for the bak savedb command.
# They work with expect-4.3.  They will need to be updated to work with
# expect, version 5.
#
# Initial checkin.  Test works with expect-4.3.
# [added by delta davecarr-db4737-bak-savedb-tests, r1.1]
#
#

# defined in savedb-cmd or generic.exp:
#     bak_id, butc_id, prompt
#

TEST-SETUP

    CATCHEXEC "cm checkfilesets"
    if ![is_butc_ready_p $bak_id 0] {
	    send_user "Failed to contact butc.\n"
            send_user "Test setup failed.\n"
    } else {
        if [Label_tape $bak_id $butc_id err.err 10000 0] {
            send_user "Could not label tape as err.err.\n"
            send_user "Test setup failed.\n"
            unset run
        }
    }

TEST-PRE
    if [info exists run] {
        if ![expr "[verifydb_p $bak_id] &&\
		   [is_butc_ready_p $bak_id 0]"] {
            send_user "Test preconditions failed.\n"
            unset run
        }
    }

TEST-EXEC
    send -i $bak_id "savedb\r"
    expect {
        -i $bak_id $prompt {
        }
        default {
            unset pass
        }
    }
    if [info exists pass] {
        expect {
            -i $butc_id "Hit return when done\r\n" {
                send -i $butc_id "\r"
            }
            default {
                unset pass
            }
        }
    }

TEST-POST

TEST-EVAL
    if [info exists pass] {
        expect {
            -i $butc_id "Hit return when done\r\n" {
                if -1==[string first "Unacceptable tape label (err.err)"\
                                     $expect_out(buffer)] {
                    unset pass
                }
            }
            default {
                unset pass
            }
        }
    }

TEST-CLEANUP
    # There should be no other jobs running.
    if [info exists run] {
	send -i $bak_id "kill 1\r"
	expect {
	    -i $bak_id $prompt {
	    }
	}
	job_done_p $bak_id
	# clear the butc output: ("This tape operation aborted upon request.")
	expect {
	    -i $butc_id ?* {
	    }
	    default {
	    }
	}
    }

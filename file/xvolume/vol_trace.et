#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
#
# HISTORY
# $Log: vol_trace.et,v $
# Revision 1.1.9.1  1996/10/02  19:04:49  damon
# 	New DFS from Transarc
# 	[1996/10/01  19:00:07  damon]
#
# $EndLog$
#
# Copyright (C) 1996, 1993 Transarc Corporation
# Licensed Materials - Property of Transarc
# All rights reserved.
#
# xvolume operations trace table
#
error_table 2 zxv
	ec	XVOL_TRACE_NULL,
		"$Header: /u0/rcs_trees/dce/rcs/file/xvolume/vol_trace.et,v 1.1.9.1 1996/10/02 19:04:49 damon Exp $"
	ec	XVOL_TRACE_BADSYS,
		"vol syscall %lu: bit not set (accstatus %lu), line %lu"
	ec	XVOL_TRACE_AFSCALL,
		"afscall_volser: op %lu"
	ec	XVOL_TRACE_NOVOLUME,
		"afscall_volser: no such volume as %lu: code %lu"
	ec	XVOL_TRACE_NODESC,
		"afscall_volser: no volume desc for %lu: code %lu"
	ec	XVOL_TRACE_GRABWAKE,
		"afscall_volser: volop_close waking grabber for %lu"
	ec	XVOL_TRACE_LOOKWAKE,
		"afscall_volser: volop_close waking looker for %lu"
	ec	XVOL_TRACE_DIFFAGGR,
		"afscall_volser: cloneop: diff aggr for %lu (%lu) and %lu (%lu)"
	ec	XVOL_TRACE_DIFFOPS,
		"afscall_volser: cloneop: diff volops for %lu and %lu"
	ec	XVOL_TRACE_NODESC2,
		"afscall_volser: no volume desc for clone second %lu: code %lu"
	ec	XVOL_TRACE_DIFFOPS2,
		"afscall_volser: cloneop: diff volop vec for %lu and %lu"
	ec	XVOL_TRACE_NODESC3,
		"afscall_volser: no volume desc for swap second %lu: code %lu"
	ec	XVOL_TRACE_VOLOPEN,
		"vol_open: vid %lu, accstat %lu, accerr %lu"
	ec	XVOL_TRACE_NOVOL2,
		"vol_open: no such volume as %lu: code %lu"
	ec	XVOL_TRACE_ISBUSY,
		"vol_open: volume %lu is busy (states %#lx, accerror %lu)"
	ec	XVOL_TRACE_VNOPWAIT,
		"vol_open: volume %lu: WAITING; concur %lu, ref %lu, vnops %lu"
	ec	XVOL_TRACE_VNOPWAITDONE,
		"vol_open: volume %lu: awake from waiting"
	ec	XVOL_TRACE_VOLOPENERR,
		"vol_open: volume %lu: err %lu from VOL_OPEN"
	ec	XVOL_TRACE_COPYOUTERR,
		"vol_open: volume %lu: err %lu from copyout()"
	ec	XVOL_TRACE_OPENDONE,
		"vol_open: volume %lu: vol_open SUCCEEDS"
	ec	XVOL_TRACE_RCGRABWAKE,
		"vol_RCZero: waking grabber for %lu"
	ec	XVOL_TRACE_RCLOOKWAKE,
		"vol_RCZero: waking looker for %lu"
	ec	XVOL_TRACE_GCDONE,
		"vol_GCDesc: GCed %d structs"
	ec	XVOL_TRACE_GETDESCFULL,
		"vol_GetDesc: ALL ENTRIES FULL"
	ec	XVOL_TRACE_GETDESCRETURNS,
		"vol_GetDesc: returning entry %d"
	ec	XVOL_TRACE_FINDDESCBOUNDS,
		"vol_FindDesc: slot %d out of bounds"
	ec	XVOL_TRACE_FINDDESCEMPTY,
		"vol_FindDesc: slot %d empty"
	ec	XVOL_TRACE_FINDDESCDIFFPID,
		"vol_FindDesc: diff procs (cdp: %d vs. current: %d)"
	ec	XVOL_TRACE_FINDDESCDIFFDID,
		"vol_FindDesc: diff descIds (cdp: %d vs. given: %d)"
	ec	XVOL_TRACE_FINDDESCDELETED,
		"vol_FindDesc: cdp %#lx, descId %d Deleted"
	ec	XVOL_TRACE_FINDDESCRETURNS,
		"vol_FindDesc: returning cdp %#lx, slot %d"
	ec	XVOL_TRACE_VOLINITCALLED,
		"vol_Init called"
	ec	XVOL_TRACE_VOLATTACH,
		"vol_Attach: volId=%lu,,%lu, aggrid=%lu"
	ec	XVOL_TRACE_VOLDETACH,
		"vol_Detach: volp=%#x, id=%lu,,%lu, refCnt=%lu"
	ec	XVOL_TRACE_STARTVNWAITING,
		"vol_StartVnodeOp: volp %#lx, waiting on code %d"
	ec	XVOL_TRACE_CALL_OPEN,
		"afscall_volser: VOLOP_OPEN"
	ec	XVOL_TRACE_CALL_AGOPEN,
		"afscall_volser: VOLOP_AGOPEN"
	ec	XVOL_TRACE_CALL_FCLOSE,
		"afscall_volser: VOLOP_FCLOSE"
	ec	XVOL_TRACE_CALL_FCLOSE_VOL,
		"afscall_volser: VOLOP_FCLOSE: %lu,,%lu"
	ec	XVOL_TRACE_CALL_BULKSET,
		"afscall_volser: VOLOP_BULKSETSTATUS: %lu status blocks"
	ec	XVOL_TRACE_CALL_EXISTING,
		"afscall_volser: op %lu on volp %#lx, id %lu,,%lu"
	ec	XVOL_TRACE_VOLDETACH_TPQ,
		"vol_Detach(%#lx): also freeing tpq %#lx"
	ec	XVOL_TRACE_SWAPIDENTS,
		"vol_SwapIdentities: swapping %#lx (%lu,,%lu) and %#lx (%lu,,%lu)"
	ec	XVOL_TRACE_MOVETIMEOUT,
		"vol_doMoveTimeout(%#lx), id %lu,,%lu: states %#lx: timeout %lu expired"
	ec	XVOL_TRACE_MOVETIMEOUT_0,
		"vol_doMoveTimeout: incomplete target fileset timed out"
	ec	XVOL_TRACE_MOVETIMEOUT_1,
		"vol_doMoveTimeout: TARGET timeout: setting OOS and timeout to %lu"
	ec	XVOL_TRACE_MOVETIMEOUT_2,
		"vol_doMoveTimeout: SOURCE timeout: setting OOS and timeout to %lu"
	ec	XVOL_TRACE_MOVETIMEOUT_3,
		"vol_doMoveTimeout: SOURCE|OFFLINE timeout: setting OOS and timeout to %lu"
	ec	XVOL_TRACE_MOVETIMEOUT_4,
		"vol_doMoveTimeout: TARGET|OOS timeout: returning to service"
	ec	XVOL_TRACE_MOVETIMEOUT_5,
		"vol_doMoveTimeout: SOURCE|OOS timeout: returning to service"
	ec	XVOL_TRACE_MOVETIMEOUT_6,
		"vol_doMoveTimeout: SOURCE|OFFLINE|OOS timeout: setting ZAPME"
	ec	XVOL_TRACE_MOVETIMEOUT_7,
		"vol_doMoveTimeout: incomplete source fileset timed out"
	ec	XVOL_TRACE_MOVETIMEOUT_8,
		"vol_doMoveTimeout(%#lx), id %lu,,%lu: unrecognized status %#lx!"
	ec	XVOL_TRACE_ADVANCE_MOVE,
		"vol_advanceMove(%#lx), id %lu,,%lu: timeout %lu, calling doMoveTimeout"
	ec	XVOL_TRACE_DRIVE_MOVE,
		"vol_DriveMove(%#lx), id %lu,,%lu called"
	ec	XVOL_TRACE_DRIVE_MOVE_0,
		"vol_DriveMove(%lu,,%lu) called: volreg_Lookup returns %ld"
	ec	XVOL_TRACE_DRIVE_MOVE_1,
		"vol_DriveMove(%#lx): states %#lx, includes VOL_BUSY, so skipping"
	ec	XVOL_TRACE_DRIVE_MOVE_2,
		"vol_DriveMove(%#lx): rescheduling for %ld seconds from now"
	ec	XVOL_TRACE_DRIVE_MOVE_3,
		"vol_DriveMove(%#lx): states %#lx, timeout %lu, so no resched"
	ec	XVOL_TRACE_DRIVE_MOVE_4,
		"vol_DriveMove(%#lx): clearing tpq %#lx and freeing argp %#lx"
	ec	XVOL_TRACE_SET_MOVE_TRIGGER,
		"vol_SetMoveTimeoutTrigger(%#lx), id %lu,,%lu, states %#lx, timeout %lu:"
	ec	XVOL_TRACE_SET_MOVE_TRIGGER_0,
		"      id arg at %#lx, reschedule is %ld, request ptr is %#lx"
	ec	XVOL_TRACE_CHECK_ZLC,
		"CheckAndLinkZLC(volp=%x, states=%#lx) called"
	ec	XVOL_TRACE_LINKZLC,
		"LinkZLCList(volp=%x, exported=%d, replicated=%d) called"
	ec	XVOL_TRACE_GOTZLC,
		"LinkZLCList at iter %d: getzlc got vp %x, code %d"
	ec	XVOL_TRACE_GOTZLCFID,
		"LinkZLCList got fid %x.%x.%x.%x, code %d"
	ec	XVOL_TRACE_LINKZLC_DONE,
		"LinkZLCList returns %d"
	ec	XVOL_TRACE_STARTINACTVNODEOP,
		"vol_StartInactiveVnodeOp: volp %x busy; vp %x; vol has concurr %d"
	ec	XVOL_TRACE_INACTIVE_HOLDING,
		"vol_StartInactiveVnodeOp: holding vp %x in element %x"
	ec	XVOL_TRACE_INACTIVE_RELEASING,
		"vol_ProcessDeferredReles: releasing vp %x from element %x"
	ec	XVOL_TRACE_VOLHOLD,
		"vol_fsHold: volp %x: ref count now %d"
	ec	XVOL_TRACE_VOLRELE,
		"vol_fsRele: volp %x: ref count starts at %d"
	ec	XVOL_TRACE_ENTER_VOLLOCK,
		"vol_fsLock: volp %x type %d: about to lock"
	ec	XVOL_TRACE_LEAVE_VOLLOCK,
		"vol_fsLock: locked, returning code %d"
	ec	XVOL_TRACE_ENTER_VOLUNLOCK,
		"vol_fsUnlock: volp %x type %d: about to unlock"
	ec	XVOL_TRACE_LEAVE_VOLUNLOCK,
		"vol_fsUnlock: returning code %d"
	ec	XVOL_TRACE_DMWAIT,
		"vol_fsDMWait: volp %x, blobp %x"
	ec	XVOL_TRACE_DMFREE,
		"vol_fsDMFree: volp %x, blobp %x"
end

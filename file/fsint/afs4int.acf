/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 */
/*
 * HISTORY
 * $Log: afs4int.acf,v $
 * Revision 1.1.65.1  1996/10/02  17:46:58  damon
 * 	Newest DFS from Transarc
 * 	[1996/10/01  18:37:26  damon]
 *
 * Revision 1.1.60.2  1994/06/09  14:07:49  annie
 * 	fixed copyright in src/file
 * 	[1994/06/09  13:22:47  annie]
 * 
 * Revision 1.1.60.1  1994/02/04  20:18:42  devsrc
 * 	Merged from 1.0.3a to 1.1
 * 	[1994/02/04  15:13:03  devsrc]
 * 
 * Revision 1.1.58.1  1993/12/07  17:24:15  jaffe
 * 	1.0.3a update from Transarc
 * 	[1993/12/03  15:22:34  jaffe]
 * 
 * Revision 1.1.4.4  1993/01/21  19:35:45  zeliff
 * 	Embedding copyright notices
 * 	[1993/01/19  19:49:25  zeliff]
 * 
 * Revision 1.1.4.3  1993/01/13  17:49:13  shl
 * 	Transarc delta: cfe-ot6054-genl-and-i18n-spares 1.1
 * 	  Selected comments:
 * 	    Add spares to several RPC structures, with two goals:
 * 	    - general future usage
 * 	    - allow for at least some internationalization designs
 * 	    The only tricky part of this work is that the on-the-wire representation for
 * 	    directory contents is expanded.
 * 	Transarc delta: tu-ot5968-remove-obsolete-api 1.1
 * 	  Selected comments:
 * 	    Remove the obsolete rpc call, AFS_RenewAllToken and others.
 * 	[1993/01/12  20:57:44  shl]
 * 
 * Revision 1.1.4.2  1992/11/24  17:03:35  bolinger
 * 	Change include file install directory from .../afs to .../dcedfs.
 * 	[1992/11/22  17:59:07  bolinger]
 * 
 * Revision 1.1.2.2  1992/05/20  19:52:41  mason
 * 	Transarc delta: cfe-ot2605-tsr-i-f-changes 1.5
 * 	  Files modified:
 * 	    cm: cm_scache.h
 * 	    config: common_data.acf, common_data.idl, common_def.h
 * 	    fshost: fshs_errs.et
 * 	    fsint: afs4int.acf, afs4int.idl, tkn4int.acf, tkn4int.idl
 * 	    host: hs_errs.et; px: px_repops.c; rep: rep_main.c, repser.h
 * 	    userInt/fts: volc_tokens.c; xvolume: volume.h
 * 	  Selected comments:
 * 	    This delta should encompass the interface changes associated with token
 * 	    state recovery (over server crashes, network partitions, fileset moves,
 * 	    and other things).
 * 	    This delta now captures the interface changes for real.  It includes RPC interface
 * 	    changes, new error codes, and new status bits.  It also includes incomplete changes
 * 	    to fts to support the new interface.
 * 	    Annotate the new RPC procedure.
 * 	    More TSR interface fallout, mostly to the new model.
 * 	    Fix a merge error.
 * 	    Fixing more merge and syntax errors
 * 	[1992/05/20  11:31:04  mason]
 * 
 * Revision 1.1  1992/01/19  02:51:15  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/*
*/
/*
 *      Copyright (C) 1990 Transarc Corporation
 *      All rights reserved.
 */

/* 
 *
 * AFS (4.0) Cache Manager/Protocol Exporter Attribute Configuration File
 *	
 */

[code]
interface AFS4Int 
{
/* 
 * The attribute [heap] will allow the stub code to allocate the following
 * data structures from heap.
 */	
typedef [heap] afsTaggedName;
typedef [heap] afsTaggedPath;
typedef [heap] afsFidTaggedName;
typedef [heap] afsVolSync;
typedef [heap] afsFetchStatus;
typedef [heap] afsStoreStatus;
typedef [heap] afsNetAddr;
typedef [heap] afsRevokeDesc;
typedef [heap] afsDBLockDesc;
typedef [heap] afsDBCacheEntry;
typedef [heap] afsDBLock;
typedef [heap] afsStatistics;
typedef [heap] afsRevokes;
typedef [heap] afsFids;
typedef [heap] afsTokens;
typedef [heap] afsBulkFEX;
typedef [heap] afsACL;
typedef [heap] afsQuota;
typedef [heap] afsBulkVVs;
typedef [heap] afsBulkStats;
typedef [heap] afsBulkVolIDs;
typedef [heap] afsDisk;


/* 
 * To allow the status code of any communication failure to be returened 
 * as an operation result.
 */
[comm_status,fault_status] AFS_SetContext();
[comm_status,fault_status] AFS_LookupRoot();
[comm_status,fault_status] AFS_FetchData();
[comm_status,fault_status] AFS_FetchACL();
[comm_status,fault_status] AFS_FetchStatus();
[comm_status,fault_status] AFS_StoreData();
[comm_status,fault_status] AFS_StoreACL();
[comm_status,fault_status] AFS_StoreStatus();
[comm_status,fault_status] AFS_RemoveFile();
[comm_status,fault_status] AFS_CreateFile();
[comm_status,fault_status] AFS_Rename();
[comm_status,fault_status] AFS_Symlink();
[comm_status,fault_status] AFS_HardLink();
[comm_status,fault_status] AFS_MakeDir();
[comm_status,fault_status] AFS_RemoveDir();
[comm_status,fault_status] AFS_Readdir();
[comm_status,fault_status] AFS_Lookup();	
[comm_status,fault_status] AFS_GetToken();	
[comm_status,fault_status] AFS_ReleaseTokens();	
[comm_status,fault_status] AFS_GetTime();
[comm_status,fault_status] AFS_MakeMountPoint();	
[comm_status,fault_status] AFS_GetStatistics();
[comm_status,fault_status] AFS_BulkFetchVV();	
[comm_status,fault_status] AFS_BulkKeepAlive();	
[comm_status,fault_status] AFS_ProcessQuota();
[comm_status,fault_status] AFS_GetServerInterfaces();
[comm_status,fault_status] AFS_SetParams();
[comm_status,fault_status] AFS_BulkFetchStatus();
}

#!/bin/sh
#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
#
# HISTORY
# $Log: test6,v $
# Revision 1.1.16.1  1996/10/17  18:18:33  damon
# 	Submitting on behalf of Transarc
# 	[1996/10/17  16:50:08  damon]
#
# Revision 1.1.11.2  1993/07/19  19:40:22  zeliff
# 	HP port of DFS
# 	[1993/07/19  18:30:54  zeliff]
# 
# Revision 1.1.9.3  1993/07/16  21:30:34  kissel
# 	*** empty log message ***
# 	[1993/06/21  14:52:29  kissel]
# 
# Revision 1.1.7.2  1993/06/04  20:52:38  kissel
# 	Initial HPUX RP version.
# 	[1993/06/03  22:40:24  kissel]
# 
# 	01/29/93        maunsell_c      put : in TESTTOP:= line
# 	[1993/02/05  20:47:50  maunsell_c]
# 
# Revision 1.1.5.2  1993/01/11  18:26:06  htf
# 	Embedded copyright notice
# 	[1993/01/11  16:58:45  htf]
# 
# Revision 1.1.2.2  1992/05/21  12:37:02  jaffe
# 	Transarc delta: fred-merge-tests 1.1
# 	   Selected comments:
# 	    Created this delta to merge Phil Hirsch's final DFS test code changes with
# 	    the test code that the OSF had.  Hopefully, this means we and the OSF
# 	    should be looking at the same test code.
# 	    Changes to facilitate merge of local DFS test code with the OSF's.
# 	Transarc delta: fred-remove-sys 1.1
# 	  Selected comments:
# 	    To remove dependency on the AFS sys command in the test scripts.
# 	    To remove dependency on AFS sys command.
# 
# 	$TALog: test6,v $
# 	Revision 12.4  1996/03/08  13:37:25  gait
# 	Makes minor repairs to the following tests: fts, rep, acl, fset, cm.
# 	Adds a script to run these tests all at once. The script bullet proofs
# 	the test environment as much as possible and gathers the logs together
# 	in one place.
# 
# 	Fix whoami calculation.
# 	[from r4.6 by delta gait-db7321-repair-rep-tests, r1.1]
# 
# Revision 4.6  1994/11/01  22:22:22  cfe
# 	Bring over the changes that the OSF made in going from their DCE 1.0.3
# 	release to their DCE 1.1 release.
# 	[from r4.5 by delta cfe-db6109-merge-1.0.3-to-1.1-diffs, r1.1]
# 
# 	[1992/05/20  18:15:32  jaffe]
# 
# $EndLog$
#

###############################################################################
#    Copyright (C) 1991, 1992 Transarc Corporation - All rights reserved      #
###############################################################################

# This script tests the @sys and @host symbols.

###############################################################################

# Usage:                test6

# Typically run via:    test6 >& test6.out
# or as part of the runtests script.

###############################################################################

# Test environment:
# This test requires that DFS be up and running.

# Privilege required:
# Nothing special.

# Highest error number is: 19.

###############################################################################

d=`pwd`
hn=`hostname`
p=`basename $0`
rc=0
ty=cm

: ${TESTTOP:="`pwd`"}

if [ "$TESTTOP" = "`pwd`" ]
then
    . ../util/fs_SetSysVar
else
    . $TESTTOP/util/fs_SetSysVar
fi

: ${CELL_NAME=`sed -n '/cellname/s/cellname[         ]*\/\.\.\.\///p' /opt/dcelocal/dce_cf.db`}

: ${bin_dir=/opt/dcelocal/bin}

PATH=":"$bin_dir":"$PATH

WHOAMI=`/usr/ucb/whoami`
if test ${WHOAMI} = root; then rootflag=TRUE; else rootflag=FALSE; fi
newsys=foobar
tdir=$ty.$p.$$

trap 'cd $d; rm -rf $tdir; exit 3' 2 3 15

###############################################################################

pwd | grep -s '^/\.\.\./'
if test $? -eq 0; then tdir=$d/$tdir; else tdir=/:/$tdir; fi
mkdir $tdir; cd /tmp; old_pwd=`pwd`; cd $tdir
if test $? -ne 0 -o `pwd` = $old_pwd
   then echo "- cd $tdir failed ($p: E1)"; exit 2
   fi

echo ""
echo "$ty/$p (at-symbols) starting in $tdir"
echo "   on $hn at `date`."
echo ""
echo "System type is $fs_sysName, root flag is $rootflag."
echo ""
cm whereis . ; fts lsquota -path .; cm getca

###############################################################################

echo ""; echo "Testing @host with a file..."
echo "I am your host." > $hn; rf=$?
if test $rf -ne 0
   then ls -l; echo "- echo failed (errno $rf) ($p: E2)"; rc=`expr $rc + 1`
   fi

if test "`cat @host`" != "I am your host."
   then ls -l; echo "- @host test failed ($p: E3)"; rc=`expr $rc + 1`
   fi

rm $hn; rf=$?
if test $rf -ne 0
   then ls -l; echo "- rm failed (errno $rf) ($p: E4)"; rc=`expr $rc + 1`
   fi

echo ""; echo "Testing @host with a directory..."
mkdir $hn; rf=$?
if test $rf -ne 0
   then ls -l; echo "- mkdir failed (errno $rf) ($p: E5)"; rc=`expr $rc + 1`
   fi

cd /tmp; old_pwd=`pwd`; cd $tdir/@host
if test $? -ne 0 -o `pwd` = $old_pwd
   then ls -l; echo "- @host test failed ($p: E6)"; rc=`expr $rc + 1`
   fi

cd /tmp; old_pwd=`pwd`; cd $tdir; cd @host
if test $? -ne 0 -o `pwd` = $old_pwd
   then ls -l; echo "- @host test failed ($p: E7)"; rc=`expr $rc + 1`
   fi

cd /tmp; cd $tdir
rmdir $hn; rf=$?
if test $rf -ne 0
   then ls -l; echo "- rmdir failed (errno $rf) ($p: E8)"; rc=`expr $rc + 1`
   fi

########################################

echo ""; echo "Testing @sys with a file..."
echo "This is a test." > $fs_sysName; rf=$?
if test $rf -ne 0
   then ls -l; echo "- echo failed (errno $rf) ($p: E9)"; rc=`expr $rc + 1`
   fi

if test "`cat @sys`" != "This is a test."
   then ls -l; echo "- @sys test failed ($p: E10)"; rc=`expr $rc + 1`
   fi

rm $fs_sysName; rf=$?
if test $rf -ne 0
   then ls -l; echo "- rm failed (errno $rf) ($p: E11)"; rc=`expr $rc + 1`
   fi

echo ""; echo "Testing @sys with a directory..."
mkdir $fs_sysName; rf=$?
if test $rf -ne 0
   then ls -l; echo "- mkdir failed (errno $rf) ($p: E12)"; rc=`expr $rc + 1`
   fi

cd /tmp; old_pwd=`pwd`; cd $tdir/@sys
if test $? -ne 0 -o `pwd` = $old_pwd
   then ls -l; echo "- @sys test failed ($p: E13)"; rc=`expr $rc + 1`
   fi

cd /tmp; old_pwd=`pwd`; cd $tdir; cd @sys
if test $? -ne 0 -o `pwd` = $old_pwd
   then ls -l; echo "- @sys test failed ($p: E14)"; rc=`expr $rc + 1`
   fi

cd /tmp; cd $tdir
rmdir $fs_sysName; rf=$?
if test $rf -ne 0
   then ls -l; echo "- rmdir failed (errno $rf) ($p: E15)"; rc=`expr $rc + 1`
   fi

if test $rootflag = TRUE
   then

   echo ""; echo "Changing @sys..."
   cm sysname $newsys
   echo "Another test." > $newsys

   if test "`cat @sys`" != "Another test."
      then ls -l; echo "- @sys test failed ($p: E16)"; rc=`expr $rc + 1`
      fi

   rm $newsys; rf=$?
   if test $rf -ne 0
      then ls -l; echo "- rm failed (errno $rf) ($p: E17)"; rc=`expr $rc + 1`
      fi

   echo ""; echo "Changing @sys back..."
   cm sysname $fs_sysName
   echo "Last test." > $fs_sysName

   if test "`cat @sys`" != "Last test."
      then ls -l; echo "- @sys test failed ($p: E18)"; rc=`expr $rc + 1`
      fi

   rm $fs_sysName; rf=$?
   if test $rf -ne 0
      then ls -l; echo "- rm failed (errno $rf) ($p: E19)"; rc=`expr $rc + 1`
      fi

   fi

###############################################################################

cd /tmp; cd $d; rm -rf $tdir

echo ""; echo "Test complete at `date`."; echo ""
if test $rc -eq 0
   then echo "$ty/$p PASSED"
   else echo "$ty/$p FAILED ($rc errors)"
   fi

exit $rc

###############################################################################

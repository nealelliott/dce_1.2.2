/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: icharpkl.idl,v $
 * Revision 1.1.4.2  1996/03/11  02:14:37  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  19:53:36  marty]
 *
 * Revision 1.1.4.1  1995/12/11  20:08:12  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:32:32  root]
 * 
 * Revision 1.1.2.2  1993/08/11  16:27:29  ganni
 * 	tests for new IDL functionality
 * 	[1993/08/11  16:15:21  ganni]
 * 
 * $EndLog$
 */
/*
*/
[
uuid(2CA07E20-5E72-11CC-9968-08002B2AD31A),
version(0.0)
]
interface icharpkl
{
    /* Tests for pickling I-chars. The local rep of [cs_char] requires more 
        bytes than the wire rep */

    const long ASIZE = 24;
    const long CSIZE = ASIZE / 2;
    const long VSIZE = ASIZE + 2;

    typedef byte hobbit;

    void op0 ( [in] handle_t h,
               [in, out] unsigned long *p_tag,
               [in, out, size_is(*p_sz)] hobbit hb0[],
               [in, out] long *p_sz
     );

    void op1 ( [in] handle_t h,
               [in, out] unsigned long *p_dr,
               [in, out] unsigned long *p_tag,
               [in, out, size_is(*p_sz), length_is(*p_ln)] hobbit hb1[],
               [in, out] long *p_sz,
               [in, out] short *p_ln
    );

    void op2 ( [in] handle_t h,
               [in, out] unsigned long *p_tag,
               [in, out, length_is(*p_ln)] hobbit hb2[VSIZE],
               [in, out] short *p_ln
    );

    typedef struct {
        unsigned long sz;
        [size_is(sz)] hobbit hb[];
    } conf_t;

    void op3 ( [in] handle_t h,
               [in, out] unsigned long *p_tag,
               [in, out] conf_t *p_c
    );

    typedef struct {
        unsigned long sz;
        unsigned short ln;
        [size_is(sz)] hobbit hb[];
    } open_t;

    void op4 ( [in] handle_t h,
               [in, out] unsigned long *p_tag,
               [in, out] open_t *p_o
    );

    typedef struct {
        [length_is(ln)] hobbit hb[VSIZE];
        unsigned short ln;
    } varying_t;

    void op5 ( [in] handle_t h,
               [in] unsigned long s,
               [in] varying_t *p_v
    );

    void op6 ( [in] handle_t h,
               [out] unsigned long *p_r,
               [out] varying_t *p_v
    );

    void op7 ( [in] handle_t h);


}

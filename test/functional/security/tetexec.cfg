#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
#
# HISTORY
# Submit GG tests
# [1996/09/30  15:43 UTC  arvind  /main/DCE_1.2.2/6]
# $Log: tetexec.cfg,v $
NONERevision 1.1.11.5  1996/10/15  21:18:53  arvind
NONE	merge tp3()  ~ loop count fix.
NONE	[1996/10/14  18:56 UTC  bartf  /main/bartf_pk_fix/1]
NONE
NONE	fix tp3() count
NONE	[1996/03/11  02:07:17  marty  1.1.8.3]
NONE	OSF DCE 1.2.2 Drop 4.5
NONE
NONERevision 1.1.12.3  1996/10/15  21:17:09  arvind
NONE	merge tp3()  ~ loop count fix.
NONE	[1996/10/14  18:56 UTC  bartf  /main/bartf_pk_fix/1]
NONE
NONE	fix tp3() count
NONE	[1996/03/11  02:07:17  marty  1.1.8.3]
NONE
# Revision 1.1.11.4  1996/10/03  18:40:48  arvind
#	OSF DCE 1.2.2 Drop 4
# Revision 1.1.12.2  1996/10/03  18:14:28  arvind
#	OSF DCE 1.2.2 Drop 4
# Revision /main/DCE_1.2.2/6  1996/09/30  15:43 UTC  arvind
# 	Add OSF copyright
# 
# $EndLog$
#
TET_OUTPUT_CAPTURE=False
TET_NSIG=31
TET_EXEC_IN_PLACE=True

#
# This needs to be set to SIGSYS, because sec_login_set_context()
# sends this signal and if this is not set, the TET test case
# manager will try to catch it and exit.  Set SIGVTALRM.
# For a486 platform, change 20 to 26 in TET_SIG_LEAVE.
#
TET_SIG_LEAVE=12

#
# Ignore SIGPIPE for krb5/sample/cclient test
TET_SIG_IGN=
# 
# Variables used for pwd_mgmt tests
#
# PWD_MGMTD_STRING_BINDING - this should contain the string
# binding information of the password strength server. If this
# variable is not set properly, the tests will fail.
#
PWD_MGMTD_STRING_BINDING=

#
# Variables used for pwd_mgmt/HP tests
#
#
PWD_CLIENT=cell_admin
PWD_CLIENT_PW=-dce-
VERBOSE=True

#
# Variables used to test replication
#
# SEC_TEST_REPLICATION - this should be set to True if there
# is a replica running and you would like to test that information
# is propagated to the replicas. Otherwise, it should be False.
#
SEC_TEST_REPLICATION=False 
#
# SEC_REPLICA_SITE_NAME - If SEC_TEST_REPLICATION is True, you
# must set SEC_REPLICA_SITE_NAME to the specific site_name of the
# replica. You can use either format, specify the global name or
# the network address. For example,
# SEC_REPLICA_SITE_NAME=/.../r_d.com/subsys/dce/sec/rs_server_250_2
# or SEC_REPLICA_SITE_NAME=ncacn_ip_tcp:15.22.144.248
SEC_REPLICA_SITE_NAME=

#
# SEC_TEST_MIGRATION - This variable is used when testing security
# migration (security/ts/client/migration). The currently supported 
# values are 1 and 0. A value of 0 means that your 1.1 security server
# supports all security functionality. A value of 1 means that your
# 1.1 security server is operating at version 1.02 and does not support
# any 1.1 functionality.
SEC_TEST_MIGRATION=0

#
# KRB5/SAMPLE test related environment variables
#
KRB5_SAMPLE_PORT=2001
KRB5_SAMPLE_SERVER_HOST=
KRB5_SAMPLE_PW=-dce-
KRB5_SAMPLE_SERVICE=sample

#
# KRB5/USER-USER test related environment variables
#
KRB5_UU_PORT=2002
KRB5_UU_SERVER_HOST=
KRB5_UU_PW=-dce-
KRB5_UU_SERVICE=uu
KRB5_UU_MESSAGE="Hello"

#
# KRB5/RLOGIN & RSH test related environment variables
# are located in secuirty/lib/test_setup.tcl
#

#
# Global Groups tests environmet settings
#

# Temporary working directory
TMPDIR=/tmp

# Executable for editing registry.
RGY_EXEC="rgy_edit -update"
DCECP_EXEC=dcecp

# Executable for executing APIs
DO_GGAPI="./do_ggapi"

# Number of iteration for operation
NUMBER_OF_ITERATION=10000

# Number of entries for members
NUMBER_OF_ENTRIES=1000

CELL_ADMIN=cell_admin
PASSWORD=-dce-

# A cell on a local host - a name without cell prefix /...
LOCAL_HOST=
cL=
# A cell on a remote host - a name without cell prefix /...
REMOTE_HOST=
cR=
# An UNKNOWN cell
cU="Unknown"

# A group object which include local/remote principals
gG=gG
# A group object which is an alias to the group `gG'
gGa=gGa
# A group object which include remote principals, and
# is prohibited from incllusion in a projiect list.
gGnp=gGnp
# A principal object which belongs to the local cell
pL=pL
# Other principal object which belong to the local cell
pLo=pLo
# A group object which belongs to the remote cell
gR=gR
# A principal object which belongs to the remote cell
pR=pR
# A principal object which is an alias to the principal `pR'
pRa=pRa
# a principal object which belongs to the remote cell, and
# which has a short enough principal name (1 byte)
pRs=s
# A principal object which belongs to the remote cell, and
# which has a long enough principal name (255 byte)
pRl=long_enough___x___20____x___30____x___40____x___50____x___60____x___70____x___80____x___90____x__100____x__110____x__120____x__130____x__140____x__150____x__160____x__170____x__180____x__190____x__200____x__210____x__220____x__230____x__240____x__250____
# an UNKNOWN principal object (which is NOT exist in any cell)
pU=pU
# an UNKNOWN group object
gU=gU
# a principal object which has variety of ACL entries
pA=pA
# ACL name for ACL entry testing
# aclName="/.:/sec/principal/${pA}"
aclName=/.:/sec/principal/pA

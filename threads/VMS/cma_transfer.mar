.title cma_transfer CMA transfer vector
.ident 'V1.0'
;++
; @OSF_COPYRIGHT@
; COPYRIGHT NOTICE
; Copyright (c) 1990, 1991, 1992, 1993, 1994, 1996 Open Software Foundation, Inc.
; ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
; the full copyright text.
;
; HISTORY
; $Log: cma_transfer.mar,v $
; Revision 1.1.6.2  1996/03/09  23:30:59  marty
; 	Update OSF copyright year
; 	[1996/03/09  22:46:14  marty]
;
; Revision 1.1.6.1  1995/12/07  21:58:37  root
; 	Submit OSF/DCE 1.2.1
; 	[1995/12/07  21:04:14  root]
; 
; Revision 1.1.4.1  1994/06/09  13:37:07  devsrc
; 	 CR10892 - fix copyright in file
; 	[1994/06/09  13:27:10  devsrc]
; 
; Revision 1.1.2.2  1992/12/15  22:25:02  alan
; 	Insert copyright notices
; 	[1992/12/07  19:12:41  alan]
; 
; $EndLog$
;--
;****************************************************************************
;*                                                                          *
;*  Copyright © 1989, 1991                                                  *
;*  by DIGITAL Equipment Corporation, Maynard, Mass.                        *
;*                                                                          *
;*  This software is furnished under a license and may be used and  copied  *
;*  only  in  accordance  with  the  terms  of  such  license and with the  *
;*  inclusion of the above copyright notice.  This software or  any  other  *
;*  copies  thereof may not be provided or otherwise made available to any  *
;*  other person.  No title to and ownership of  the  software  is  hereby  *
;*  transferred.                                                            *
;*                                                                          *
;*  The information in this software is subject to change  without  notice  *
;*  and  should  not  be  construed  as  a commitment by DIGITAL Equipment  *
;*  Corporation.                                                            *
;*                                                                          *
;*  DIGITAL assumes no responsibility for the use or  reliability  of  its  *
;*  software on equipment which is not supplied by DIGITAL.                 *
;*                                                                          *
;****************************************************************************

;****************************************************************************
;  FACILITY:
;
;	CMA/VMS prototype/reference implementation
;
;  ABSTRACT:
;
;	This module contains the transfer vectors for entry into the CMA
;	sharable image.
;
;  AUTHORS:
;
;	Dave Butenhof
;
;  CREATION DATE:
;
;	6 September 1989
;
;  MODIFICATION HISTORY:
;
;	001	Dave Butenhof	12 September 1989
;		Add CMA_C_NULL as global (0,0)
;	002	Dave Butenhof	14 September 1989
;		Add cma_enable_asynch (accidentally omitted)
;	003	Dave Butenhof	20 September 1989
;		Modify transfer macro to work with VAX MACRO X-5
;	004	Dave Butenhof & Webb Scales	27 September 1989
;		Remove LIB$INITIALIZE hook for now, for testing...
;	005	Dave Butenhof	Halloween 1989
;		Add cma_list_threads.
;	006	Dave Butenhof	1 November 1989
;		Generalize debugging; change cma_list_threads to cma_debug,
;		which will parse commands.
;	007	Dave Butenhof	30 November 1989
;		New interface names for POSIX compatibility.
;	008	Dave Butenhof	5 December 1989
;		Change a few more names for consistency.
;	009	Dave Butenhof	7 December 1989
;		Add cma_cfree routine.
;	010	Dave Butenhof & Bob Conti	15 December 1989
;		Add cma_exc_report
;	011	Dave Butenhof	13 February 1990
;		Add cma_errno entry.
;	012	Dave Butenhof	26 February 1990
;		Add POSIX pthreads operations
;	013	Dave Butenhof	18 April 1990
;		Move cma_c_null out of transfer vector
;	014	Dave Butenhof	2 May 1990
;		Add pthread cancel operations.
;	015	Dave Butenhof	23 May 1990
;		Add pthread_get_expiration_np to compute an absolute timespec.
;	016	Dave Butenhof	22 June 1990
;		Change name of pthread mutex & cond "create" to "init" and
;		"delete" to "destroy" to conform to 1003.4a/D3.
;	017	Dave Butenhof	26 June 1990
;		Add functions to control mutex nesting ("friendly mutexes"),
;		and global lock functions.
;	018	Paul Curtin	14 August 1990
;		Remove C rtl wrapper routines
;	019	Webb Scales	26 August 1990
;		Add at-interrupt-level version of condition variable signal
;	020	Dave Butenhof	28 August 1990
;		Change CMA names to "$", and pthread names to cma$ptd_, to
;		get CMARTL.EXE ready for IMAGELIB.OLB.
;	021	Paul Curtin	12 September 1990
;		Added macros for pthread_*_e functions, ...
;	022	Bob Conti	13 September 1990
;		Add new routines for debugging.
;	023	Dave Butenhof	9 October 1990
;		Add exceptions and client handles
;	024	Paul Curtin	15 October 1990
;		changed cma$_ names to cma$s_, and $cmadef to $cma$def
;	025	Dave Butenhof	27 December 1990
;		Rearrange and rename exceptions.
;	026	Dave Butenhof	22 January 1991
;		More work on exceptions.
;	027	Dave Butenhof	4 February 1991
;		Rename pthread exc interface names, to avoid confusion with
;		the "pthread"-ized exception names.
;	028	Dave Butenhof	7 February 1991
;		New alert control names
;	029	Dave Butenhof	18 March 1991
;		Add cma_g_debug with address of cma_debug()
;	030	Dave Butenhof	25 March 1991
;		Add mini-entry point to return FP in frame
;	031	Paul Curtin	25 June 1991
;		Added global_status to create globals for cma$s_*
;	032	DECthreads team		22 July 1991
;		Added cma__save_exc_context
;	033	Dave Butenhof	07 October 1991
;		Add pthread get/set guardsize functions.
;	034	Dave Butenhof	31 October 1991
;		Add cma$debug_cmd function and cma$g_debug_cmd.
;****************************************************************************

.psect	$$transfer	pic,exe,nowrt,shr,page

.external	cma__unimplemented

	$cmadef
	$ssdef
	$sfdef

.macro	client_handle	name
	.align		quad
	.transfer	cma$c_'name'
cma$c_'name'::
cma_c_'name'::
	.long		0, 0
.endm	client_handle

.macro	client_handle_p	name
	.align		quad
pthread_'name'::
	.long		0, 0
.endm	client_handle_p

.macro	client_func	name
	.external	cma_'name'
	.align		quad
	.transfer	cma$g_'name'
cma$g_'name'::
cma_g_'name'::
	.address	cma_'name'
.endm	client_func

.macro	exception	name
	.align		quad
	.transfer	cma$e_'name'
cma$e_'name'::
cma_e_'name'::			; need this, too, for internal use
	.long		^x02130456		; MAGIC NUMBER for status exc
	.long		cma$s_'name'
.endm	exception

.macro	exc_eption	name	; Exceptions with "exc" prefix
	.align		quad
	.transfer	cma$e_'name'
cma$e_'name'::
exc_e_'name'::			; need this, too, for internal use
	.long		^x02130456		; MAGIC NUMBER for status exc
	.long		cma$s_'name'
.endm	exc_eption

.macro	exc_ss_eption	name, ssname	; Exceptions with "exc" prefix & ss$_ code
	.align		quad
	.transfer	cma$e_'name'
cma$e_'name'::
exc_e_'name'::			; need this, too, for internal use
	.long		^x02130456		; MAGIC NUMBER for status exc
	.long		ss$_'ssname'
.endm	exc_ss_eption

.macro	transfer_cma	routine
	.external	cma_'routine'
	.align		quad			; quadword align entry
	.transfer	cma$'routine'
cma$'routine'::
	.mask		cma_'routine'
	jmp		l^cma_'routine'+2
.endm	transfer_cma

.macro	transfer_exc	routine
	.external	exc_'routine'
	.align		quad			; quadword align entry
	.transfer	cma$exc_'routine'
cma$exc_'routine'::
	.mask		exc_'routine'
	jmp		l^exc_'routine'+2
.endm	transfer_exc

.macro	transfer_icma	routine
	.external	cma__'routine'
	.align		quad			; quadword align entry
	.transfer	cma$$'routine'
cma$$'routine'::
	.mask		cma__'routine'
	jmp		l^cma__'routine'+2
.endm	transfer_icma

.macro	transfer_cma_bliss	routine
	.external	cma$'routine'
	.align		quad			; quadword align entry
	.transfer	cma$'routine'
	.mask		cma$'routine'
	jmp		l^cma$'routine'+2
.endm	transfer_cma_bliss

.macro	transfer_ptd	routine
	.external	pthread_'routine'
	.align		quad			; quadword align entry
	.transfer	cma$ptd_'routine'
cma$ptd_'routine'::
	.mask		pthread_'routine'
	jmp		l^pthread_'routine'+2
.endm	transfer_ptd

.macro	transfer_ptde	routine
	.external	ptdexc_'routine'
	.align		quad			; quadword align entry
	.transfer	cma$ptdexc_'routine'
cma$ptdexc_'routine'::
	.mask		ptdexc_'routine'
	jmp		l^ptdexc_'routine'+2
.endm	transfer_ptde

.macro	transfer_ptdenp	routine
	.external	ptdexc_'routine'_np
	.align		quad			; quadword align entry
	.transfer	cma$ptdexc_'routine'_np
cma$ptdexc_'routine'_np::
	.mask		ptdexc_'routine'_np
	jmp		l^ptdexc_'routine'_np+2
.endm	transfer_ptdenp

.macro	unimp
	.align		quad
	.mask		cma__unimplemented
	jmp		l^cma__unimplemented+2
.endm	unimp

.macro	global_status	name
	cma$s_'name' == cma$_'name'
.endm	global_status

.align quad

client_handle	null
client_handle_p	attr_default
client_handle_p	condattr_default
client_handle_p	mutexattr_default

.repeat 5
	.align	quad		; Reserved handles for future use
	.long	0,0
.endr

transfer_icma	unimplemented

transfer_cma	alert_disable_asynch
transfer_cma	alert_disable_general
transfer_cma	alert_enable_asynch
transfer_cma	alert_enable_general
transfer_cma	alert_restore
transfer_cma	alert_test
transfer_cma	attr_create
transfer_cma	attr_delete
transfer_cma	attr_get_guardsize
transfer_cma	attr_get_inherit_sched
transfer_cma	attr_get_mutex_kind
transfer_cma	attr_get_priority
transfer_cma	attr_get_sched
transfer_cma	attr_get_stacksize
transfer_cma	attr_set_guardsize
transfer_cma	attr_set_inherit_sched
transfer_cma	attr_set_mutex_kind
transfer_cma	attr_set_priority
transfer_cma	attr_set_sched
transfer_cma	attr_set_stacksize
transfer_cma	cond_broadcast
transfer_cma	cond_create
transfer_cma	cond_delete
transfer_cma	cond_signal
transfer_cma	cond_signal_int
transfer_cma	cond_timed_wait
transfer_cma	cond_wait
transfer_cma_bliss	dbgext
transfer_cma	debug
transfer_cma	debug_get
transfer_cma	debug_register
transfer_cma	debug_set
transfer_cma	delay
transfer_cma	errno
transfer_exc	handler
transfer_exc	pop_ctx
transfer_exc	push_ctx
transfer_exc	raise
transfer_exc	raise_status
transfer_exc	report
transfer_cma	handle_assign
transfer_cma	handle_equal
transfer_cma	init
transfer_cma	key_create
transfer_cma	key_get_context
transfer_cma	key_set_context
transfer_cma	lock_global
transfer_cma	mutex_create
transfer_cma	mutex_delete
transfer_cma	mutex_lock
transfer_cma	mutex_try_lock
transfer_cma	mutex_unlock
transfer_cma	once
transfer_cma	stack_assign_np
transfer_cma	stack_call_routine_np
transfer_cma	stack_check_limit_np
transfer_cma	stack_create_np
transfer_cma	stack_delete_np
transfer_cma	thread_alert
transfer_cma	thread_create
transfer_cma	thread_detach
transfer_cma	thread_exit_error
transfer_cma	thread_exit_normal
transfer_cma	thread_get_priority
transfer_cma	thread_get_sched
transfer_cma	thread_get_self
transfer_cma	thread_join
transfer_cma	thread_set_priority
transfer_cma	thread_set_sched
transfer_cma	time_get_expiration
transfer_cma	unlock_global
transfer_cma	yield

transfer_ptd	attr_create
transfer_ptd	attr_delete
transfer_ptd	attr_getinheritsched
transfer_ptd	attr_getprio
transfer_ptd	attr_getsched
transfer_ptd	attr_getstacksize
transfer_ptd	attr_setinheritsched
transfer_ptd	attr_setprio
transfer_ptd	attr_setsched
transfer_ptd	attr_setstacksize
transfer_ptd	cancel
transfer_ptd	cond_broadcast
transfer_ptd	cond_destroy
transfer_ptd	cond_init
transfer_ptd	cond_signal
transfer_ptd	cond_timedwait
transfer_ptd	cond_wait
transfer_ptd	condattr_create
transfer_ptd	condattr_delete
transfer_ptd	create
transfer_ptd	detach
transfer_ptd	exit
transfer_ptd	getprio
transfer_ptd	getscheduler
transfer_ptd	getspecific
transfer_ptd	join
transfer_ptd	keycreate
transfer_ptd	mutex_destroy
transfer_ptd	mutex_init
transfer_ptd	mutex_lock
transfer_ptd	mutex_trylock
transfer_ptd	mutex_unlock
transfer_ptd	mutexattr_create
transfer_ptd	mutexattr_delete
transfer_ptd	once
transfer_ptd	self
transfer_ptd	setasynccancel
transfer_ptd	setcancel
transfer_ptd	setprio
transfer_ptd	setscheduler
transfer_ptd	setspecific
transfer_ptd	testcancel
transfer_ptd	yield

transfer_ptd	delay_np
transfer_ptd	get_expiration_np
transfer_ptd	lock_global_np
transfer_ptd	mutexattr_getkind_np
transfer_ptd	mutexattr_setkind_np
transfer_ptd	unlock_global_np

transfer_ptde	attr_create
transfer_ptde	attr_delete
transfer_ptde	attr_getinheritsched
transfer_ptde	attr_getprio
transfer_ptde	attr_getsched
transfer_ptde	attr_getstacksize
transfer_ptde	attr_setinheritsched
transfer_ptde	attr_setprio
transfer_ptde	attr_setsched
transfer_ptde	attr_setstacksize
transfer_ptde	cancel
transfer_ptde	cond_broadcast
transfer_ptde	cond_destroy
transfer_ptde	cond_init
transfer_ptde	cond_signal
transfer_ptde	cond_timedwait
transfer_ptde	cond_wait
transfer_ptde	condattr_create
transfer_ptde	condattr_delete
transfer_ptde	create
transfer_ptde	detach
transfer_ptde	exit
transfer_ptde	getprio
transfer_ptde	getscheduler
transfer_ptde	getspecific
transfer_ptde	join
transfer_ptde	keycreate
transfer_ptde	mutex_destroy
transfer_ptde	mutex_init
transfer_ptde	mutex_lock
transfer_ptde	mutex_trylock
transfer_ptde	mutex_unlock
transfer_ptde	mutexattr_create
transfer_ptde	mutexattr_delete
transfer_ptde	once
transfer_ptde	self
transfer_ptde	setasynccancel
transfer_ptde	setcancel
transfer_ptde	setprio
transfer_ptde	setscheduler
transfer_ptde	setspecific
transfer_ptde	testcancel
transfer_ptde	yield

transfer_ptdenp	delay
transfer_ptdenp	get_expiration
transfer_ptdenp	lock_global
transfer_ptdenp	mutexattr_getkind
transfer_ptdenp	mutexattr_setkind
transfer_ptdenp	unlock_global

;
; Added for BL7
;
client_func	debug
transfer_ptd	cond_signal_int_np
transfer_ptdenp	cond_signal_int

	.align	quad
	.transfer cma$exc_fetch_fp
cma$exc_fetch_fp::	.word	0
	movl	b^sf$l_save_fp(fp), r0
	ret

transfer_icma	save_exc_context
transfer_ptd	attr_getguardsize_np
transfer_ptd	attr_setguardsize_np
transfer_ptde	attr_getguardsize_np
transfer_ptde	attr_setguardsize_np

;
; Added for BL9
;
transfer_cma	debug_cmd
client_func	debug_cmd

.repeat	9			; reserve some undefined entries
unimp
.endr

exc_eption	uninitexc

exc_ss_eption	illaddr, accvio
exc_ss_eption	exquota, exquota
exc_ss_eption	insfmem, insfmem
exc_ss_eption	nopriv, nopriv
exc_ss_eption	illinstr, opcdec
exc_ss_eption	resaddr, radrmod
exc_ss_eption	privinst, opcdec
exc_ss_eption	resoper, roprand
exc_ss_eption	SIGTRAP, break
exc_ss_eption	SIGIOT, abort
exc_ss_eption	SIGEMT, compat
exc_ss_eption	aritherr, fltovf
exc_ss_eption	SIGSYS, badparam
exc_ss_eption	SIGPIPE, nombx
exc_ss_eption	excpu, excputim
exc_ss_eption	exfilsiz, exdiskquota
exc_ss_eption	intovf, intovf
exc_ss_eption	intdiv, intdiv
exc_ss_eption	fltovf, fltovf
exc_ss_eption	fltdiv, fltdiv
exc_ss_eption	fltund, fltund
exc_ss_eption	decovf, decovf
exc_ss_eption	subrng, subrng

exception	alerted
exception	assertion
exception	badparam
exception	bugcheck
exception	exit_thread
exception	existence
exception	in_use
exception	use_error
exception	wrongmutex
exception	stackovf
exception	nostackmem
exception	notcmastack
exception	unimp
exception	inialrpro
exception	defer_q_full
exception	signal_q_full
exception	alert_nesting

global_status	exception
global_status	exccop
global_status	uninitexc
global_status	illaddr
global_status	exquota
global_status	insfmem
global_status	nopriv
global_status	normal
global_status	illinstr
global_status	resaddr
global_status	privinst
global_status	resoper
global_status	SIGTRAP
global_status	SIGIOT
global_status	SIGEMT
global_status	aritherr
global_status	SIGSYS
global_status	SIGPIPE
global_status	excpu
global_status	exfilsiz
global_status	intovf
global_status	intdiv
global_status	fltovf
global_status	fltdiv
global_status	fltund
global_status	decovf
global_status	subrng
global_status	alerted
global_status	assertion
global_status	badparam
global_status	bugcheck
global_status	exit_thread
global_status	existence
global_status	in_use
global_status	use_error
global_status	wrongmutex
global_status	stackovf
global_status	nostackmem
global_status	notcmastack
global_status	timed_out
global_status	unimp
global_status	inialrpro
global_status	defer_q_full
global_status	signal_q_full
global_status	alert_nesting
.end
;;  DEC/CMS REPLACEMENT HISTORY, Element CMA_TRANSFER.MAR
;;  *11   31-OCT-1991 12:36:49 BUTENHOF "Add cma$debug_cmd"
;;  *10   14-OCT-1991 13:47:52 BUTENHOF "Add pthread get/set guardsize transfers"
;;  *9    26-JUL-1991 15:50:30 CURTIN "added cma%%save_exc_context to vector"
;;  *8    25-JUN-1991 15:48:41 CURTIN "Added global def's for cma$s_ here..."
;;  *7     1-APR-1991 18:07:51 BUTENHOF "QAR 93, exception text"
;;  *6    21-MAR-1991 09:27:58 BUTENHOF "Fix up cma_debug access"
;;  *5    12-FEB-1991 01:28:01 BUTENHOF "Change alert scoping primitives"
;;  *4     5-FEB-1991 00:59:18 BUTENHOF "Change pthread exc interface names"
;;  *3    24-JAN-1991 00:33:35 BUTENHOF "Exception changes"
;;  *2    28-DEC-1990 00:04:08 BUTENHOF "Change exception names"
;;  *1     5-DEC-1990 19:28:55 BUTENHOF "VAX/VMS call std transfer vector"
;;  DEC/CMS REPLACEMENT HISTORY, Element CMA_TRANSFER.MAR

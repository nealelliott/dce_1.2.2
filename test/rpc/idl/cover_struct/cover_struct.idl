/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: cover_struct.idl,v $
 * Revision 1.1.4.2  1996/03/11  02:12:23  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  19:52:41  marty]
 *
 * Revision 1.1.4.1  1995/12/11  20:02:44  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:30:19  root]
 * 
 * Revision 1.1.2.2  1993/01/07  19:54:07  bbelch
 * 	Embedding copyright notice
 * 	[1993/01/06  13:32:21  bbelch]
 * 
 * Revision 1.1  1992/01/19  03:24:25  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/*
*/
[pointer_default(ptr), uuid(98064500-68ca-11c9-a157-08002b0ecef1)]
interface cover_struct
/*
 * Test to fill in some of the coverage gaps around structs.
 */
{
const long NUM_ELEM         = 10;
const long DATA_LIM         =  5;

typedef union switch(boolean sw)
{
case TRUE:  long l;
case FALSE: ;   /* Empty arm */
} union_t;

typedef char array_t[NUM_ELEM];

typedef struct
{
    double d;
    union_t u;
} fixed_struct_t;

typedef struct
{
    long s;
    [size_is(s)] union_t au[];
} cfmt_struct_t;

typedef struct
{
    long cl;
    [length_is(cl)] char ac[NUM_ELEM];
} i_vary_struct_t;

typedef struct
{
    long fl,sl;
    [length_is(fl)] float af[NUM_ELEM];
    [length_is(sl)] fixed_struct_t as[NUM_ELEM];
} o_vary_struct_t;

typedef struct
{
    long dl,pl;
    [length_is(dl)] double ad[NUM_ELEM];
    [length_is(pl)] long * ap[NUM_ELEM];
} io_vary_struct_t;

typedef struct
{
    long s,l;
    [size_is(s),length_is(l)] fixed_struct_t as[];
} i_cv_struct_t;

typedef struct
{
    long s,l;
    [size_is(s),length_is(l)] long * ap[];
} o_cv_struct_t;

typedef struct
{
    long s,l;
    [size_is(s),length_is(l)] array_t aa[];
} io_cv_struct_t;

long fixed_op           /* in,out fixed struct ct. union */
(
    [in] handle_t h,
    [in,out] fixed_struct_t *s
);

long cfmt_op            /* in struct ct. conformant array of union */
(
    [in] handle_t h,
    [in] cfmt_struct_t *s
);

long vary_op
(
    [in] handle_t h,
    [in] i_vary_struct_t is,        /* in struct ct. varying array of char */
    [out] o_vary_struct_t *os,      /* out struct ct. varying array of float */
                                    /*  and varying array of struct          */
    [in,out] io_vary_struct_t *ios  /* in,out struct ct. varying array of    */
                                    /*  double and varying array of pointers */
);

long cv_op
(
    [in] handle_t h,
    [in] i_cv_struct_t *is,         /* in struct ct. c-v array of struct */
    [out] o_cv_struct_t **os,       /* out pointer to struct ct. */
                                    /* c-v array of pointers     */
    [in,out] io_cv_struct_t *ios    /* in,out struct ct. c-v array of arrays */
);
}

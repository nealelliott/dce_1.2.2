#!/bin/sh
#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
#
# HISTORY
# $Log: test6,v $
# Revision 1.1.10.1  1996/10/17  18:20:23  damon
# 	Submitting on behalf of Transarc
# 	[1996/10/17  16:50:48  damon]
#
# Revision 1.1.4.4  1993/01/11  18:27:05  htf
# 	Embedded copyright notice
# 	[1993/01/11  17:01:04  htf]
# 
# Revision 1.1.4.3  1992/10/28  16:22:37  jaffe
# 	Transarc delta: fred-ot5472-use-testhome-variable 1.1
# 	  Selected comments:
# 	    Fixed the fs and low tests to correctly use TESTTOP.  We were setting a
# 	    variable, testhome, as the location for the test scripts and executables,
# 	    but we did not use it to execute C programs.
# 	    (I checked out some scripts which did not need this change.)
# 	    No changes made.
# 	Transarc delta: jess-add-dumpkernel-in-fs-tests 1.3
# 	  Selected comments:
# 	    The icldump command and debug option for the tests have been added in the
# 	    fs test scripts. You can run fs/tests with -debug to dump kernel in case
# 	    of error. The delta also adds the icl_DumpKernel function in the C programm.
# 	    See above.
# 	    Put the debug option in test1.
# 	    When the debug is set the dumpfile is always created eventhough
# 	    there is no error.
# 	Transarc delta: jess-fs-path-for-icldump 1.1
# 	  Selected comments:
# 	    This delta adds the path for icldump command. The command has been
# 	    installed at "util" dir in test tree by Fred's delta.
# 	    See above.
# 	Transarc delta: jess-ot5320-fix-fs-low-testhome 1.1
# 	  Selected comments:
# 	    The fs and low test shell scripts have the following if statement
# 	    if [ "$TESTTOP" = "`pwd`" ]
# 	    then
# 	    UTIL_DIR=../util
# 	    testhome=$TESTTOP
# 	    else
# 	    UTIL_DIR=$TESTTOP/util
# 	    testhome=$TESTTOP/$testSuiteType
# 	    fi
# 	    The problem is that variable testSuiteType is not defined at this time.
# 	    See above.
# 	[1992/10/27  18:28:41  jaffe]
# 
# Revision 1.1.4.2  1992/08/28  18:13:01  jaffe
# 	Transarc delta: rajesh-clean-fs-tests 1.6
# 	  Selected comments:
# 	    To remove make, clean options from fs tests
# 	    Really no change
# 	    Make the scripts modular, structured.
# 	    The variable names are changed to follow coding standards.
# 	    See above.
# 	    Apply modification mentioned in revision 1.2 to 2 missed test file
# 	    err1 and err2.
# 	    Some bug fixes, and revision of tests err1 and err2. Introduction of
# 	    a common functions ProcessResult to analyse the result.
# 	    See above.
# 	    Further changes to some utility functions.
# 	    Added error test err2 to the Makefile
# 	[1992/08/28  12:20:36  jaffe]
# 
# Revision 1.1.2.3  1992/05/29  22:59:06  mason
# 	Transarc delta: fred-3754-change-script-name 1.1
# 	  Selected comments:
# 	    To clean up a number of defects with the tests.  In addition to defect
# 	    3754, the changes also fix defects 3750 and 3748.
# 	    Fixed setting of TESTTOP variable.
# 	[1992/05/29  12:26:50  mason]
# 
# Revision 1.1.2.2  1992/05/21  12:41:22  jaffe
# 	Transarc delta: fred-2980-and-2981-fix-sys 1.1
# 	  Selected comments:
# 	    To fix reported defects indicating files could not be found.  Added two
# 	    shell scripts, one to issue the correct command to get the system type
# 	    (either AFS or DFS), and a second to generate a file from a string.
# 	    Change variable sys to dfs_fsSysName and use fsSetSysName shell script.
# 	Transarc delta: fred-merge-tests 1.1
# 	  Selected comments:
# 	    Created this delta to merge Phil Hirsch's final DFS test code changes with
# 	    the test code that the OSF had.  Hopefully, this means we and the OSF
# 	    should be looking at the same test code.
# 	    Changes to facilitate merge of local DFS test code with the OSF's.
# 	Transarc delta: fred-remove-sys 1.1
# 	  Selected comments:
# 	    To remove dependency on the AFS sys command in the test scripts.
# 	    To remove dependency on AFS sys command.
# 
# 	$TALog: test6,v $
# 	Revision 4.24  1994/11/01  22:23:27  cfe
# 	Bring over the changes that the OSF made in going from their DCE 1.0.3
# 	release to their DCE 1.1 release.
# 	[from r4.23 by delta cfe-db6109-merge-1.0.3-to-1.1-diffs, r1.1]
# 
# 	[1992/05/20  19:26:08  jaffe]
# 
# $EndLog$
#
###############################################################################
#       Copyright (C) 1990, 1992 Transarc Corporation - All rights reserved   #
###############################################################################

# This script attempts to delete a file while another process has it open.

# Usage: test6 [-help] [-debug]

# Highest error number is: 3.

###############################################################################

#
# PrintUsage() -
#   Prints the usage message for this script.

PrintUsage()
{
    echo "$programName attempts to delete an open file"
    echo "Usage: $programName"
}

#
# Initialise some variables. UTIL_DIR is the directory containing 
# the script fs_FunctionsScript with common functions.
#

TESTTOP=${TESTTOP:="`pwd`"}

if [ "$TESTTOP" = "`pwd`" ]
then
    UTIL_DIR=../util
    testhome=$TESTTOP
else
    UTIL_DIR=$TESTTOP/util
    testhome=$TESTTOP/fs
fi

. $UTIL_DIR/fs_FunctionsScript
. $UTIL_DIR/fs_SetSysVar
createFileCmd="$UTIL_DIR/fs_GenerateFile"

trap '
    cd $currentDir
    rm -f tfile tout
    echo "$programName killed returning $scriptErrorExit" | tee -a $logFile
    exit $scriptErrorExit
' 2 3 15

#
# Initialise setup variables
#

fs_InitSetup fs

#
# Parse the command line
#

while [ "$1" != "" ]
do 
    case $1 in 
        help|-help) PrintUsage
                    exit $successExit
                    ;;
        debug|-debug)
                    dumpkernel="true"
                    shift
                    ;;

        *)          echo "ERROR $testSuiteType/$programName: invalid argument \"$1\"" | tee -a $logFile
                    exit $scriptErrExit
                    ;;
    esac
done

#
# Start test
#

(
    echo "$programName (del_open) starting in $currentDir"
    echo "Host `hostname` ($fs_sysName)"
    date
) | tee -a $logFile

fs_DetermineFSType

rm -rf tfile
echo "This is a test." > tfile
( 
    echo "After creation:"
    cat tfile
    ls -l tfile
    echo "" 
) | tee -a $logFile

(
    sleep 15
    wc -c 
) < tfile > tout &

sleep 3
rm tfile
result=$?

if [ $result -ne 0 ]
then 
    echo "- $programName: rm tfile returned $result (E1)" | tee -a $logFile
    if [ $dumpkernel = "true" ]
    then
           $UTIL_DIR/icldump >> $logFile
    fi
    errorCount=`expr $errorCount + 1`
else 
    ( 
        echo "After rm (tfile should be gone):"
        ls -l tfile 2>&1 
    ) | tee -a $logFile
fi

wait

( 
    echo ""
    echo "Contents of tout (shd be 16):"
    cat tout
) | tee -a $logFile

z=`cat tout`
if [ "$z" -eq 16 ]
then 
    echo "tout is correct" | tee -a $logFile
else 
    echo "- $programName: tout is wrong (E2)" | tee -a $logFile
    if [ $dumpkernel = "true" ]
    then
           $UTIL_DIR/icldump >> $logFile
    fi
    errorCount=`expr $errorCount + 1`
fi

if [ -f tfile ]
then 
    echo "- $programName: tfile still exists (E3)" | tee -a $logFile
    if [ $dumpkernel = "true" ]
    then
           $UTIL_DIR/icldump >> $logFile
    fi
    errorCount=`expr $errorCount + 1`
fi

###############################################################################

rm -f tfile tout

(
    echo ""
    echo "$testSuiteType/$programName returning $errorCount in $currentDir"
    date
) | tee -a $logFile

exit $errorCount

###############################################################################

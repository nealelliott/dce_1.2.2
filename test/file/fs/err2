#!/bin/sh
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
# 
# HISTORY
# $Log: err2,v $
# Revision 1.1.10.1  1996/10/17  18:19:42  damon
# 	Submitting on behalf of Transarc
# 	[1996/10/17  16:50:31  damon]
#
# Revision 1.1.4.5  1993/01/27  19:40:14  delgado
# 	Fix test expectation which was generating E73
# 	[1993/01/27  19:39:14  delgado]
# 
# Revision 1.1.4.4  1993/01/11  18:26:31  htf
# 	Embedded copyright notice
# 	[1993/01/11  16:59:30  htf]
# 
# Revision 1.1.4.3  1992/10/28  16:12:32  jaffe
# 	Transarc delta: jess-ot5320-fix-fs-low-testhome 1.1
# 	  Selected comments:
# 	    The fs and low test shell scripts have the following if statement
# 	    if [ "$TESTTOP" = "`pwd`" ]
# 	    then
# 	    UTIL_DIR=../util
# 	    testhome=$TESTTOP
# 	    else
# 	    UTIL_DIR=$TESTTOP/util
# 	    testhome=$TESTTOP/$testSuiteType
# 	    fi
# 	    The problem is that variable testSuiteType is not defined at this time.
# 	    See above.
# 	[1992/10/27  18:10:44  jaffe]
# 
# Revision 1.1.4.2  1992/08/28  18:11:02  jaffe
# 	Transarc delta: rajesh-clean-fs-tests 1.6
# 	  Selected comments:
# 	    To remove make, clean options from fs tests
# 	    Remove references to sys command by using fsSetSysName. Remove typos in
# 	    variable names.
# 	    Make the scripts modular, structured.
# 	    The variable names are changed to follow coding standards.
# 	    Apply modification mentioned in revision 1.2 to 2 missed test file
# 	    err1 and err2.
# 	    See above.
# 	    Some bug fixes, and revision of tests err1 and err2. Introduction of
# 	    a common functions ProcessResult to analyse the result.
# 	    See above.
# 	    Further changes to some utility functions.
# 	    Added error test err2 to the Makefile
# 	[1992/08/28  12:09:14  jaffe]
# 
# Revision 1.1.2.3  1992/05/29  22:57:46  mason
# 	Transarc delta: fred-3754-change-script-name 1.1
# 	  Selected comments:
# 	    To clean up a number of defects with the tests.  In addition to defect
# 	    3754, the changes also fix defects 3750 and 3748.
# 	    Fixed setting of TESTTOP variable.
# 	[1992/05/28  22:07:59  mason]
# 
# Revision 1.1.2.2  1992/05/21  12:37:53  jaffe
# 	Transarc delta: fred-2980-and-2981-fix-sys 1.1
# 	  Files modified:
# 	    fs: Makefile, err1, err2, half_meg, test1, test10, test2
# 	    fs: test2b, test2s, test3, test4, test5, test6, test7, test8
# 	    fs: test9
# 	  Selected comments:
# 	    To fix reported defects indicating files could not be found.  Added two
# 	    shell scripts, one to issue the correct command to get the system type
# 	    (either AFS or DFS), and a second to generate a file from a string.
# 	    Change variable sys to dfs_fsSysName and use fsSetSysName shell script.
# 	Transarc delta: fred-merge-tests 1.1
# 	  Files modified:
# 	    Makefile
# 	    bos: Makefile, READ_ME, init_dce, kills, runc, runtests
# 	    bos: setup, shows
# 	    bos/tests: Makefile, test0, test1, test10, test11, test12
# 	    bos/tests: test2, test3, test4, test5, test6, test7, test8
# 	    bos/tests: test9; bos/tests/procs: Makefile
# 	    cm: Makefile, runtests, test0, test1, test2, test3, test4
# 	    cm: test5, test6; config: chk_errnr, echeck, environment
# 	    fs: Makefile, READ_ME, err1, err2, longalpha, longfox
# 	    fs: longmix, prog1.c, rtest1, shortalpha, shortfox, shortmix
# 	    fs: test1, test10, test2, test2b, test2s, test3, test4
# 	    fs: test5, test6, test7, test8, test9
# 	    fts: Makefile, check, etest.sed, etest1, etest2, etest3
# 	    fts: etest4, etest5, etest6, rtest1, rtest2, runrtests
# 	    fts: runtests, test1, test10, test11, test12, test13, test2
# 	    fts: test3, test4, test5, test6, test7, test8, test9
# 	    low: Makefile, ctrl.asc, prog11.c, prog12.c, prog14.c
# 	    low: prog3a.c, prog8.c, prog9.c, rtest1, rtest2, styl.asc
# 	    low: test1, test10, test11, test12, test13, test14, test2
# 	    low: test3, test4, test5, test6, test7, test8, test9
# 	    naming: Makefile, bostest, fstest, ftstest
# 	    scout: Makefile, test1, test2; setup: Makefile, environment
# 	    ubik: Makefile, READ_ME, init, kills, runc, setup, shows
# 	    ubik: udbg; util: Makefile, sys.c
# 	  Selected comments:
# 	    Created this delta to merge Phil Hirsch's final DFS test code changes with
# 	    the test code that the OSF had.  Hopefully, this means we and the OSF
# 	    should be looking at the same test code.
# 	    Changes to facilitate merge of local DFS test code with the OSF's.
# 	Transarc delta: fred-remove-sys 1.1
# 	  Files modified:
# 	    Makefile; cm: runtests, test0, test3, test4, test6
# 	    fs: Makefile, err1, err2, rtest1, test10, test2, test2b
# 	    fs: test2s, test3, test4, test5, test6, test7, test8, test9
# 	    low: progErrMap.c, rprogErrMapQuota.c, rtest1, rtest2
# 	    low: rtestErrMapQuota, test1, test10, test11, test12, test13
# 	    low: test14, test2, test3, test4, test5, test6, test7, test8
# 	    low: test9, testErrMap
# 	    util: Makefile, fs_GenerateFile, fs_SetSysName
# 	  Selected comments:
# 	    To remove dependency on the AFS sys command in the test scripts.
# 	    To remove dependency on AFS sys command.
# 	[1992/05/20  18:24:12  jaffe]
# 
# $EndLog$

: #############################################################################
: #  Copyright (C) 1990, 1992 Transarc Corporation - All rights reserved      #
: #############################################################################

: # This script tests various error conditions when using Unix commands from
: # the shell. The error conditions involve improper permissions.

: # Usage: sh -i err2

: # On most BSD Unix systems, you must run this script via 'sh -i' in order
: # to prevent errors from terminating the script. The ': #' at the beginning
: # of comment lines in this script is needed when you do this.

: # All standard error messages have been turned off to the extent possible,
: # but most systems will still print some error messages during execution of
: # this script.

: # I cannot imagine why anyone would want to run multiple copies of this
: # script simultaneously, but if you do want to do it you must run them in
: # separate directories.

: #############################################################################

: # 
: # Note that the cd commands have been commented out as otherwise the 
: # process dies due to receipt of suspected SIGKILL signal. Running in 
: # mode causes some characters after the cd command to be eaten up.
: # Mail has been sent help@transarc.com for resolution on this issue.

: #
: # PrintUsage() -
: #   Prints the usage message for this script.

PrintUsage()
{
	echo "$programName tests Unix error conditions"
	echo "Usage: $programName"
}

: #
: # Initialise some variables. UTIL_DIR is the directory containing 
: # the script fs_FunctionsScript with common functions.
: #

TESTTOP=${TESTTOP:="`pwd`"}

if [ "$TESTTOP" = "`pwd`" ]
then
	UTIL_DIR=../util
	testhome=$TESTTOP
else
	UTIL_DIR=$TESTTOP/util
	testhome=$TESTTOP/fs
fi

. $UTIL_DIR/fs_FunctionsScript
. $UTIL_DIR/fs_SetSysVar
createFileCmd="$UTIL_DIR/fs_GenerateFile"

trap '
	chmod 777 abc xyz XYZ
	rm -rf abc xyz XYZ
	echo "$programName killed" | tee -a $logFile
	exit $scriptErrorExit
	' 2 3 15

: #
: # Initialise setup variables
: #

fs_InitSetup fs

: #
: # Parse the command line
: #

while [ "$1" != "" ]
do 
	case $1 in 
		help|-help) PrintUsage
					exit $successExit
					;;

		*)          echo "ERROR $testSuiteType/$programName: invalid argument \"$1\"" | tee -a $logFile
					exit $scriptErrExit
					;;
	esac
done

: #
: # Start test
: #

(
	echo "$programName (perms) starting in $D"
	echo "Host `hostname` ($dfs_fsSysName)"
	date
) |  tee -a $logFile

fs_DetermineFSType

rm -f $programName.out
originalUMask=`umask`
umask 022

: #############################################################################


echo "2. Invalid (000) Unix permissions on an existing directory" | tee -a $logFile
rm -f xyz abc
mkdir xyz
date > abc
cp abc xyz/ABC
chmod 000 xyz
: # xyz is a directory with Unix mode 000; abc and xyz/ABC are files

#cd xyz 2> /dev/null
#ProcessResult $testSuiteType $programName $? ${PASS_EQ_NONZERO} E30 "cd <directory-with-mode-bits-000> returned zero exit status" $FALSE -log $logFile

#[ `pwd` = $currentDir ]
#ProcessResult $testSuiteType $programName $? $PASS_EQ_ZERO E31 "cd <directory-with-mode-bits-000> changed directory to `pwd` from $currentDir" $FALSE -log $logFile -execOnError "cd $currentDir"

chgrp 10 xyz/ABC 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E32 "chgrp <group> <directory-with-mode-bits-000/file> returned zero exit status" $FALSE -log $logFile 
 
chmod 10 xyz/ABC 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E33 "chmod <mode> <directory-with-mode-bits-000/file> returned zero exit status" $FALSE -log $logFile 

chown 10 xyz/ABC 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E34 "chown <owner> <directory-with-mode-bits-000/file> returned zero exit status" $FALSE -log $logFile 

cp abc xyz 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E35 "cp <file> <directory-with-mode-bits-000> returned zero exit status" $FALSE -log $logFile 

chmod 777 xyz
[ -f xyz/abc ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E36 "cp <file> <directory-with-mode-bits-000> copied the file" $FALSE -log $logFile 
chmod 000 xyz

cp abc xyz/ABC 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E37 "cp <file> <directory-with-mode-bits-000/file> returned zero exit status" $FALSE -log $logFile 

chmod 777 xyz
[ `find . -name xyz/ABC -newer abc -print | wc -c ` -gt 0 ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E38 "cp <file> <directory-with-mode-bits-000/file> modified target file" $FALSE -log $logFile 
chmod 000 xyz

ln xyz/ABC xyz/DEF < /dev/null 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E39 "ln <directory-with-mode-bits-000/file1> <directory-with-mode-bits-000/file2> returned zero exit status" $FALSE -log $logFile 

chmod 777 xyz
[ -f xyz/DEF ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E40 "ln <directory-with-mode-bits-000/file1> <directory-with-mode-bits-000/file2> created file2" $FALSE -log $logFile 
chmod 000 xyz

ln abc xyz/GHI < /dev/null 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E41 "ln <file1> <directory-with-mode-bits-000/file2> returned zero exit status" $FALSE -log $logFile

chmod 777 xyz
[ -f xyz/GHI ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E42 "ln <file1> <directory-with-mode-bits-000/file2> created file 2" $FALSE -log $logFile
chmod 000 xyz

ln -s xyz/ABC xyz/JKL < /dev/null 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E43 "ln -s <directory-with-mode-bits-000/file1> <directory-with-mode-bits-000/file2> returned zero exit status" $FALSE -log $logFile 

chmod 777 xyz
[ -f xyz/JLK ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E44 "ln -s <directory-with-mode-bits-000/file1> <directory-with-mode-bits-000/file2> created file2" $FALSE -log $logFile 
chmod 000 xyz

ln -s abc xyz/MNO < /dev/null 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E45 "ln -s <file1> <directory-with-mode-bits-000/file2> returned zero exit status" $FALSE -log $logFile

chmod 777 xyz
[ -f xyz/MNO ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E46 "ln -s <file1> <directory-with-mode-bits-000/file2> created file 2" $FALSE -log $logFile
chmod 000 xyz

ls xyz > /dev/null 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E47 "ls <directory-with-mode-bits-000> succeeded" $FALSE -log $logFile

ls xyz/* > /dev/null 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E48 "ls <directory-with-mode-bits-000/*> succeeded" $FALSE -log $logFile

mv xyz/ABC xyz/PQR 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E49 "mv <directory-with-mode-bits-000/file1> <directory-with-mode-bits-000/file2> returned zero exit status" $FALSE -log $logFile

chmod 777 xyz
[ -f xyz/PQR ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E50 "mv <directory-with-mode-bits-000/file1> <directory-with-mode-bits-000/file2> produced file2" $FALSE -log $logFile
chmod 000 xyz

rm xyz/* < /dev/null 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E51 "rm <directory-with-mode-bits-000/*> returned zero exit status" $FALSE -log $logFile

chmod 777 xyz
[ ! -f xyz/ABC ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E52 "rm <directory-with-mode-bits-000/file> removed the files" $FALSE -log $logFile
chmod 000 xyz

rm -r xyz < /dev/null 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E53 "rm -r <directory-with-mode-bits-000> returned zero exit status" $FALSE -log $logFile

[ ! -d xyz ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E54 "rm -r <directory-with-mode-bits-000> removed the directory" $FALSE -log $logFile -execOnError "mkdir xyz; cp abc xyz/ABC; chmod 000 xyz"

chmod 777 xyz
[ ! -f xyz/ABC ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E55 "rm -r <directory-with-mode-bits-000> removed the files in the directory" $FALSE -log $logFile -execOnError "cp abc xyz/ABC"
chmod 000 xyz

echo "3. Invalid (666) Unix permissions on an existing directory" | tee -a $logFile

chmod 777 xyz
rm -rf xyz

mkdir xyz
cp abc xyz/ABC
chmod 666 xyz
: # xyz is a directory with Unix mode 666; abc and xyz/ABC are files

#cd xyz 2> /dev/null
#ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E56 "cd <directory-with-mode-bits-666> returned zero exit status" $FALSE -log $logFile

#[ `pwd` != $currentDir ]
#ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E57 "cd <directory-with-mode-bits-666> changed directory to `pwd` from $currentDir" $FALSE -log $logFile -execOnError "cd $currentDir"

chgrp 10 xyz/ABC 2> /dev/null  
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E58 "chgrp <group> <directory-with-mode-bits-666/file> returned zero exit status" $FALSE -log $logFile 

chmod 10 xyz/ABC 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E59 "chmod <mode> <directory-with-mode-bits-666/file> returned zero exit status" $FALSE -log $logFile 

chown 10 xyz/ABC 2> /dev/null 
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E60 "chown <owner> <directory-with-mode-bits-666/file> returned zero exit status" $FALSE -log $logFile 

cp abc xyz 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E61 "cp <file> <directory-with-mode-bits-666> returned zero exit status" $FALSE -log $logFile 

chmod 777 xyz
[ -f xyz/abc ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E62 "cp <file> <directory-with-mode-bits-666> copied the file" $FALSE -log $logFile 
chmod 666 xyz

cp abc xyz/ABC 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E63 "cp <file> <directory-with-mode-bits-666/file> returned zero exit status" $FALSE -log $logFile 

chmod 777 xyz
[ `find . -name xyz/ABC -newer abc -print | wc -c` -gt 0 ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E64 "cp <file> <directory-with-mode-bits-666/file> modified target file" $FALSE -log $logFile 
chmod 666 xyz

ln xyz/ABC xyz/DEF < /dev/null 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E65 "ln <directory-with-mode-bits-666/file1> <directory-with-mode-bits-666/file2> returned zero exit status" $FALSE -log $logFile 

chmod 777 xyz
[ -f xyz/DEF ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E66 "ln <directory-with-mode-bits-666/file1> <directory-with-mode-bits-666/file2> created file2" $FALSE -log $logFile 
chmod 666 xyz

ln abc xyz/GHI < /dev/null 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E67 "ln <file1> <directory-with-mode-bits-666/file2> returned zero exit status" $FALSE -log $logFile

chmod 777 xyz
[ -f xyz/GHI ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E68 "ln <file1> <directory-with-mode-bits-666/file2> created file 2" $FALSE -log $logFile
chmod 666 xyz

ln -s xyz/ABC xyz/JKL < /dev/null 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E69 "ln -s <directory-with-mode-bits-666/file1> <directory-with-mode-bits-666/file2> returned zero exit status" $FALSE -log $logFile 

chmod 777 xyz
[ -f xyz/JLK ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E70 "ln -s <directory-with-mode-bits-666/file1> <directory-with-mode-bits-666file2> created file2" $FALSE -log $logFile 
chmod 666 xyz

ln -s abc xyz/MNO < /dev/null 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E71 "ln -s <file1> <directory-with-mode-bits-666/file2> returned zero exit status" $FALSE -log $logFile

chmod 777 xyz
[ -f xyz/MNO ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E72 "ln -s <file1> <directory-with-mode-bits-666/file2> created file 2" $FALSE -log $logFile
chmod 666 xyz


#ls xyz > /dev/null 2> /dev/null
#ProcessResult $testSuiteType $programName $? $PASS_EQ_ZERO E73 "ls <directory-with-mode-bits666> failed" $FALSE -log $logFile

ls xyz/* > /dev/null 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E74 "ls <directory-with-mode-bits-666/*> succeeded" $FALSE -log $logFile

mv xyz/ABC xyz/PQR 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E75 "mv <directory-with-mode-bits-666/file1> <directory-with-mode-bits-666/file2> returned zero exit status" $FALSE -log $logFile

chmod 777 xyz
[ -f xyz/PQR ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E76 "mv <directory-with-mode-bits-666/file1> <directory-with-mode-bits-666/file2> produced file2" $FALSE -log $logFile
chmod 666 xyz

rm xyz/* < /dev/null 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E77 "rm <directory-with-mode-bits-666/*> returned zero exit status" $FALSE -log $logFile

chmod 777 xyz
[ ! -f xyz/ABC ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E78 "rm <directory-with-mode-bits-666/file> removed the files" $FALSE -log $logFile
chmod 666 xyz

rm -r xyz < /dev/null 2> /dev/null
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E79 "rm -r <directory-with-mode-bits-666> returned zero exit status" $FALSE -log $logFile

[ ! -d xyz ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E80 "rm -r <directory-with-mode-bits-666> removed the directory" $FALSE -log $logFile -execOnError "mkdir xyz; cp abc xyz/ABC; chmod 666 xyz"

chmod 777 xyz
[ ! -f xyz/ABC ]
ProcessResult $testSuiteType $programName $? $PASS_EQ_NONZERO E81 "rm -r <directory-with-mode-bits-666> removed the files in the directory" $FALSE -log $logFile -execOnError "cp abc xyz/ABC"
chmod 666 xyz

chmod 777 abc xyz XYZ
rm -f abc XYZ
rm -rf xyz

: #############################################################################

( 
	echo "$testSuiteType/$programName returning $errorCount in $currentDir"
 	date
) | tee -a $logFile

umask $originalUMask

exit $errorCount

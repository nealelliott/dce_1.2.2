#
#      SCCS:  @(#)makefile	1.2 (92/09/30) 
#
#	UniSoft Ltd., London, England
#
# (C) Copyright 1992 X/Open Company Limited
#
# All rights reserved.  No part of this source code may be reproduced,
# stored in a retrieval system, or transmitted, in any form or by any
# means, electronic, mechanical, photocopying, recording or otherwise,
# except as stated in the end-user licence agreement, without the prior
# permission of the copyright owners.
#
# X/Open and the 'X' symbol are trademarks of X/Open Company Limited in
# the UK and other countries.
#
#
# ************************************************************************
#
# SCCS:   	@(#)makefile	1.2 92/09/30
# NAME:		makefile
# PRODUCT:	DTET (Distributed Test Environment Toolkit) release 1.0b
# AUTHOR:		Andrew Dingwall, UniSoft Ltd.
# DATE CREATED:	June 1992
#
# DESCRIPTION:
#	dtetlib makefile
# 
# MODIFICATIONS:
# 
# ************************************************************************

include ../defines.mk
LCDEFS = $(DTET_CDEFS)
include ../common.mk

LIBNAME = $(LIBDAPI)

all install: $(LIBNAME)

OFILES = amsg.o avmsg.o btmsg.o bufchk.o buftrace.o dtmsg.o dtsize.o \
	eaccess.o equindex.o errname.o fappend.o fgetargs.o fioclex.o \
	fionbio.o fork.o ftoa.o generror.o genfatal.o getargs.o hexdump.o \
	ldst.o llist.o ltoa.o ltoo.o ltox.o madir.o maperr.o mapsig.o \
	mkdir.o notty.o optarg.o prerror.o ptflags.o ptspid.o ptstate.o \
	ptstype.o pttype.o ptype.o putenv.o remvar.o repcode.o reqcode.o \
	rtoa.o sigmap.o strstore.o svote.o sysbyid.o sysent.o systate.o \
	targs.o tdump.o tfname.o trace.o unmaperr.o unmapsig.o valmsg.o \
	wait3.o


MEMBERS = $(LIBNAME)(amsg.o) $(LIBNAME)(avmsg.o) $(LIBNAME)(btmsg.o) \
	$(LIBNAME)(bufchk.o) $(LIBNAME)(buftrace.o) $(LIBNAME)(dtmsg.o) \
	$(LIBNAME)(dtsize.o) $(LIBNAME)(eaccess.o) $(LIBNAME)(equindex.o) \
	$(LIBNAME)(errname.o) $(LIBNAME)(fappend.o) $(LIBNAME)(fgetargs.o) \
	$(LIBNAME)(fioclex.o) $(LIBNAME)(fionbio.o) $(LIBNAME)(fork.o) \
	$(LIBNAME)(ftoa.o) $(LIBNAME)(generror.o) $(LIBNAME)(genfatal.o) \
	$(LIBNAME)(getargs.o) $(LIBNAME)(hexdump.o) $(LIBNAME)(ldst.o) \
	$(LIBNAME)(llist.o) $(LIBNAME)(ltoa.o) $(LIBNAME)(ltoo.o) \
	$(LIBNAME)(ltox.o) $(LIBNAME)(madir.o) $(LIBNAME)(maperr.o) \
	$(LIBNAME)(mapsig.o) $(LIBNAME)(mkdir.o) $(LIBNAME)(notty.o) \
	$(LIBNAME)(optarg.o) $(LIBNAME)(prerror.o) $(LIBNAME)(ptflags.o) \
	$(LIBNAME)(ptspid.o) $(LIBNAME)(ptstate.o) $(LIBNAME)(ptstype.o) \
	$(LIBNAME)(pttype.o) $(LIBNAME)(ptype.o) $(LIBNAME)(putenv.o) \
	$(LIBNAME)(remvar.o) $(LIBNAME)(repcode.o) $(LIBNAME)(reqcode.o) \
	$(LIBNAME)(rtoa.o) $(LIBNAME)(sigmap.o) $(LIBNAME)(strstore.o) \
	$(LIBNAME)(svote.o) $(LIBNAME)(sysbyid.o) $(LIBNAME)(sysent.o) \
	$(LIBNAME)(systate.o) $(LIBNAME)(targs.o) $(LIBNAME)(tdump.o) \
	$(LIBNAME)(tfname.o) $(LIBNAME)(trace.o) $(LIBNAME)(unmaperr.o) \
	$(LIBNAME)(unmapsig.o) $(LIBNAME)(valmsg.o) $(LIBNAME)(wait3.o)


$(LIBNAME): $P lib_made $(MEMBERS)
	sleep 2
	touch lib_made
	$(RANLIB) $@

.PRECIOUS: $(LIBNAME)

lib_made:
	$(MAKE) $(OFILES)
	ar rv $(LIBNAME) `$(LORDER) $(OFILES) | $(TSORT)`
	rm -f $(OFILES)


CFILES = $(OFILES:.o=.c)

LLIBS =

lint:
	lint -u $(CDEFS) $(OFILES:.o=.c) $(LLIBS) $(LINTLIBS)

tags: $(CFILES)
	ctags $(CFILES)

scope: $(CFILES)
	ls -d $(CFILES) | sort -t/ +1 -o $@

CLEAN clean:
	rm -f $(OFILES)

CLOBBER clobber: clean
	rm -f lib_made

FORCE FRC: clobber all


# dependencies

avmsg.o $(LIBNAME)(avmsg.o): $(INC)/avmsg.h $(INC)/dtetlib.h $(INC)/dtmac.h \
	$(INC)/dtmsg.h $(INC)/ldst.h

btmsg.o $(LIBNAME)(btmsg.o): $(INC)/btmsg.h $(INC)/dtetlib.h $(INC)/dtmac.h \
	$(INC)/dtmsg.h $(INC)/ldst.h

bufchk.o $(LIBNAME)(bufchk.o): $(INC)/dtetlib.h $(INC)/dtmac.h $(INC)/error.h \
	$(INC)/ltoa.h

buftrace.o $(LIBNAME)(buftrace.o): $(INC)/dtetlib.h $(INC)/dtmac.h \
	$(INC)/error.h $(INC)/ltoa.h

dtmsg.o $(LIBNAME)(dtmsg.o): $(INC)/dtmsg.h $(INC)/ldst.h

dtsize.o $(LIBNAME)(dtsize.o): $(INC)/dtetlib.h

eaccess.o $(LIBNAME)(eaccess.o): $(INC)/dtetlib.h

equindex.o $(LIBNAME)(equindex.o): $(INC)/dtetlib.h

errname.o $(LIBNAME)(errname.o): $(INC)/dtetlib.h $(INC)/ltoa.h

fappend.o $(LIBNAME)(fappend.o): $(INC)/dtetlib.h $(INC)/error.h \
	$(INC)/ltoa.h

fgetargs.o $(LIBNAME)(fgetargs.o): $(INC)/dtetlib.h

fioclex.o $(LIBNAME)(fioclex.o): $(INC)/dtetlib.h $(INC)/error.h $(INC)/ltoa.h

fionbio.o $(LIBNAME)(fionbio.o): $(INC)/dtetlib.h $(INC)/error.h $(INC)/ltoa.h

fork.o $(LIBNAME)(fork.o): $(INC)/dtetlib.h $(INC)/dtmac.h

ftoa.o $(LIBNAME)(ftoa.o): $(INC)/dtetlib.h $(INC)/dtmac.h $(INC)/dtmsg.h \
	$(INC)/ftoa.h $(INC)/ltoa.h $(INC)/ptab.h

generror.o $(LIBNAME)(generror.o): $(INC)/dtetlib.h

genfatal.o $(LIBNAME)(genfatal.o): $(INC)/dtetlib.h $(INC)/error.h

getargs.o $(LIBNAME)(getargs.o): $(INC)/dtetlib.h

hexdump.o $(LIBNAME)(hexdump.o): $(INC)/dtetlib.h $(INC)/dtmac.h

ldst.o $(LIBNAME)(ldst.o): $(INC)/dtetlib.h $(INC)/dtmsg.h $(INC)/error.h \
	$(INC)/ldst.h $(INC)/ltoa.h

llist.o $(LIBNAME)(llist.o): $(INC)/error.h $(INC)/llist.h

ltoa.o $(LIBNAME)(ltoa.o): $(INC)/ltoa.h

ltoo.o $(LIBNAME)(ltoo.o): $(INC)/ltoa.h

ltox.o $(LIBNAME)(ltox.o): $(INC)/ltoa.h

madir.o $(LIBNAME)(madir.o): $(INC)/dtetlib.h $(INC)/dtmac.h $(INC)/error.h

maperr.o $(LIBNAME)(maperr.o): $(INC)/dtetlib.h $(INC)/dtmsg.h $(INC)/error.h

mapsig.o $(LIBNAME)(mapsig.o): $(INC)/dtetlib.h $(INC)/error.h $(INC)/ltoa.h \
	sigmap.h

mkdir.o $(LIBNAME)(mkdir.o): $(INC)/dtetlib.h $(INC)/dtmac.h

notty.o $(LIBNAME)(notty.o): $(INC)/dtetlib.h

optarg.o $(LIBNAME)(optarg.o): $(INC)/dtetlib.h

prerror.o $(LIBNAME)(prerror.o): $(INC)/dtetlib.h

ptflags.o $(LIBNAME)(ptflags.o): $(INC)/dtmsg.h $(INC)/ftoa.h $(INC)/ptab.h

ptspid.o $(LIBNAME)(ptspid.o): $(INC)/dtmsg.h $(INC)/error.h $(INC)/ptab.h

ptstate.o $(LIBNAME)(ptstate.o): $(INC)/dtetlib.h $(INC)/dtmsg.h $(INC)/ltoa.h \
	$(INC)/ptab.h

ptstype.o $(LIBNAME)(ptstype.o): $(INC)/dtmsg.h $(INC)/error.h $(INC)/ptab.h

pttype.o $(LIBNAME)(pttype.o): $(INC)/dtmsg.h $(INC)/error.h $(INC)/ptab.h

ptype.o $(LIBNAME)(ptype.o): $(INC)/dtetlib.h $(INC)/dtmsg.h $(INC)/ltoa.h

putenv.o $(LIBNAME)(putenv.o): $(INC)/dtetlib.h $(INC)/dtmac.h

remvar.o $(LIBNAME)(remvar.o): $(INC)/dtetlib.h

repcode.o $(LIBNAME)(repcode.o): $(INC)/dtetlib.h $(INC)/dtmsg.h $(INC)/ltoa.h

reqcode.o $(LIBNAME)(reqcode.o): $(INC)/dtetlib.h $(INC)/dtmsg.h $(INC)/ltoa.h

rtoa.o $(LIBNAME)(rtoa.o): $(INC)/dtetlib.h $(INC)/dtmsg.h $(INC)/ltoa.h \
	$(INC)/ptab.h

sigmap.o $(LIBNAME)(sigmap.o): sigmap.h

strstore.o $(LIBNAME)(strstore.o): $(INC)/dtetlib.h $(INC)/dtmac.h \
	$(INC)/error.h $(INC)/ltoa.h

svote.o $(LIBNAME)(svote.o): $(INC)/dtetlib.h $(INC)/ltoa.h $(INC)/synreq.h

sysbyid.o $(LIBNAME)(sysbyid.o): $(INC)/sysent.h

sysent.o $(LIBNAME)(sysent.o): $(INC)/dtetlib.h $(INC)/dtmac.h $(INC)/error.h \
	$(INC)/sysent.h

systate.o $(LIBNAME)(systate.o): $(INC)/dtetlib.h $(INC)/ltoa.h $(INC)/synreq.h

targs.o $(LIBNAME)(targs.o): $(INC)/dtetlib.h $(INC)/dtmac.h $(INC)/dtmsg.h \
	$(INC)/ltoa.h trace.h

tdump.o $(LIBNAME)(tdump.o): $(INC)/dtetlib.h $(INC)/dtmac.h trace.h

tfname.o $(LIBNAME)(tfname.o): $(INC)/bstring.h $(INC)/dtetlib.h $(INC)/dtmac.h \
	$(INC)/error.h $(INC)/ltoa.h

trace.o $(LIBNAME)(trace.o): $(INC)/dtetlib.h $(INC)/dtmac.h $(INC)/dtmsg.h \
	$(INC)/error.h $(INC)/ltoa.h trace.h

unmaperr.o $(LIBNAME)(unmaperr.o): $(INC)/dtetlib.h $(INC)/dtmsg.h

unmapsig.o $(LIBNAME)(unmapsig.o): $(INC)/dtetlib.h $(INC)/error.h \
	$(INC)/ltoa.h sigmap.h

valmsg.o $(LIBNAME)(valmsg.o): $(INC)/dtetlib.h $(INC)/dtmac.h $(INC)/dtmsg.h \
	$(INC)/ldst.h $(INC)/valmsg.h

wait3.o $(LIBNAME)(wait3.o): $(INC)/dtetlib.h



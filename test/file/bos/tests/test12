#!/bin/sh
#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
#
# HISTORY
# $Log: test12,v $
# Revision 1.1.631.1  1996/10/17  18:17:03  damon
# 	Submitting on behalf of Transarc
# 	[1996/10/17  16:49:32  damon]
#
# Revision 1.1.626.1  1994/02/04  20:39:36  devsrc
# 	Merged from 1.0.3a to 1.1
# 	[1994/02/04  15:22:09  devsrc]
# 
# Revision 1.1.624.1  1993/12/07  17:41:04  jaffe
# 	1.0.3a update from Transarc
# 	[1993/12/03  18:37:02  jaffe]
# 
# Revision 1.1.5.2  1993/01/11  17:38:35  htf
# 	Embedded copyright notice
# 	[1993/01/11  16:55:21  htf]
# 
# Revision 1.1.2.2  1992/05/21  12:34:48  jaffe
# 	Transarc delta: fred-merge-tests 1.1
# 	  Files modified:
# 	    Makefile
# 	    bos: Makefile, READ_ME, init_dce, kills, runc, runtests
# 	    bos: setup, shows
# 	    bos/tests: Makefile, test0, test1, test10, test11, test12
# 	    bos/tests: test2, test3, test4, test5, test6, test7, test8
# 	    bos/tests: test9; bos/tests/procs: Makefile
# 	    cm: Makefile, runtests, test0, test1, test2, test3, test4
# 	    cm: test5, test6; config: chk_errnr, echeck, environment
# 	    fs: Makefile, READ_ME, err1, err2, longalpha, longfox
# 	    fs: longmix, prog1.c, rtest1, shortalpha, shortfox, shortmix
# 	    fs: test1, test10, test2, test2b, test2s, test3, test4
# 	    fs: test5, test6, test7, test8, test9
# 	    fts: Makefile, check, etest.sed, etest1, etest2, etest3
# 	    fts: etest4, etest5, etest6, rtest1, rtest2, runrtests
# 	    fts: runtests, test1, test10, test11, test12, test13, test2
# 	    fts: test3, test4, test5, test6, test7, test8, test9
# 	    low: Makefile, ctrl.asc, prog11.c, prog12.c, prog14.c
# 	    low: prog3a.c, prog8.c, prog9.c, rtest1, rtest2, styl.asc
# 	    low: test1, test10, test11, test12, test13, test14, test2
# 	    low: test3, test4, test5, test6, test7, test8, test9
# 	    naming: Makefile, bostest, fstest, ftstest
# 	    scout: Makefile, test1, test2; setup: Makefile, environment
# 	    ubik: Makefile, READ_ME, init, kills, runc, setup, shows
# 	    ubik: udbg; util: Makefile, sys.c
# 	  Selected comments:
# 	    Created this delta to merge Phil Hirsch's final DFS test code changes with
# 	    the test code that the OSF had.  Hopefully, this means we and the OSF
# 	    should be looking at the same test code.
# 	    Changes to facilitate merge of local DFS test code with the OSF's.
# 
# 	$TALog: test12,v $
# 	Revision 4.7  1994/11/01  22:21:15  cfe
# 	Bring over the changes that the OSF made in going from their DCE 1.0.3
# 	release to their DCE 1.1 release.
# 	[from r4.6 by delta cfe-db6109-merge-1.0.3-to-1.1-diffs, r1.1]
# 
# 	Revision 4.6  1993/11/17  20:17:19  comer
# 	Remove the NoAuth file at the beginning and end of the test
# 	for both local and remote case.
# 	[from r4.5 by delta comer-db4697-bos-test12-make-test-check-remote-file, r1.2]
# 
# Revision 4.5  1993/11/16  21:26:39  comer
# 	test12 wasn't really checking for existence of the NoAuth file
# 	when SERVER_1 pointed to another machine.
# 
# 	Check remote existence.
# 	[from r4.4 by delta comer-db4697-bos-test12-make-test-check-remote-file, r1.1]
# 
# Revision 4.4  1993/10/27  19:51:32  comer
# 	Cheanged bos test11 and test12 to set $RSH to the proper command
# 	for rsh/remsh, and to use it.
# 	[from r4.3 by delta comer-db4574-make-bos-tests-use-remsh-for-hp, r1.1]
# 
# Revision 4.3  1993/01/14  17:33:01  jaffe
# 	revdrop of latest OSF copyright changes to these files
# 	[from r4.2 by delta osf-revdrop-01-12-92, r1.1]
# 
# 	[1992/05/20  17:18:32  jaffe]
# 
# $EndLog$
#

###############################################################################
#    Copyright (C) 1991, 1992 Transarc Corporation - All rights reserved      #
###############################################################################

# This test is applicable to DFS running bosserver.
# The script tests the bos setauth subcommand.

###############################################################################

# Usage:                test12

# Typically run via:    test12 >& test12.out
# or via the bos/runtests script.

###############################################################################

# Test environment:
# This test requires DFS server $SERVER_1 to be running bosserver.

# Privilege required:
# You must be authenticated to DCE as someone who's in admin.bos, and
# you must be logged into Unix as local root.

# Highest error number is: 6.

###############################################################################

d=`pwd`
hn=`hostname`
p=`basename $0`
rc=0
ty=bos

: ${AUTH_ARG=""}
: ${CELL_NAME=`sed -n '/cellname/s/cellname[         ]*\/\.\.\.\///p' /opt/dcelocal/dce_cf.db`}
: ${CELL_ARG=""}
: ${SERVER_1=$hn}
: ${VERB_ARG=""}

: ${bin_dir=/opt/dcelocal/bin}
: ${dns_cell_name=/.../$CELL_NAME}
: ${dns_server_prefix=/.:/hosts/}

PATH=":"$bin_dir":"$PATH

RSH=rsh
systype=`uname -s`
if [ "$systype" = "HP-UX" ]
  then
	RSH=remsh
fi

sav_arg="-server $dns_server_prefix$SERVER_1 $AUTH_ARG $VERB_ARG"

dir=/opt/dcelocal/var/dfs
file=$dir/NoAuth

if [ "${SERVER_1}" != "$hn" ] 
then
	if ${RSH} $SERVER_1 pwd
	  then :
	  else
		echo "This test requires ${RSH} functionality to work properly (test12: E0)" >&2
		echo "test12 FAILED"
		exit 1
	fi
fi	


# check existence of remote file
checkremotefile() {
	_host=$1
	_file=$2

	if ${RSH} $_host ls -ld $_file 2> /dev/null | grep '^[d-]'
	  then
		true
	  else
		false
	fi
}

###############################################################################

echo ""
date
echo "RUNNING bos COMMANDS on SERVER $SERVER_1 in CELL $CELL_NAME."
echo "========================================================================"
echo ""

###############################################################################

if test "$SERVER_1" != "" -a "$SERVER_1" != $hn
   then ${RSH} $SERVER_1 rm -f $file
   else rm -f $file
   fi

echo ""; date; echo "Listing $dir..."
if test "$SERVER_1" != "" -a "$SERVER_1" != $hn
   then ${RSH} $SERVER_1 ls -l $dir
   else ls -l $dir
   fi

echo ""; echo "Turning auth checking off..."
bos setauth -authchecking off $sav_arg
if test $? -ne 0; then echo "- failed ($p: E1)"; rc=`expr $rc + 1`; fi

if test "$SERVER_1" != "" -a "$SERVER_1" != $hn
   then ${RSH} $SERVER_1 ls -l $dir
        if checkremotefile $SERVER_1 $file
           then :
	   else echo "- NoAuth file is missing ($p: E5)"
                rc=`expr $rc + 1`
                touch $file
           fi
   else ls -l $dir
        if test ! -f $file
           then echo "- NoAuth file is missing ($p: E2)"
                rc=`expr $rc + 1`
                touch $file
           fi
   fi

echo ""; echo "Turning auth checking on..."
bos setauth -authchecking on $sav_arg
if test $? -ne 0; then echo "- failed ($p: E3)"; rc=`expr $rc + 1`; fi

if test "$SERVER_1" != "" -a "$SERVER_1" != $hn
   then ${RSH} $SERVER_1 ls -l $dir
        if checkremotefile $SERVER_1 $file
           then echo "- NoAuth file is still there ($p: E6)"
                rc=`expr $rc + 1`
           fi
   else ls -l $dir
        if test -f $file
           then echo "- NoAuth file is still there ($p: E4)"
                rc=`expr $rc + 1`
           fi
   fi

if test "$SERVER_1" != "" -a "$SERVER_1" != $hn
   then ${RSH} $SERVER_1 rm -f $file
   else rm -f $file
   fi


###############################################################################

sync; sync; sleep 2

echo ""; echo "Done at `date`."; echo ""
if test $rc -eq 0
   then echo "$p PASSED"
   else echo "$p FAILED ($rc errors)"
   fi
exit $rc

###############################################################################

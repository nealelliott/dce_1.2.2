# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# 
# HISTORY
# $Log: many_trans.test,v $
# Revision 1.1.12.1  1996/10/02  17:18:04  damon
# 	New DFS from Transarc
# 	[1996/10/01  18:57:39  damon]
#
# Revision 1.1.6.1  1994/06/09  13:58:10  annie
# 	fixed copyright in src/file
# 	[1994/06/08  21:33:23  annie]
# 
# Revision 1.1.4.3  1993/01/18  22:05:49  cjd
# 	embedded copyright notice
# 	[1993/01/18  21:45:19  cjd]
# 
# Revision 1.1.4.2  1992/11/09  21:33:41  jaffe
# 	Transarc delta: ota-ot3804-new-block-security 1.1
# 	  Selected comments:
# 	    This is a super-delta comprising changes necessary to accomplish both
# 	    deltas which are a very tough import and are really intertwined anyway.
# 	    Transarc delta: mason-ot5508-wrong-comparison-in-WaitForTranFree 1.4
# 	    Selected comments:
# 	    WARNING: THIS DELTA HAS HAD ITS SCOPTE MASSIVELY EXTENDED
# 	    See revision 1.2 below.
# 	    An earlier change to the transaction activity test in elbt_TranForce
# 	    resulted in an incorrect test.
# 	    This resulted in aimIII test looping in the kernel trying to commit the
# 	    transaction in a vnode being deleted.
# 	    A long chain of complications associated with the fix for this problem
# 	    gradually lead to more and more expansive repairs.  At some point the
# 	    effort devolved into a new complete rewrite of most of the functions in
# 	    the tran module and a similar fraction of the tran related functions in
# 	    the log module.  As a side-effect other OT bugs were addressed.  Here is
# 	    a list of the major changes made.
# 	    o This delta effective completes implementation of new block security.
# 	    This affects OT 3804 and OT 1020.
# 	    o Handling of ended transactions is completely revised.  Rules of
# 	    responsibility for trans in various states between tran and log
# 	    modules are clarified.  This addresses the concerns raised in OT 5249.
# 	    o The locking strategy in the tran module was extensively revised.  The
# 	    logbuf-locking document was updated.
# 	    o Changes in waiting and sleeping, especially when starting
# 	    transactions, follow from the above two changes.  Deadlocks removed
# 	    from GCTran.
# 	    o Equivalence Class handling improved, eliminating at least one latent
# 	    bug in when a pending transaction can be discarded.  Locking changes
# 	    should also improve concurrency.
# 	    o Significant enhancement of the test scripts in the stress level they
# 	    impose on the transaction system.
# 	    o Reimplemented FsyncForce to use unified buffer/event set handling.
# 	    This fixes OT 5316.
# 	    o The Quiesce operation is improved, internally to serialize, commit
# 	    metadata and commit userdata.  It still needs an interface change when
# 	    volops requirements are ready.
# 	    o Now tran and log module track three reservation sizes for
# 	    transactions: full size, undo-zero size, and end size.  This only
# 	    partially addresses the concerns of OT 4548.
# 	    o Macros for comparing log positions where improved and bullet proofed.
# 	    They now replace many suspect by-hand comparisons throughout the code.
# 	    o New test repeatedly shuts down a device when other devices with the
# 	    same block size(s) are still active.
# 	    o Added passno test to expose OT 5527.  Added to all_tests.
# 	    o Improved comments throughout.
# 	    o Added growaggr script to all_tests.  Affects OT 3216, TR 2570.
# 	    o Added vm1.test to all_tests.
# 	    o Move nbs_tests into all_tests.
# 	    o Upgraded copyrights.
# 	    Stress level increased about three fold
# 	    o Log sizes increased to 10 thread limit.
# 	    o Three filesets created in each aggregate instead of one.  Each
# 	    fileset still has four threads running mant_trans.int.test.
# 	    After upgrading to epi 1.22 (dfs 1.53) the shutdown script stopped working.
# 	    A few more problems noticed after upgrading to epi-1.22.
# 	    A real bug in RecycleLogBufs was discovered, which resulted in reporting
# 	    a more recent value for activeLogBlock than was correct if the members
# 	    of the inTransit list were within 5 blocks of the end of the log.
# 	    A real bug in recover was discovered, which resulted in discarding the
# 	    last page of the log on the first pass (after log create).
# 	[1992/11/09  17:51:50  jaffe]
# 
# Revision 1.1.2.2  1992/05/05  19:57:47  jdp
# 	delta ota-rememberthreadtrans-2283 1.2
# 	[1992/05/04  15:33:15  jdp]
# 
# $EndLog$
# /* Copyright (C) 1992 Transarc Corporation - All rights reserved */
# $Header: /u0/rcs_trees/dce/rcs/file/episode/anode/many_trans.test,v 1.1.12.1 1996/10/02 17:18:04 damon Exp $

many_trans 1
modify_afsdb anode on 31		# turn on code block counting

open_device 0 8192 1024 1028
create_aggregate 120			# min is 12 blks
create_vol a 0,,0 1200
create_vol a1 0,,0 1200
create_vol a2 0,,0 1200

open_device 1 4096 1024 1028
create_aggregate 210			# min is 21
create_vol b 0,,0 1200
create_vol b1 0,,0 1200
create_vol b2 0,,0 1200

open_device 2 2048 1024 1028
create_aggregate 410			# min is 41
create_vol c 0,,0 1200
create_vol c1 0,,0 1200
create_vol c2 0,,0 1200

open_device 3 1024 1024 2000
create_aggregate 820			# min is 82
create_vol d 0,,0 1200
create_vol d1 0,,0 1200
create_vol d2 0,,0 1200

open_file a.root
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test

open_file a1.root
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test

open_file a2.root
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test

open_file b.root
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test

open_file b1.root
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test

open_file b2.root
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test

open_file c.root
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test

open_file c1.root
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test

open_file c2.root
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test

open_file d.root
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test

open_file d1.root
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test

open_file d2.root
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test
fork many_trans.int.test

wait
check_device
coverage
end

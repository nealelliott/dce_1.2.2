# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# 
# HISTORY
# $Log: multi-block-frag.test,v $
# Revision 1.1.12.1  1996/10/02  17:18:20  damon
# 	Newest DFS from Transarc
# 	[1996/10/01  18:28:23  damon]
#
# Revision 1.1.6.1  1994/06/09  13:58:26  annie
# 	fixed copyright in src/file
# 	[1994/06/08  21:33:38  annie]
# 
# Revision 1.1.4.3  1993/01/18  22:06:25  cjd
# 	embedded copyright notice
# 	[1993/01/18  21:46:15  cjd]
# 
# Revision 1.1.4.2  1992/09/15  17:32:44  jaffe
# 	Transarc delta: mason-ot2930-logbuf-parts-of-nbs 1.14
# 	  Selected comments:
# 	    This is the logbuf portion of new block security (making sure someone
# 	    else's data does not appear in your file across a system crash.)  For
# 	    details, see the OT report, the postings to transarc.afs.episode, and
# 	    the white paper on this subject.  Not done yet.  SNAPSHOT ONLY.
# 	    Just wanted to fix a small nit in test_res.
# 	    More work on NBS.  This is only a snapshot.
# 	    Another snapshot; this time we make the interfaces between anode & buffer
# 	    uniform (each was using a different convention).  Clean up names at the same
# 	    time.  SNAPSHOT ONLY.
# 	    Another snapshot.  NBS now works in the forward direction for basic.test!
# 	    This part of this delta was removed and added to delta
# 	    mason-ot5070-gc-tran-in-logfull-avoidance
# 	    Snapshot of code working in the forward path in mp.test.
# 	    Removed the contents of revision 1.6
# 	    Checkpoint.  No work done here, just made sure that the other new
# 	    delta works OK (mason-ot5070-gc-tran-in-logfull-avoidance).
# 	    Make all_tests work again.
# 	    Finish making all the tests run now.
# 	    Log size increase.
# 	    Cleanup compilation on OSF/1.
# 	    Continue work to get new block security going.
# 	    Add a script for the nbs tests.
# 	[1992/09/14  19:40:49  jaffe]
# 
# Revision 1.1.2.3  1992/05/13  21:56:33  jdp
# 	Transarc delta: ota-broken-block-frag-combos-1888 1.1
# 	  Files modified:
# 	    anode: aggregate.c, anode.c, fixed_anode.c
# 	    anode: multi-block-frag.int.test, multi-block-frag.test
# 	    anode: test_anode.c
# 	  Selected comments:
# 	    There are serveral known or suspected problem with various block/frag
# 	    size combinations.  The primary probe of these problems has been the
# 	    multi-block-frag test script.  I take this bug to mean that the script
# 	    does not work.
# 	    This delta fixes several bugs and enhances the multi-block-frag test.
# 	    The test now runs to completion.
# 	    Un-comment-out all the previously non-working size combinations.
# 	[1992/05/13  20:12:57  jdp]
# 
# Revision 1.1.2.2  1992/05/06  14:11:52  jdp
# 	Initial revision.
# 	[1992/05/05  23:38:32  jdp]
# 
# $EndLog$

# /* Copyright (C) 1991, 1992 Transarc Corporation - All rights reserved */
# $Header: /u0/rcs_trees/dce/rcs/file/episode/anode/multi-block-frag.test,v 1.1.12.1 1996/10/02 17:18:20 damon Exp $

multi-block-frag 1
modify_afsdb anode on 31		# turn on code block counting
modify_afsdb anode on 29		# turn on preempts

open_device 0 1024 1024 400		# 1K/1K
create_aggregate
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 2048 1024 400		# 2K/1K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 4096 1024 200		# 4K/1K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 8192 1024 200		# 8K/1K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 16384 1024 200		# 16K/1K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 32768 1024 200		# 32K/1K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 65536 1024 200		# 64K/1K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

coverage

open_device 0 2048 2048 400		# 2K/2K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 4096 2048 200		# 4K/2K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 8192 2048 200		# 8K/2K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 16384 2048 200		# 16K/2K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 32768 2048 200		# 32K/2K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 65536 2048 200		# 64K/2K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 4096 4096 200		# 4K/4K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 8192 4096 200		# 8K/4K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 16384 4096 200		# 16K/4K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 32768 4096 200		# 32K/4K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 65536 4096 200		# 64K/4K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 8192 8192 200		# 8K/8K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 16384 8192 200		# 16K/8K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 32768 8192 200		# 32K/8K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 65536 8192 200		# 64K/8K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 16384 16384 200		# 16K/16K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 32768 16384 200		# 32K/16K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 65536 16384 200		# 64K/16K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 32768 32768 200		# 32K/32K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 65536 32768 200		# 64K/32K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

open_device 0 65536 65536 200		# 64K/64K
create_aggregate 60
fork multi-block-frag.int.test
wait
check_device
open_device -1

coverage
end

*
* @OSF_COPYRIGHT@
*
* (C) Copyright 1993 Transarc Corporation.
* All Rights Reserved.
*
*  movingLocks.config.itl --
*	Configuration parameters specific to the movingLocks.itl script.
* 
* HISTORY
* $Log:$
*
* $EndLog$
******************************************************************************

*
!* Include common configuration.
*
*  Note: variables used in this file that are not defined here are defined
*        in the common configuration file.
*
include common_dist.config.itl
include moving_common.config.itl

*
*  createFileset - if non-zero the fileset, filesetName, will be created
*		   on the aggregate.
*  filesetName - name of fileset where all the action takes place.
*  dfsMountPoint - where the fileset is to be mounted in DFS.
*
set createFileset int 1
set filesetName string "lock_test_fileset"
set dfsMountPoint string "/:/lockTestMount"

*
*  fileSize - the size of the files in bytes.  This value MUST be
*             coordinated with the lock ranges defined below.
*  baseFileName - the base name for the test files.
*  fileData - data used to create the test files.  It's length MUST evenly
*             divide into $fileSize.
*
set fileSize int ($chunkSize * 3)
set baseFileName string "lockMoveTest"
set fileData string "0123456789ABCDEFGHIJKLMNOPQRSTUV0123456789ABCDEFGHIJKLMNOPQRSTUV"

*
*  numLockRanges - number of lock ranges that locks will be aquired on in
*		   each file.  So if this is 4, then 4 locks will be held
*		   on the file.
*  lockRangeStart[] - is an array of starting file offsets for the bytes
*		      that will be locked. (It has numLockRanges entries.)
*  lockRangeEnd[] - the companion array to the lockRangeStart[] array.  It 
*		    holds the end offsets of the lock ranges.
*
*  NOTE:  Lock ranges MUST NOT overlap.
*
set numLockRanges int 3
set lockRangeStart[0] int 10
set lockRangeEnd[0] int 1025
set lockRangeStart[1] int ($chunkSize - 2)
set lockRangeEnd[1] int ($chunkSize + 1111)
set lockRangeStart[2] int ($fileSize - 777)
set lockRangeEnd[2] int ($fileSize - 1)

*
* @OSF_COPYRIGHT@
* COPYRIGHT NOTICE
* Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
* ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
* src directory for the full copyright text.
*
* HISTORY
* $Log: defaults.itl,v $
* Revision 1.1.414.1  1994/02/04  20:41:20  devsrc
* 	Merged from 1.0.3a to 1.1
* 	[1994/02/04  15:22:47  devsrc]
*
* Revision 1.1.412.1  1993/12/07  17:42:20  jaffe
* 	1.0.3a update from Transarc
* 	[1993/12/03  18:57:43  jaffe]
* 
* Revision 1.1.2.3  1993/01/11  18:27:35  htf
* 	Embedded copyright notice
* 	[1993/01/11  17:02:21  htf]
* 
* Revision 1.1.2.2  1992/10/28  16:32:35  jaffe
* 	Transarc delta: jdp-itl-add-fset-driver 1.2
* 	  Selected comments:
* 	    Add the code for fset_test, the fileset (ftutil) test driver.
* 	    This delta adds "fset" to the list of build directories in the test tree
* 	    and adds all of the test scripts.
* 	    Set default variables from environment.
* 	[1992/10/27  18:53:31  jaffe]
* 
* $EndLog$
*

* The following three resources must exist before testing begins
getenv FSET_DEVICE
if ($FSET_DEVICE == "") {
	set device "/dev/epi0"
} else {
	set device $FSET_DEVICE
}

getenv FSET_MOUNT_POINT_0
if ($FSET_MOUNT_POINT_0 == "") {
	set mount_point[0] "/mnt"
} else {
	set mount_point[0] $FSET_MOUNT_POINT_0
}

getenv FSET_MOUNT_POINT_1
if ($FSET_MOUNT_POINT_1 == "") {
	set mount_point[1] "/mnt2"
} else {
	set mount_point[1] $FSET_MOUNT_POINT_1
}


getenv FSET_AGGR_ID
if ($FSET_AGGR_ID == "") {
	set aggr_id 1000
} else {
	set aggr_id $FSET_AGGR_ID
}
echo aggregate id $aggr_id

getenv AGGR_NAME
if ($AGGR_NAME == ""){
	set aggr_name   $device
} else {
	set aggr_name   $AGGR_NAME
}
echo aggregate name $aggr_name

getenv FSET_BLOCK_SIZE
if ($FSET_BLOCK_SIZE == "") {
	set block_size 8192
} else {
	set block_size $FSET_BLOCK_SIZE
}

getenv FSET_FRAG_SIZE
if ($FSET_FRAG_SIZE == "") {
	set frag_size 1024
} else {
	set frag_size $FSET_FRAG_SIZE
}

set aggr_type	"lfs"

set fset_id   ($aggr_id + 1)
set fset_name ("fset" + $fset_id)

set file_name		"zappa"
set path_name[0]	($mount_point[0] + "/" + $file_name)
set path_name[1]	($mount_point[1] + "/" + $file_name)

set setup_aggr proc END
!*** Setup the aggregate
	initAggr @device @block_size @frag_size
	verifyAggr @device
	attachAggr @device @aggr_type @aggr_name @aggr_id
END

set setup_fset proc END
!*** Create and mount a fileset
	createFset @aggr_id @fset_id @fset_name
	mountFset @fset_id @mount_point[0]
END

set shutdown_fset proc END
!*** Destroy the fileset
	destroyFset @aggr_id @fset_id
END

set shutdown_aggr proc END
!*** Shutdown the aggregate
	detachAggr @aggr_id
	verifyAggr @device
END


# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
#
# HISTORY
# $Log: shutdown.test,v $
# Revision 1.1.12.1  1996/10/02  17:19:06  damon
# 	Newest DFS from Transarc
# 	[1996/10/01  18:28:52  damon]
#
# Revision 1.1.6.1  1994/06/09  13:58:53  annie
# 	fixed copyright in src/file
# 	[1994/06/08  21:34:07  annie]
# 
# Revision 1.1.4.2  1993/05/11  13:43:02  jaffe
# 	Transarc delta: ota-db3510-fix-all_tests-more 1.1
# 	  Selected comments:
# 	    Improve /tmp disk space management in all_tests.  Increase requirement
# 	    to 15.5Meg.
# 	    Fix problem with shutdown.test running out of space on dev 0 aggregate.
# 	    Grow dev 0 aggr.
# 	[1993/05/10  17:24:58  jaffe]
# 
# Revision 1.1.2.6  1993/04/07  21:59:16  shl
# 	Submitting 7570
# 	[1993/04/07  21:55:39  shl]
# 
# Revision 1.1.2.5  1993/03/31  17:48:59  jaffe
# 	Transarc delta: ota-ot7570-measure-mp.int.test-quota-usage
# 	  Selected comments:
# 	    Increase quota on volume bar.
# 	[1993/03/31  16:29:08  jaffe]
# 
# Revision 1.1.2.4  1993/03/09  18:30:08  jaffe
# 	Transarc delta: ota-ot7259-osf1-all_tests 1.1
# 	  Selected comments:
# 	    A few of problems prevented "all_tests" from running to completion on
# 	    OSF/1.  The "df" command's format changed in version 1.1.1 and this
# 	    confused the all_tests's attempt to determine in there was sufficient
# 	    space in "/tmp".  A call to scanf used "%d" instead of "%u".  And the
# 	    quota of a volume used in shutdown.test was a little too small.
# 	    Bump the quota on volume "bar" from 1500 to 1600.
# 	[1993/03/09  16:57:25  jaffe]
# 
# Revision 1.1.2.3  1993/01/18  22:07:35  cjd
# 	embedded copyright notice
# 	[1993/01/18  21:47:59  cjd]
# 
# Revision 1.1.2.2  1992/11/09  21:35:09  jaffe
# 	Transarc delta: ota-ot3804-new-block-security 1.1
# 	  Selected comments:
# 	    This is a super-delta comprising changes necessary to accomplish both
# 	    deltas which are a very tough import and are really intertwined anyway.
# 	    Transarc delta: mason-ot5508-wrong-comparison-in-WaitForTranFree 1.4
# 	    Selected comments:
# 	    WARNING: THIS DELTA HAS HAD ITS SCOPTE MASSIVELY EXTENDED
# 	    See revision 1.2 below.
# 	    An earlier change to the transaction activity test in elbt_TranForce
# 	    resulted in an incorrect test.
# 	    This resulted in aimIII test looping in the kernel trying to commit the
# 	    transaction in a vnode being deleted.
# 	    A long chain of complications associated with the fix for this problem
# 	    gradually lead to more and more expansive repairs.  At some point the
# 	    effort devolved into a new complete rewrite of most of the functions in
# 	    the tran module and a similar fraction of the tran related functions in
# 	    the log module.  As a side-effect other OT bugs were addressed.  Here is
# 	    a list of the major changes made.
# 	    o This delta effective completes implementation of new block security.
# 	    This affects OT 3804 and OT 1020.
# 	    o Handling of ended transactions is completely revised.  Rules of
# 	    responsibility for trans in various states between tran and log
# 	    modules are clarified.  This addresses the concerns raised in OT 5249.
# 	    o The locking strategy in the tran module was extensively revised.  The
# 	    logbuf-locking document was updated.
# 	    o Changes in waiting and sleeping, especially when starting
# 	    transactions, follow from the above two changes.  Deadlocks removed
# 	    from GCTran.
# 	    o Equivalence Class handling improved, eliminating at least one latent
# 	    bug in when a pending transaction can be discarded.  Locking changes
# 	    should also improve concurrency.
# 	    o Significant enhancement of the test scripts in the stress level they
# 	    impose on the transaction system.
# 	    o Reimplemented FsyncForce to use unified buffer/event set handling.
# 	    This fixes OT 5316.
# 	    o The Quiesce operation is improved, internally to serialize, commit
# 	    metadata and commit userdata.  It still needs an interface change when
# 	    volops requirements are ready.
# 	    o Now tran and log module track three reservation sizes for
# 	    transactions: full size, undo-zero size, and end size.  This only
# 	    partially addresses the concerns of OT 4548.
# 	    o Macros for comparing log positions where improved and bullet proofed.
# 	    They now replace many suspect by-hand comparisons throughout the code.
# 	    o New test repeatedly shuts down a device when other devices with the
# 	    same block size(s) are still active.
# 	    o Added passno test to expose OT 5527.  Added to all_tests.
# 	    o Improved comments throughout.
# 	    o Added growaggr script to all_tests.  Affects OT 3216, TR 2570.
# 	    o Added vm1.test to all_tests.
# 	    o Move nbs_tests into all_tests.
# 	    o Upgraded copyrights.
# 	    Test to run concurrent buffer system shutdowns with running code.  It
# 	    runs 7 threads doing mp.int.test which touches a 1K and a 4K
# 	    aggregate.  Two threads run shutdown.int.test in a separate 1K and 4K
# 	    aggregate.
# 	    After upgrading to epi 1.22 (dfs 1.53) the shutdown script stopped working.
# 	    Increase the 4K aggregate size.
# 	    A few more problems noticed after upgrading to epi-1.22.
# 	    A real bug in RecycleLogBufs was discovered, which resulted in reporting
# 	    a more recent value for activeLogBlock than was correct if the members
# 	    of the inTransit list were within 5 blocks of the end of the log.
# 	    A real bug in recover was discovered, which resulted in discarding the
# 	    last page of the log on the first pass (after log create).
# 	[1992/11/09  18:14:26  jaffe]
# 
# $EndLog$

# /* Copyright (C) 1993, 1992 Transarc Corporation - All rights reserved */
# $Header: /u0/rcs_trees/dce/rcs/file/episode/anode/shutdown.test,v 1.1.12.1 1996/10/02 17:19:06 damon Exp $

shutdown 1
modify_afsdb anode on 31		# turn on code block counting
modify_afsdb anode on 29		# turn on preempts

# Setup for mp.int.tet

open_device 0 1024 1024 600		# 7*50 + log + fudge
create_aggregate 200
open_device 1 4096 1024 1000
create_aggregate 100

create_vol bar 0,,0 1800		# 7*251=1757
create_file a
write_file 0 10000 314159
read_file 0 10000 314159
check_device

fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test

# While these are running create a second 4K aggr which we can shutdown
# over and over to stress the buffer pool.

open_device 2 4096 1024 200		# create a second 4K aggr to shutdown
fork shutdown.int.test

# Try a 1K file system too

open_device 3 1024 1024 200
fork shutdown.int.test

wait
check_device
coverage
end

/* Copyright (C) 1992, 1994 Transarc Corporation - All rights reserved. */

Useful environment variables:

  SALVAGE -- salvager to be tested; default is just "salvage".
  SLV_TEST_OUTPUT -- see discussion of regression_test, below.
  SLV_TEST_AGGRS -- see discussion of all_salvage and misc_salvage, below.
  SLV_TEST_STAGE -- see discussion of regression_test, below.
  SLV_TEST_SPL_STAGE -- see discussion of regression_test, below.
  epiobj -- see discussion of regression_test, below.

Contents of test/file/salvage:

  AuthCheckTest
  AuthCheckTest.noroot

    The salvager command line tests.  These test the salvager's ability to
    cope with different combinations of command line options, given different
    circumstances (e.g. running as root vs. non-root, aggregate owned by
    root vs. non-root).

  salvage.checklist
  salvage.testplan

    Planning documents for test development.  These may have been written
    in early 1993.  Parts of them may be obsolete.

  regression_test (csh)

    Highest-level script for running the salvager stability tests.
    At present it runs the following tests:
    - scavenger simple_test on the epi-blake aggregate and the sfile
      aggregate;
    - scavenger salt test on the epi-blake aggregate;
    - misc_salvage (see below);
    - all_salvage (see below);
    - ravager on the epi-blake aggregate and the sfile aggregate.

    Output from the scavenger simple_test and salt test is directed to
    .O files in ${SLV_TEST_OUTPUT}, where it can be compared with an
    earlier run using cmp_salvage (see below).  The salt test, in addition,
    puts a log in salt_log.<process ID> in the current working directory.
    More .O files are created by misc_salvage and all_salvage; a higher-level
    log of these two tests is directed to ${SLV_TEST_OUTPUT}/output.

    The ravager, in addition to generating the usual .O files, is also supposed
    to generate logs in .out files in the current working directory.  I have
    not seen these, however.

    The "epi-blake" aggregate is generated by the scavenger script mkaggr.
    The "sfile" aggregate was obtained from a salvager testing group outside
    Transarc.

    Any large temporary files, such as uncompressed aggregates, created by
    misc_salvage, all_salvage, or the ravager, are created in the directory
    ${SLV_TEST_STAGE}.  The sfile aggregate is manipulated in the same
    directory.  The epi-blake aggregate is manipulated in the directory
    ${SLV_TEST_SPL_STAGE}.  (The "SPL" stands for "special".)  Large temporary
    files created by the scavenger simple_test and salt test are created in
    the latter directory.  Probably there would be no objection to combining
    these two staging directories, but for the time being I am leaving them
    separate.

    regression_test expects that the environment variable epiobj refers to
    a directory that is (or looks like) the object directory of a build of
    Episode.  Specifically:
    - ${epiobj}/ravage must contain scp and all the ravager files;
    - ${epiobj}/scavenge must contain all the scavenger files;
    - ${epiobj}/salvage must contain a salvager.

    The default value for SLV_TEST_OUTPUT is:
      /afs/transarc.com/usr/ota/de/salvage-data/salvage-output

    The default value for SLV_TEST_STAGE is:
      /tmp/salvage-data
    The default value for SLV_TEST_SPL_STAGE is:
      /tmp
    These may be inappropriate on Solaris/SunOS systems, because /tmp does not
    support sparse files.  That is, uncompressed aggregates written to /tmp
    are not sparse; space for all the zeroed data must be allocated.

  cmp_salvage (perl)

    This program is used to compare output of two different salvager
    runs on the same aggregate and report significant differences.  It
    canonicalizes insignificant differences (such as the number of
    milliseconds spent in recovery) to minimize false reports.  The
    command line arguments are the names of .O files, each of which 
    is compared to the compressed version of the file in the same directory.
    For example, ${SLV_TEST_OUTPUT}/clones.O would be compared with
    ${SLV_TEST_OUTPUT}/clones.O.Z, after uncompressing the latter.  After a
    successful comparison the latest output can be compressed for a
    future regression test.

all_salvage (perl) 

    This assumes that all files in ${SLV_TEST_AGGRS} that end in
    ".Z" are compressed aggregates.  Each in turn is decompressed, piped
    through metamucil with the indicated block and fragment size and sparse
    copied into a file in ${SLV_TEST_STAGE}.  Then it is salvaged, with
    -recover or not as appropriate.  The appropriateness of using recovery
    is determined from the name of the aggregate; the naming convention is
    discussed below.  Salvager output is saved in a file with a similar name
    in ${SLV_TEST_OUTPUT}.  These files are named by replacing the ".Z"
    suffix with ".O".  If a resalvage is indicated this is done with the
    output appended to the same file.

    The default value for SLV_TEST_AGGRS is:
      /afs/transarc.com/usr/ota/de/salvage-data

  misc_salvage (sh)

    At present, this does two salvager runs (with different command line
    options) on the aggregate "epi0.kdeadlock.vm.0604".

Most of the aggregates in /afs/transarc.com/usr/ota/de/salvage-data were
used to uncover and debug some problem with the salvager.  As such they
make a reasonable collection of tests to check for regressions.  In
addition this directory contains several prototypical aggregates which
are used as input to the ravaging process.  This process iterates
through an aggregate bashing each meta-data containing section to a
bogus value, then attempts to salvage the result.

NAMING

All of the aggregates here are compressed and most have been run through
metamucil.  These are all named with the .Z suffix.

Some aggregates exhibit interesting results only if recovery is not run
before salvaging.  To encode this information the penultimate
component of the name can be ".no_rcvr".  If it is the all_salvage
script (described above) will not specify the -recover option when
invoking the salvage command.  Using symbolic links an aggregate can be
tested both with and without recovery.

For metamucil and for the ravager the block/frag size of the aggregate
are important.  To preserve this information the component of the name
immediately preceding the ".no_rcvr", if any, specified the block and
fragment size.  The size is specified in "K" and the fragment optionally
follows the block size separated by an hyphen.  The default is ".8K-1K".

Other parts of the name indicate the person providing the aggregate, the
machine and date on which the aggregate was produced, and a word or two
describing the symptoms.

The syntax for names is:
  <machine>.<aggr>.<date>.<descr>[.<b>K[-<f>K]][.no_rcvr>][.Z]

If the description contains multiple words they should be separated by
hyphens or underscores (e.g. ".export-panic").  The date should be in
the format yymmdd (e.g. ".920131").  The sizes are given as "b" Kbyte
blocks and "f" Kbyte fragments (e.g. ".4K" or ".16K-2K").

GENERAL ADVICE ABOUT RUNNING THE SALVAGER TESTS

- Your PATH must include the directory in which all these scripts are.

- You must define the environment variable epiobj (see above).  In general,
  you will require an object tree from an Episode build, or a facsimile
  thereof, as described above.

- You may need to define the other environment variables described above,
  if the defaults are not satisfactory.

- It is NOT necessary to have an LFS kernel extension running, nor even to
  have DFS installed.  However, the error message catalogues used by the
  salvager must be accessible, either by being installed in the usual
  location or via NLSPATH.  On Solaris, the shareable library for libdce
  must be accessible, either by being installed in the usual location or
  via LD_LIBRARY_PATH.

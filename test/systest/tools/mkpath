#!/bin/sh
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
#
# HISTORY
# $Log: mkpath,v $
# Revision 1.1.9.2  1996/03/11  02:49:27  marty
# 	Update OSF copyright years
# 	[1996/03/10  20:10:05  marty]
#
# Revision 1.1.9.1  1995/12/11  22:50:57  root
# 	Submit OSF/DCE 1.2.1
# 	[1995/12/11  22:23:38  root]
# 
# Revision 1.1.3.2  1993/02/05  19:34:04  zeliff
# 	Embedding copyrights
# 	[1993/02/05  19:30:00  zeliff]
# 
# $EndLog$
#
#
# FILE_NAME:
#
# COMPONENT_NAME: mkpath
#
# FUNCTIONS: usage
#
# ORIGINS: 27
#
#
# (C) COPYRIGHT International Business Machines Corp. 1991
# All Rights Reserved
#
#
# USAGE:
#	see usage() below.
#
# DESCRIPTION:
#	Makes pathnames
#
# HISTORY:
# 03/12/91	Wayne Mock	Initial design/code
# 07/30/91	Wayne Mock	Now works correctly with partial pathnames.
#

PGM=`basename $0`

#******************************************************************************
# usage()
#******************************************************************************
usage()
{ 	

cat <<-EOF
usage:  $PGM [-s host_to_run_on] <pathname> <permissions>
 -s host_to_run_on  Specifies the machine on which the mkpath
                    command will be executed.  Also defines the 
                    machine on which the pathname is created.  
                    Default is the local host.
 pathname	    A partial or full pathname to create.  If pathname
                    is a partial pathname, the directory structure is
                    created in the current working directory.
 permissons	    The permissons any newly created directories
                    should acquire.  Existing directories in the path
                    do not change permissions, unless it is the last
                    directory of the pathname.
EOF
	exit 1; 
}

#******************************************************************************
# main 
#******************************************************************************

set -- `getopt s: $*`
test $? -ne 0 && usage

while :
do
	case "$1" in
	-s)
		HOST_TO_RUN_ON=$2
		shift
		;;
	--)
		shift
		break 2
	esac
	shift
done

test $# -ne 2 && usage

if [ ! "`echo $1 | cut -f1 -d/`" ]; then
	fullpath=$1		# full pathname given
else
	fullpath=`pwd`/$1	# relative pathname given
fi
mod=$2

#
# if the -s flag was specified, reconstruct the command line without the
# -s option and run mkpath on the remote machine.
#
if [ "$HOST_TO_RUN_ON" ]; then
	rshsp $HOST_TO_RUN_ON $PGM $fullpath $mod
	exit $?
fi

unset path
set `echo $fullpath | sed 's:/: :g'`
while [ $# -ne 0 ]
do
	path="$path/$1"
	test -d $path || { mkdir $path; chmod $mod $path; }
	cd $path
	shift
done
chmod $mod $fullpath

# 
# return the return code of the command to the calling process.
#
exit $?

#******************************************************************************
# end of main
#******************************************************************************

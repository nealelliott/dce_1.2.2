/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: icharexp.idl,v $
 * Revision 1.1.4.2  1996/03/11  02:14:26  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  19:53:33  marty]
 *
 * Revision 1.1.4.1  1995/12/11  20:07:48  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:32:24  root]
 * 
 * Revision 1.1.2.2  1993/08/11  16:26:58  ganni
 * 	tests for new IDL functionality
 * 	[1993/08/11  16:14:57  ganni]
 * 
 * $EndLog$
 */
/*
*/
[
uuid(1c71e74d-5c1e-11cc-8419-08002b3786fb),
version(0.0)
]
interface icharexp
{
    /* Tests for when the wire rep of [cs_char] requires more bytes than
        the local rep */

    const long ASIZE = 26;
    const long CSIZE = 2 * ASIZE;
    const long VSIZE = CSIZE + 2;

    typedef byte elvish;

    void op0 ( [in] handle_t h,
               [in] unsigned long s,
               [in] unsigned long dr,
               [out] unsigned long *p_r,
               [in, out, size_is(sz)] elvish e0[],
               [in] long sz
     );

    void op1 ( [in] handle_t h,
               [in] unsigned long s,
               [in] unsigned long dr,
               [out] unsigned long *p_r,
               [in, out, size_is(sz), length_is(*p_ln)] elvish e1[],
               [in] long sz,
               [in, out] short *p_ln
    );

    void op2 ( [in] handle_t h,
               [in] unsigned long s,
               [in] unsigned long dr,
               [out] unsigned long *p_r,
               [in, out, length_is(*p_ln)] elvish e2[VSIZE],
               [in, out] short *p_ln
    );

    typedef struct {
        unsigned long sz;
        [size_is(sz)] elvish e[];
    } conf_t;

    void op3 ( [in] handle_t h,
               [in] unsigned long s,
               [in] unsigned long dr,
               [out] unsigned long *p_r,
               [in, out] conf_t *p_c
    );

    typedef struct {
        unsigned long sz;
        unsigned short ln;
        [size_is(sz)] elvish e[];
    } open_t;

    void op4 ( [in] handle_t h,
               [in] unsigned long s,
               [in] unsigned long dr,
               [out] unsigned long *p_r,
               [in, out] open_t *p_o
    );

    typedef struct {
        [length_is(ln)] elvish e[VSIZE];
        unsigned short ln;
    } varying_t;

    void op5 ( [in] handle_t h,
               [in] unsigned long s,
               [in] unsigned long dr,
               [out] unsigned long *p_r,
               [in, out] varying_t *p_v
    );

}

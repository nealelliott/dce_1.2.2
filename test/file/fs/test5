#!/bin/sh
#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
#
# HISTORY
# $Log: test5,v $
# Revision 1.1.10.1  1996/10/17  18:20:21  damon
# 	Submitting on behalf of Transarc
# 	[1996/10/17  16:50:48  damon]
#
# Revision 1.1.4.4  1993/01/11  18:27:02  htf
# 	Embedded copyright notice
# 	[1993/01/11  17:00:58  htf]
# 
# Revision 1.1.4.3  1992/10/28  16:22:33  jaffe
# 	Transarc delta: fred-ot5472-use-testhome-variable 1.1
# 	  Selected comments:
# 	    Fixed the fs and low tests to correctly use TESTTOP.  We were setting a
# 	    variable, testhome, as the location for the test scripts and executables,
# 	    but we did not use it to execute C programs.
# 	    (I checked out some scripts which did not need this change.)
# 	    No changes made.
# 	Transarc delta: jess-add-dumpkernel-in-fs-tests 1.3
# 	  Selected comments:
# 	    The icldump command and debug option for the tests have been added in the
# 	    fs test scripts. You can run fs/tests with -debug to dump kernel in case
# 	    of error. The delta also adds the icl_DumpKernel function in the C programm.
# 	    See above.
# 	    Put the debug option in test1.
# 	    When the debug is set the dumpfile is always created eventhough
# 	    there is no error.
# 	Transarc delta: jess-fs-path-for-icldump 1.1
# 	  Selected comments:
# 	    This delta adds the path for icldump command. The command has been
# 	    installed at "util" dir in test tree by Fred's delta.
# 	    See above.
# 	Transarc delta: jess-ot5320-fix-fs-low-testhome 1.1
# 	  Selected comments:
# 	    The fs and low test shell scripts have the following if statement
# 	    if [ "$TESTTOP" = "`pwd`" ]
# 	    then
# 	    UTIL_DIR=../util
# 	    testhome=$TESTTOP
# 	    else
# 	    UTIL_DIR=$TESTTOP/util
# 	    testhome=$TESTTOP/$testSuiteType
# 	    fi
# 	    The problem is that variable testSuiteType is not defined at this time.
# 	    See above.
# 	[1992/10/27  18:27:20  jaffe]
# 
# Revision 1.1.4.2  1992/08/28  18:12:55  jaffe
# 	Transarc delta: rajesh-clean-fs-tests 1.6
# 	  Selected comments:
# 	    To remove make, clean options from fs tests
# 	    Remove make and clean options
# 	    Make the scripts modular, structured.
# 	    The variable names are changed to follow coding standards.
# 	    See above.
# 	    Apply modification mentioned in revision 1.2 to 2 missed test file
# 	    err1 and err2.
# 	    Some bug fixes, and revision of tests err1 and err2. Introduction of
# 	    a common functions ProcessResult to analyse the result.
# 	    See above.
# 	    Further changes to some utility functions.
# 	    Added error test err2 to the Makefile
# 	[1992/08/28  12:20:19  jaffe]
# 
# Revision 1.1.2.3  1992/05/29  22:59:02  mason
# 	Transarc delta: fred-3754-change-script-name 1.1
# 	  Selected comments:
# 	    To clean up a number of defects with the tests.  In addition to defect
# 	    3754, the changes also fix defects 3750 and 3748.
# 	    Fixed setting of TESTTOP variable.
# 	Transarc delta: fred-3754-final-fix 1.1
# 	  Selected comments:
# 	    Remove last call to fsGenerateFile.
# 	    Replace call to fsGenerateFile with createFileCmd.
# 	Transarc delta: fred-remove-fs-make-clean 1.1
# 	  Selected comments:
# 	    I originally created it to remove the make and clean options from the
# 	    test1 and test5 scripts.  However I fixed a bug in test1 and closed it.  This
# 	    keeps the make/clean fixes separate from the actual bug.  We may not want
# 	    the make/clean fixes to go out until after 1.0.1.
# 	    No change.
# 	[1992/05/29  12:13:24  mason]
# 
# Revision 1.1.2.2  1992/05/21  12:41:14  jaffe
# 	Transarc delta: fred-2980-and-2981-fix-sys 1.1
# 	  Selected comments:
# 	    To fix reported defects indicating files could not be found.  Added two
# 	    shell scripts, one to issue the correct command to get the system type
# 	    (either AFS or DFS), and a second to generate a file from a string.
# 	    Change variable sys to dfs_fsSysName and use fsSetSysName shell script.
# 	Transarc delta: fred-fs-fix-test4-5 1.1
# 	  Selected comments:
# 	    Fixed bugs in test4 and test5.
# 	    An invocation of expr needed an * to be \*.
# 	Transarc delta: fred-merge-tests 1.1
# 	  Selected comments:
# 	    Created this delta to merge Phil Hirsch's final DFS test code changes with
# 	    the test code that the OSF had.  Hopefully, this means we and the OSF
# 	    should be looking at the same test code.
# 	    Changes to facilitate merge of local DFS test code with the OSF's.
# 	Transarc delta: fred-remove-sys 1.1
# 	  Selected comments:
# 	    To remove dependency on the AFS sys command in the test scripts.
# 	    To remove dependency on AFS sys command.
# 	Transarc delta: rajesh-fix-fs-test5-generate-data-files 1.1
# 	  Selected comments:
# 	    Generate data file half_meg and two_meg on the fly if they
# 	    do not exist
# 	Transarc delta: rajesh-fix-tests 1.1
# 	  Selected comments:
# 	    Bug fixes to tests
# 	    Add a "'" at the end of the sed script used to strip the tab from the output
# 	    of wc -c
# 
# 	$TALog: test5,v $
# 	Revision 4.32  1994/11/08  16:00:48  cfe
# 	[merge of changes from 4.29 to 4.31 into 4.30]
# 
# 	[*** log entries omitted ***]
# 
# Revision 4.30  1994/08/23  14:18:21  berman
# 	Refrain from catting pipes in /etc
# 
# 	Remove etc/* from list files to cat so won't hang up on initpipe.
# 	[from r4.29 by delta berman-db5911-fstest-do-not-cat-pipes, r1.1]
# 
# Revision 4.29  1993/01/14  17:34:58  jaffe
# 	revdrop of latest OSF copyright changes to these files
# 	[from r4.28 by delta osf-revdrop-01-12-92, r1.1]
# 
# 	[1992/05/20  19:19:29  jaffe]
# 
# $EndLog$
#
###############################################################################
#    Copyright (C) 1990, 1992 Transarc Corporation - All rights reserved      #
###############################################################################

# This test times two-megabyte reads.

# Usage: test5 [-help] [-debug]

# This script generates a two-megabyte (2 * 1024 * 1024 =
# 2097152 bytes) file called two_meg and a 512-kilobyte file (512 * 1024 =
# 524288 bytes) called half_meg in the current directory, if they are not
# there.

###############################################################################

#
# PrintUsage() -
#   Prints the usage message for this script.

PrintUsage()
{
    echo "$programName tests read times"
    echo "Usage: $programName"; 
}

#
# Initialise some variables. UTIL_DIR is the directory containing 
# the script fs_FunctionsScript with common functions.
#

TESTTOP=${TESTTOP:="`pwd`"}

if [ "$TESTTOP" = "`pwd`" ]
then
    UTIL_DIR=../util
    testhome=$TESTTOP
else
    UTIL_DIR=$TESTTOP/util
    testhome=$TESTTOP/fs
fi

. $UTIL_DIR/fs_FunctionsScript
. $UTIL_DIR/fs_SetSysVar
createFileCmd="$UTIL_DIR/fs_GenerateFile"

trap '
    echo "$programName killed; returning $scriptErrorExit" | tee -a $logFile
    exit $scriptErrorExit
    ' 2 3 15

#
# Initialise setup variables
#

fs_InitSetup fs

#
# Parse the command line
#

while [ "$1" != "" ]
do 
    case $1 in 
        help|-help) PrintUsage
                    exit $successExit
                    ;;
        debug|-debug)
                    dumpkernel="true"
                    shift
                    ;;

        *)          echo "ERROR $testSuiteType/$programName: invalid argument \"$1\"" | tee -a $logFile
                    exit $scriptErrExit
                    ;;
    esac
done

#
# Start test
#

if [ ! -f half_meg ]
then 
    half_megLength=`expr 1024 \* 1024`
    half_megLength=`expr $half_megLength / 2`
    $createFileCmd -nl 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.' 63 half_meg $half_megLength
fi 

if [ `cat half_meg | wc -c | sed 's/[    ]//g'` != "524288" ]
then 
    echo "$programName: half_meg is the wrong size" | tee -a $logFile
    exit $scriptErrorExit
fi

if [ ! -f two_meg ]
then 
    cat half_meg half_meg half_meg half_meg > two_meg
fi

if [ `cat two_meg | wc -c | sed 's/[     ]//g'` != "2097152" ]
then 
    echo "$programName: two_meg is the wrong size" | tee -a $logFile
    exit $scriptErrorExit
fi

(
    echo "$programName (read 2MB) starting in $currentDir"
    echo "Host `hostname` ($fs_sysName)"
    date
) | tee -a $logFile

fs_DetermineFSType

( 
    echo ""
    echo "Flushing caches" 
) | tee -a $logFile

if [ $fsType = $AFS ]
then
    (
        fs getca
        fs flushv .
        fs flush half_meg two_meg .
        fs getca
    ) | tee -a $logFile
fi

if [ $fsType = "$DFS" ]
then
    (
        cm getca
        cm flushf .
        cm flush half_meg two_meg .
        cm getca
    ) | tee -a $logFile
fi

sleep 5
cat /*x* /bin/*  2> /dev/null | wc

( 
    echo ""
    echo "Reading half_meg the first time" 
) | tee -a $logFile

( 
    time wc half_meg 
) 2>&1 | tee -a $logFile

( 
    echo ""
    echo "Reading half_meg the second time" 
) | tee -a $logFile

( 
    time wc half_meg 
) 2>&1 | tee -a $logFile

( 
    echo ""
    echo "Reading half_meg the third time" 
) | tee -a $logFile

( 
    time wc half_meg 
) 2>&1 | tee -a $logFile

( 
    echo ""
    echo "Reading two_meg the first time" 
) | tee -a $logFile

( 
    time wc two_meg 
) 2>&1 | tee -a $logFile

( 
    echo ""
    echo "Reading two_meg the second time" 
) | tee -a $logFile

( 
    time wc two_meg 
) 2>&1 | tee -a $logFile

( 
    echo ""
    echo "Reading two_meg the third time" 
) | tee -a $logFile

( 
    time wc two_meg 
) 2>&1 | tee -a $logFile

( 
    echo ""
    echo "Flushing caches the second time" 
) | tee -a $logFile

if [ $fsType = $AFS ]
then
    (
        fs getca
        fs flushv .
        fs flush half_meg two_meg .
        fs getca
    ) | tee -a $logFile
fi

if [ $fsType = $DFS ]
then
    (
        cm getca
        cm flushf .
        cm flush half_meg two_meg .
        cm getca
    ) | tee -a $logFile
fi

sleep 5
cat /*x* /bin/*  2> /dev/null | wc

( 
    echo ""
    echo "Reading half_meg the fourth time" 
) | tee -a $logFile

( 
    time wc half_meg 
) 2>&1 | tee -a $logFile

( 
    echo ""
    echo "Reading half_meg the fifth time" 
) | tee -a $logFile

( 
    time wc half_meg 
) 2>&1 | tee -a $logFile

( 
    echo ""
    echo "Reading two_meg the fourth time" 
) | tee -a $logFile

( 
    time wc two_meg 
) 2>&1 | tee -a $logFile

( 
    echo ""
    echo "Reading two_meg the fifth time" 
) | tee -a $logFile

( 
    time wc two_meg 
) 2>&1 | tee -a $logFile

###############################################################################

rm -f $currentDir/half_meg
rm -f $currentDir/two_meg

(
    echo ""
    echo "$testSuiteType/$programName returning $errorCount in $currentDir"
    date
) | tee -a $logFile

exit $errorCount

###############################################################################









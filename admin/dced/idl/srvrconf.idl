/*
 * @OSF_COPYRIGHT@
 * Copyright (c) 1994, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: srvrconf.idl,v $
 * Revision 1.1.4.2  1996/03/09  23:07:04  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:25:50  marty]
 *
 * Revision 1.1.4.1  1995/12/08  21:27:46  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/08  17:59:50  root]
 * 
 * Revision 1.1.2.4  1994/04/11  18:45:53  rsalz
 * 	Update to final RFC revision.
 * 	[1994/04/11  18:26:25  rsalz]
 * 
 * Revision 1.1.2.3  1994/03/07  20:18:07  rsalz
 * 	Updating to second edition of functional spec.
 * 	[1994/03/07  19:39:23  rsalz]
 * 
 * Revision 1.1.2.2  1994/02/01  21:43:24  bowe
 * 	Use server_fixedattr_t, not server_fixattr_t (which should not have
 * 	been defined to begin with).
 * 	[1994/01/27  14:32:42  bowe]
 * 
 * Revision 1.1.2.1  1994/01/21  18:03:34  bowe
 * 	Initial checkin
 * 	[1994/01/21  18:00:28  bowe]
 * 
 * $EndLog$
 */


[
    uuid(002f242b-0a9c-1d34-8fd5-0000c09ce054),
    version(1.0)
]


/*
**  S R V R C O N F
**  This service allows a server to maintain static configuration data
**  about what servers are known to be capable of running on a host.
**  The information is advisory in that not all "configured" servers
**  will always be available, and a server may be start up without being
**  configured.  The variable attributes may also be manipulable via
**  the rs_attr service.
*/
interface srvrconf
{
    import "dce/dced_base.idl";


    /*
    **  Get the list of srvrconf objects.
    */
    void
    srvrconf_get_list(
	[in]		handle_t		h,
	[out]		dced_entry_list_t	*items,
	[out]		error_status_t		*st
    );


    /*
    **  Retrieve a srvrconf object.
    */
    void
    srvrconf_get(
	[in]		handle_t		h,
	[in]		uuid_t			*id,
	[out]		server_t		*value,
	[out]		error_status_t		*st
    );


    /*
    **  Create a new srvrconf object.
    */
    void
    srvrconf_create(
	[in]		handle_t		h,
	[in]		server_t		*server,
	[out]		error_status_t		*st
    );


    /*
    **  Delete a srvrconf object.
    */
    void
    srvrconf_delete(
	[in]		handle_t		h,
	[in]		uuid_t			*id,
	[out]		error_status_t		*st
    );


    /*
    **  Replace the variable attributes of a srvrconf object.
    */
    void
    srvrconf_attr_replace(
	[in]		handle_t		h,
	[in]		uuid_t			*id,
	[in]		dced_attr_list_t	*attributes,
	[out]		error_status_t		*st
    );


    /*
    **  Replace the fixed attributes of a srvrconf object.
    */
    void
    srvrconf_fixattr_replace(
	[in]		handle_t		h,
	[in]		uuid_t			*id,
	[in,unique]	server_fixedattr_t	*fixed,
	[out]		error_status_t		*st
    );


    /*
    **  Start a configured server.  The instance, if not NULL and not the
    **  nil UUID, identifies the running server.  If unspecified, then
    **  an instance UUID will be created.
    */
    void
    srvrconf_start(
	[in]		handle_t		h,
	[in]		uuid_t			*id,
	[in,unique]	server_fixedattr_t	*fixed,
	[in,unique]	dced_attr_list_t	*attributes,
	[in,out,ptr]	uuid_t			*instance,
	[out]		error_status_t		*st
    );
}

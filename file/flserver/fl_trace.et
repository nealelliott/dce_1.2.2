#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
#
# HISTORY
# $Log: fl_trace.et,v $
# Revision 1.1.63.1  1996/10/02  17:45:54  damon
# 	Newest DFS from Transarc
# 	[1996/10/01  18:36:59  damon]
#
# Revision 1.1.58.2  1994/06/09  14:06:56  annie
# 	fixed copyright in src/file
# 	[1994/06/09  13:22:10  annie]
# 
# Revision 1.1.58.1  1994/02/04  20:17:53  devsrc
# 	Merged from 1.0.3a to 1.1
# 	[1994/02/04  15:12:39  devsrc]
# 
# Revision 1.1.56.1  1993/12/07  17:23:31  jaffe
# 	1.0.3a update from Transarc
# 	[1993/12/03  15:16:07  jaffe]
# 
# Revision 1.1.2.2  1993/04/01  21:57:12  jaffe
# 	Transarc delta: comer-db3328-add-tracing-to-flserver 1.2
# 	  Selected comments:    Add tracing to the flserver.  The log will be written to
# 	    dcelocal/var/dfs/adm/icl.ubik when it gets SIGUSR1, SIGSEGV, SIGBUS,
# 	    and SIGILL.  The last 3 will cause the process to call abort().
# 	    Trace messages.
# 	    Introduced a regression due to missing braces.
# 	[1993/04/01  21:29:49  jaffe]
# 
# $EndLog$
#
# Copyright (C) 1992 Transarc Corporation
# Licensed Materials - Property of Transarc
# All rights reserved.
#
# flserver trace table
#
error_table 2 zfl
	ec	FL_TRACE_RCSID,
		"$Header: /u0/rcs_trees/dce/rcs/file/flserver/fl_trace.et,v 1.1.63.1 1996/10/02 17:45:54 damon Exp $"
	ec	FL_TRACE_GET_JUNCT,
		"flserver calling dfs_GetJunctionName for %s"
	ec	FL_TRACE_INIT_AUTH,
		"flserver calling dfsauth_server_InitAuthentication"
	ec	FL_TRACE_INIT_UBIK,
		"flserver calling ubik_ServerInit"
	ec	FL_TRACE_GET_SERVER_LIST,
		"flserver calling ubik_GetServerList"
	ec	FL_TRACE_NUM_SERVERS,
		"ubik_GetServerList returns %d servers"
	ec	FL_TRACE_READY,
		"flserver ready to service requests"
	ec	FL_TRACE_UNREG,
		"flserver unregistering interface"
	ec	FL_TRACE_VLWRITE_ENTRY,
		"vlwrite(trans=0x%x, off=%d, buf=0x%x, len=%d) entered"
	ec	FL_TRACE_VLWRITE_EXIT,
		"vlwrite returns %d"
	ec	FL_TRACE_VLREAD_ENTRY,
		"vlread(trans=0x%x, off=%d, buf=0x%x, len=%d) entered"
	ec	FL_TRACE_VLREAD_EXIT,
		"vlread returns %d"
	ec	FL_TRACE_VLENTWRITE_ENTRY,
		"vlentrywrite(trans=0x%x, off=%d, buf=0x%x, len=%d) entered"
	ec	FL_TRACE_VLENTREAD_ENTRY,
		"vlentryread(trans=0x%x, off=%d, buf=0x%x, len=%d) entered"
	ec	FL_TRACE_VLENTWRITE_EXIT,
		"vlentrywrite returns %d"
	ec	FL_TRACE_VLENTREAD_EXIT,
		"vlentryread returns %d"
	ec	FL_TRACE_WRVITAL,
		"write_vital_vlheader(trans=0x%x) entered"
	ec	FL_TRACE_WRVITAL_EXIT,
		"write_vital_vlheader returns %d"
	ec	FL_TRACE_CHK_INIT,
		"CheckInit(trans=0x%x) entered"
	ec	FL_TRACE_CI_CHK_UPDATE,
		"CheckInit: check for db update"
	ec	FL_TRACE_CI_REREAD,
		"CheckInit: reread db"
	ec	FL_TRACE_CI_WR_HEADER,
		"CheckInit: initialize fldb header"
	ec	FL_TRACE_CI_WR_FAILED,
		"CheckInit: fldb initialization failed, errorcode=%d"
	ec	FL_TRACE_CI_EXIT,
		"CheckInit returns 0"
	ec	FL_TRACE_ALLOC_BLK,
		"AllocBlock(trans=0x%x, tentry=0x%x, errp=0x%x) entered"
	ec	FL_TRACE_AB_RD_EXIT,
		"AllocBlock failed in read, err=%d"
	ec	FL_TRACE_AB_NB_EXIT,
		"AllocBlock failed because blockindex = 0"
	ec	FL_TRACE_AB_WR_EXIT,
		"AllocBlock failed in write, err=%d"
	ec	FL_TRACE_AB_EXIT,
		"AllocBlock returns blockindex %d"
	ec	FL_TRACE_FREE_BLK,
		"FreeBlock(trans=0x%x, blockindex=%d) entered"
	ec	FL_TRACE_FB_EXIT,
		"FreeBlock returns %d"
	ec	FL_TRACE_FIND_ID,
		"FindById(trans=0x%x, volid=%d,,%d, voltix=%d, tentry=0x%x, ...) entered"
	ec	FL_TRACE_FI_HASH,
		"FindById: hash volid to %d"
	ec	FL_TRACE_FIND_ID_EXIT,
		"FindById returns blockindex %d (errorcode = %d)"
	ec	FL_TRACE_FIND_NAME,
		"FindByName(trans=0x%x, volname=%s, tentry=0x%x, errp=0x%x) entered"
	ec	FL_TRACE_FN_HASH,
		"FindByName: hash volid to %d"
	ec	FL_TRACE_FIND_NAME_EXIT,
		"FindByName returns blockindex %d (errorcode = %d)"
	ec	FL_TRACE_THR_ENT,
		"ThreadVLentry (trans=0x%x, blockindex=%d, tentry=0x%x) entered"
	ec	FL_TRACE_THR_ENT_EXIT,
		"ThreadVLentry returns %d"
	ec	FL_TRACE_UNTHR_ENT,
		"UnthreadVLentry (trans=0x%x, blockindex=%d, aentry=0x%x) entered"
	ec	FL_TRACE_UNTHR_ENT_EXIT,
		"UnthreadVLentry returns %d"
	ec	FL_TRACE_HASH_ID,
		"HashVolid(trans=0x%x, voltix=%d, blockindex=%d, tentry=0x%x) entered"
	ec	FL_TRACE_HASH_ID_EXIT,
		"HashVolid returns %d"
	ec	FL_TRACE_UNHASH_ID,
		"UnhashVolid(trans=0x%x, voltix=%d, blockindex=%d, aentry=0x%x) entered"
	ec	FL_TRACE_UNHASH_ID_EXIT,
		"UnhashVolid returns %d"
	ec	FL_TRACE_HASH_NAME,
		"HashVolname(trans=0x%x, blockindex=%d, aentry=0x%x) entered"
	ec	FL_TRACE_HASH_NAME_EXIT,
		"HashVolname returns %d"
	ec	FL_TRACE_UNHASH_NAME,
		"UnhashVolname(trans=0x%x, blockindex=%d, aentry=0x%x) entered"
	ec	FL_TRACE_UNHASH_NAME_EXIT,
		"UnhashVolname returns %d"
	ec	FL_TRACE_NEXT_ENT,
		"NextEntry (trans=0x%x, blockindex=%d, tentry=0x%x, remaining=0x%x) entered"
	ec	FL_TRACE_NXTENT_EXIT,
		"NextEntry returns %d (remaining = %d)"
	ec	FL_TRACE_INIT_DB,
		"Init_VLdbase (transPP=0x%x, locktype=%d, op=%d) entered (readany=%d)"
	ec	FL_TRACE_INIT_DB_EXIT,
		"InitVLdbase returns %d"
	ec	FL_TRACE_CRENT,
		"VL_CreateEntry(connp=0x%x, newentry=0x%x) entered"
	ec	FL_TRACE_CRENT_EXIT,
		"VL_CreateEntry returns %d"
	ec	FL_TRACE_DELENT,
		"VL_DeleteEntry(connp=0x%x, volid=%d,,%d, voltype=%d) entered"
	ec	FL_TRACE_DELENT_EXIT,
		"VL_DeleteEntry returns %d"
	ec	FL_TRACE_GETENT_ID,
		"VL_GetEntryByID (connp=0x%x, volid=%d,,%d, voltype=%d, aentry=0x%x) entered"
	ec	FL_TRACE_GETENT_ID_EXIT,
		"VL_GetEntryByID returns %d"
	ec	FL_TRACE_GETENT_NAME,
		"VL_GetEntryByName (connp=0x%x, volname=%s, aentry=0x%x) entered"
	ec	FL_TRACE_GETENT_NAME_EXIT,
		"VL_GetEntryByName returns %d"
	ec	FL_TRACE_GETNEWVOL,
		"VL_GetNewVolumeId (connp=0x%x, Maxvolidbump=%d, Addrp=0x%x, newvolumeid=0x%x) entered"
	ec	FL_TRACE_GNV_RES,
		"VL_GetNewVolumeId returns new volume %d,,%d"
	ec	FL_TRACE_GETNEWVOL_EXIT,
		"VL_GetNewVolumeId returns %d"
	ec	FL_TRACE_REPLENT,
		"VL_ReplaceEntry (connp=0x%x, volid=%d,,%d, voltype=%d, newentry=0x%x, ...) entered"
	ec	FL_TRACE_REPLENT_EXIT,
		"VL_ReplaceEntry returns %d"
	ec	FL_TRACE_SETLK,
		"VL_SetLock (connp=0x%x, volid=%d,,%d, voltype=%d, voloper=%d) entered"
	ec	FL_TRACE_SETLK_EXIT,
		"VL_SetLock returns %d"
	ec	FL_TRACE_RELLK,
		"VL_ReleaseLock (connp=0x%x, volid=%d,,%d, voltype=%d, releasetype=%d) entered"
	ec	FL_TRACE_RELLK_EXIT,	
		"VL_ReleaseLock returns %d"
	ec	FL_TRACE_LSTENT,
		"VL_ListEntry (connp=0x%x, prev=%d, count=0x%x, next=0x%x, ...) entered"
	ec	FL_TRACE_LSTENT_EXIT,
		"VL_ListEntry returns %d"
	ec	FL_TRACE_LSTATTR,
		"VL_ListByAttributes(connp=0x%x, attributes=0x%x, cookie=0x%x, nentries=0x%x, ...) entered"
	ec	FL_TRACE_LSTATTR_EXIT,
		"VL_ListByAttributes returns %d"
	ec	FL_TRACE_GETSTAT,
		"VL_GetStats(connp=0x%x, stats=0x%x, vital_header=0x%x) entered"
	ec	FL_TRACE_GETSTAT_EXIT,
		"VL_GetStats returns %d"
	ec	FL_TRACE_ADDADDR,
		"VL_AddAddress(connp=0x%x, OldAddr=0x%x, AddrToAdd=0x%x) entered"
	ec	FL_TRACE_ADDADDR_EXIT,
		"VL_AddAddress returns %d"
	ec	FL_TRACE_REMADDR,
		"VL_RemoveAddress(connp=0x%x, AddrToRemove=0x%x) entered"
	ec	FL_TRACE_REMADDR_EXIT,
		"VL_RemoveAddress returns %d"
	ec	FL_TRACE_CHGADDR,
		"VL_ChangeAddress(connp=0x%x, OldAddr=0x%x, NewAddr=0x%x) entered"
	ec	FL_TRACE_CHGADDR_EXIT,
		"VL_ChangeAddress returns %d"
	ec	FL_TRACE_GETCELL,
		"VL_GetCellInfo(connp=0x%x, MyCell=0x%x) entered"
	ec	FL_TRACE_GETCELL_EXIT,
		"VL_GetCellInfo returns %d"
	ec	FL_TRACE_GETNXT_ID,
		"VL_GetNextServersByID (connp=0x%x, volid=%d,,%d, voltype=%d, startHere=%d, ...) entered"
	ec	FL_TRACE_GETNXT_ID_EXIT,
		"VL_GetNextServersByID returns %d"
	ec	FL_TRACE_GETNXT_NAME,
		"VL_GetNextServersByName (connp=0x%x, volname=%s, startHere=%d, ...) entered"
	ec	FL_TRACE_GETNXT_NAME_EXIT,
		"VL_GetNextServersByName returns %d"
	ec	FL_TRACE_GETSITE,
		"VL_GetSiteInfo(connp=0x%x, OldAddr=0x%x, FullSiteInfo=0x%x) entered"
	ec	FL_TRACE_GETSITE_EXIT,
		"VL_GetSiteInfo returns %d"
	ec	FL_TRACE_GENSITE,
		"VL_GenerateSites(connp=0x%x, startHere=%d, ..., TheseSites=0x%x, nSites=0x%x) entered"
	ec	FL_TRACE_GENSITE_EXIT,
		"VL_GenerateSites returns %d"
	ec	FL_TRACE_GS_RES,
		"VL_GenerateSites returning %d sites at 0x%x"
	ec	FL_TRACE_GETIDS,
		"VL_GetNewVolumeIds (connp=0x%x, numWanted=%d, Addrp=0x%x, newIDs=0x%x) entered"
	ec	FL_TRACE_GETIDS_EXIT,
		"VL_GetNewVolumeIds returns %d"
	ec	FL_TRACE_CRSRV,
		"VL_CreateServer (connp=0x%x, FullSiteInfo=0x%x) entered"
	ec	FL_TRACE_CRSRV_EXIT,
		"VL_CreateServer returns %d"
	ec	FL_TRACE_PROBE,
		"VL_Probe(connp=0x%x) entered"
	ec	FL_TRACE_GETCENT_ID,
		"VL_GetCEntryByID (connp=0x%x, volid=%d,,%d, voltype=%d, centryp=0x%x) entered"
	ec	FL_TRACE_GETCENT_ID_EXIT,
		"VL_GetCEntryById returns %d"
	ec	FL_TRACE_GETCENT_NAME,
		"VL_GetCEntryByName (connp=0x%x, volname=%s, centryp=0x%x) entered"
	ec	FL_TRACE_GETCENT_NAME_EXIT,
		"VL_GetCEntryByName returns %d"
	ec	FL_TRACE_GETCNXT_ID,
		"VL_GetCNextServersByID (connp=0x%x, volid=%d,,%d, voltype=%d, startHere=%d, ...) entered"
	ec	FL_TRACE_GETCNXT_ID_STR,
		"VL_GetCNextServersByID storing entry in 0x%x, flags in 0x%x"
	ec	FL_TRACE_GETCNXT_ID_EXIT,
		"VL_GetCNextServerByID returns %d"
	ec	FL_TRACE_GETCNXT_NAME,
		"VL_GetCNextServersByName (connp=0x%x, volname=%s, startHere=%d, ...) entered"
	ec	FL_TRACE_GETCNXT_NAME_STR,
		"VL_GetCNextServersByName storing entry in 0x%x, flags in 0x%x"
	ec	FL_TRACE_GETCNXT_NAME_EXIT,
		"VL_GetCNextServerByName returns %d"
	ec	FL_TRACE_ALTS,
		"VL_AlterServer(connp=0x%x, AddrOfHost=0x%x, AttrsP=0x%x) entered"
	ec	FL_TRACE_ALTS_EXIT,
		"VL_AlterServer returns %d"
	ec	FL_TRACE_EXPS,
		"VL_ExpandSiteCookie (connp=0x%x, Cookie=%d, FullSiteInfo=0x%x) entered"
	ec	FL_TRACE_EXPS_EXIT,
		"VL_ExpandSiteCookie returns %d"
	ec	FL_TRACE_GIF,
		"VL_GetServerInterfaces (connp=0x%x, serverInterfacesP=0x%x) entered"
	ec	FL_TRACE_GIF_EXIT,
		"VL_GetServerInterfaces returns %d"
	ec	FL_TRACE_REMENT,
		"RemoveEntry(trans=0x%x, entryptr=%d, tentry=0x%x) entered"
	ec	FL_TRACE_REMENT_EXIT,
		"RemoveEntry returns %d"
	ec	FL_TRACE_FREES,
		"FreeSiteQuota(trans=0x%x, tentry=0x%x) entered"
	ec	FL_TRACE_FREES_EXIT,
		"FreeSiteQuota returns %d"
	ec	FL_TRACE_VDTOVE,
		"vldbentry_to_vlentry(atrans=0x%x, VldbEntry=0x%x, VlEntry=0x%x) entered"
	ec	FL_TRACE_VDTOVE_EXIT,
		"vldbentry_to_vlentry returns 0"
	ec	FL_TRACE_VETOVD,
		"vlentry_to_vldbentry(trans, VlEntry, VldbEntry) entered"
	ec	FL_TRACE_VETOVD_EXIT,
		"vlentry_to_vldbentry returns 0"
	ec	FL_TRACE_VETOCVD,
		"vlentry_to_comvldbentry(trans=0x%x, vlentp=0x%x, comvldbp=0x%x) entered"
	ec	FL_TRACE_VETOCVD_EXIT,
		"vlentry_to_comvldbentry returns 0"
	ec	FL_TRACE_INVALOP,
		"InvalidOperation: %d"
	ec	FL_TRACE_INVALREL,
		"InvalidRelease: releasetype"
	ec	FL_TRACE_FLCHK,
		"NotFlAdmin(connp=0x%x) entered"
	ec	FL_TRACE_FLCHK_EXIT,
		"NotFlAdmin returns %d"
	ec	FL_TRACE_SITECHK,
		"AuthForSiteDesc(connp=0x%x, descp=0x%x, ...) entered"
	ec	FL_TRACE_SITECHK_EXIT,
		"AuthForSiteDesc returns %d, ok=%d"
	ec	FL_TRACE_ADDRCHK,
		"AuthForAddress(connp=0x%x, trans=0x%x, addrp=0x%x, ...) entered"
	ec	FL_TRACE_ADDRCHK_EXIT,
		"AuthForAddress returns %d, ok=%d"
	ec	FL_TRACE_VLCHK,
		"AuthForVlEntry(connp=0x%x, trans=0x%x, vlentryp=0x%x, ...) entered"
	ec	FL_TRACE_VLCHK_EXIT,
		"AuthForVlEntry returns %d, ok=%d"
	ec	FL_TRACE_GSITE,
		"GetSite(trans=0x%x, SitePtr=%d, descBuffP=0x%x) entered"
	ec	FL_TRACE_GSITE_EXIT,
		"GetSite returns %d"
	ec	FL_TRACE_CGSITE,
		"CarefullyGetSite(trans=0x%x, SitePtr=%d, descBuffP=0x%x) entered"
	ec	FL_TRACE_CGSITE_EXIT,
		"CarefullyGetSite returns %d"
	ec	FL_TRACE_PUTS,
		"PutSite(trans=0x%x, SitePtr=%d, descBuffP=0x%x, needLock=%d) entered"
	ec	FL_TRACE_PUTS_EXIT,
		"PutSite returns %d"
	ec	FL_TRACE_QCHK,
		"quotaCheck(trans=0x%x, descaddr=%d, descp=0x%x, quotaIncr=%d) entered"
	ec	FL_TRACE_QCHK_EXIT,
		"quotaCheck returns %d"
	ec	FL_TRACE_ENSADDR,
		"EnsureAddrEntry(trans=0x%x, Addr=0x%x, OutPtr=0x%x, "
	ec	FL_TRACE_ENSADDRA,
		"\tDoAlloc=%d, WhichAddr=0x%x, quotaIncr=%d)"
	ec	FL_TRACE_ENSADDR_EXIT,
		"EnsureAddrEntry returns %d"
end

#!/bin/sh
#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
#
# HISTORY
# $Log: test3,v $
# Revision 1.1.11.1  1996/10/17  18:18:26  damon
# 	Submitting on behalf of Transarc
# 	[1996/10/17  16:50:05  damon]
#
# Revision 1.1.4.4  1993/01/11  18:25:54  htf
# 	Embedded copyright notice
# 	[1993/01/11  16:58:22  htf]
# 
# Revision 1.1.4.3  1992/10/28  16:12:03  jaffe
# 	Transarc delta: comer-fix-cm-test-suite 1.1
# 	  Selected comments:
# 	    Fixed the cm test suite so that it would no longer use the
# 	    exportdfs command and so that it didn't expect resetstore to
# 	    fail if the user is not root.
# 	    Removed exportdfs.
# 	[1992/10/27  18:07:23  jaffe]
# 
# Revision 1.1.4.2  1992/08/28  18:10:24  jaffe
# 	Transarc delta: bk-ot4484-cm-test3 1.1
# 	  Selected comments:
# 	     TO fix cm test3 which was coded using both sh and csh.
# 	    Now the cm test3 is written in sh only.
# 	[1992/08/28  12:06:23  jaffe]
# 
# Revision 1.1.2.2  1992/05/21  12:36:43  jaffe
# 	Transarc delta: fred-merge-tests 1.1
# 	  Selected comments:
# 	    Created this delta to merge Phil Hirsch's final DFS test code changes with
# 	    the test code that the OSF had.  Hopefully, this means we and the OSF
# 	    should be looking at the same test code.
# 	    Changes to facilitate merge of local DFS test code with the OSF's.
# 	Transarc delta: fred-remove-sys 1.1
# 	   Selected comments:
# 	    To remove dependency on the AFS sys command in the test scripts.
# 	    To remove dependency on AFS sys command.
# 
# 	$TALog: test3,v $
# 	Revision 12.4  1996/03/08  13:36:56  gait
# 	Makes minor repairs to the following tests: fts, rep, acl, fset, cm.
# 	Adds a script to run these tests all at once. The script bullet proofs
# 	the test environment as much as possible and gathers the logs together
# 	in one place.
# 
# 	Fix whoami calculation.
# 	[from r4.8 by delta gait-db7321-repair-rep-tests, r1.1]
# 
# Revision 4.8  1994/11/01  22:22:13  cfe
# 	Bring over the changes that the OSF made in going from their DCE 1.0.3
# 	release to their DCE 1.1 release.
# 	[from r4.7 by delta cfe-db6109-merge-1.0.3-to-1.1-diffs, r1.1]
# 
# 	[1992/05/20  18:08:33  jaffe]
# 
# $EndLog$
#

###############################################################################
#    Copyright (C) 1991, 1992 Transarc Corporation - All rights reserved      #
###############################################################################

# This test is applicable to DFS.
# The script tests the cm subcommands that require local root permission
# (resetstores, setsetuid, and sysname).

###############################################################################

# Usage:                test3

# Typically run via:    test3 >& test3.out
# or via the cm/runtests script.

###############################################################################

# Test environment:
# This test requires DFS to be up and running.

# Privilege required:
# You must be logged in as Unix root.

# Highest error number is: 24.

###############################################################################

d=`pwd`
hn=`hostname`
p=`basename $0`
rc=0
ty=cm

: ${TESTTOP:="`pwd`"}

if [ "$TESTTOP" = "`pwd`" ]
then
    . ../util/fs_SetSysVar
else
    . $TESTTOP/util/fs_SetSysVar
fi


: ${CELL_NAME=`sed -n '/cellname/s/cellname[         ]*\/\.\.\.\///p' /opt/dcelocal/dce_cf.db`}


: ${bin_dir=/opt/dcelocal/bin}
: ${export_root=/.../$CELL_NAME/fs}
PATH=":"$bin_dir":"$PATH
cacheinfo=/opt/dcelocal/etc/CacheInfo

###############################################################################

echo ""
echo "RUNNING cm local-root-privilege COMMANDS on $hn."
echo "========================================================================="
date
echo ""

WHOAMI=`/usr/ucb/whoami`
if test ${WHOAMI} != root
   then   echo "Cannot run this test unless you're logged in as root ($p E0)"
	  exit 1
   fi	

###############################################################################

echo ""; echo "cm resetstores"
cm resetstores
if test $? -ne 0 
  then  echo "- failed ($p E1)"; rc=`expr $rc + 1`
  fi

###############################################################################

echo ""; echo "cm setsetuid -path $export_root -state on"
cm setsetuid -path $export_root -state on
if test $? -ne 0 
  then echo "- failed ($p E2)"; rc=`expr $rc + 1`
  fi

echo ""; echo "cm setsetuid -path $export_root -state off"
cm setsetuid -path $export_root
if test $? -ne 0 
  then echo "- failed ($p E3)"; rc=`expr $rc + 1`
  fi

###############################################################################

echo ""; echo "cm sysname"
cm sysname | grep $fs_sysName
if test $? -ne 0 
  then echo "- failed ($p E9)"; rc=`expr $rc + 1`
  fi

echo ""; echo "cm sy"
cm sy | grep $fs_sysName
if test $? -ne 0 
  then echo "- failed ($p E10)"; rc=`expr $rc + 1`
  fi

echo ""; echo "cm sysname fred"
cm sysname fred
if test $? -ne 0 
  then echo "- failed ($p E11)"; rc=`expr $rc + 1`
  fi

echo ""; echo "cm sysname $fs_sysName"
cm sysname $fs_sysName
if test $? -ne 0 
  then echo "- failed ($p E12)"; rc=`expr $rc + 1`
  fi

###############################################################################

echo ""; echo "cm setcachesize 12345"
cm setcachesize 12345
if test $? -ne 0 
  then echo "- failed ($p E13)"; rc=`expr $rc + 1`
  fi

echo ""; echo "cm getcachesize | grep 12345"
cm getcachesize | grep 12345
if test $? -ne 0 
  then echo "- failed to set cachesize properly ($p E14)"
  fi

configval=`awk '-F:' '{print $3}' $cacheinfo`
echo ""; echo "cm setcachesize 0"
cm setcachesize 0
if test $? -ne 0 
  then echo "- failed to set cachesize properly ($p E15)"
  fi

echo ""; echo "cm getcachesize"
cm getcachesize
if test $? -ne 0
  then echo "- failed ($p E16)"; rc=`expr $rc + 1`
  fi

resetval=`cm getcachesize | awk '{print $9}'`
if test $resetval -ne $configval 
  then echo "- failed to reset cachesize properly ($p E17)"
  fi

# upper limit = 2^32 + 1
echo ""; echo "cm setcachesize 4294967297"
cm setcachesize 4294967297
if test $? -eq 0 
  then echo "- worked ($p E18)"; rc=`expr $rc + 1`
  fi

# lower limit = 1
echo ""; echo "cm setcachesize 1"
cm setcachesize 1
if test $? -ne 0 
  then echo "- failed ($p E19)"; rc=`expr $rc + 1`
  fi

echo ""; echo "cm setcachesize -5000"
cm setcachesize -5000
if test $? -eq 0 
  then echo "- worked ($p E20)"; rc=`expr $rc + 1`
  fi

echo ""; echo "cm setcachesize"
cm setcachesize
if test $? -eq 0 
  then echo "- worked ($p E21)"; rc=`expr $rc + 1`
  fi

echo ""; echo "cm setcachesize -reset"
cm setcachesize -reset
if test $? -ne 0 
  then echo "- failed ($p E22)"; rc=`expr $rc + 1`
  fi

resetval=`cm getcachesize | awk '{print $9}'`
if test $resetval -ne $configval 
  then echo "- failed to reset cachesize properly ($p E23)"
  fi

echo ""; echo "cm setcachesize 12345 -reset"
cm setcachesize 12345 -reset
if test $? -eq 0
  then echo "- worked ($p E24)"; rc=`expr $rc + 1`
  fi

###############################################################################

sync; sync; sleep 2

echo ""; echo "Done at `date`."; echo ""
if test $rc -eq 0
   then echo "$ty/$p PASSED"
   else echo "$ty/$p FAILED ($rc errors)"
   fi

exit $rc

###############################################################################

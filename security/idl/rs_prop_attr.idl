/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1994, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 */
/*
 * HISTORY
 * $Log: rs_prop_attr.idl,v $
 * Revision 1.1.4.2  1996/03/09  23:28:34  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:44:01  marty]
 *
 * Revision 1.1.4.1  1995/12/08  17:35:02  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/08  16:55:32  root]
 * 
 * Revision 1.1.2.3  1994/09/02  17:47:26  mdf
 * 	CR 11868  Initial checkin of missing functionality that propagates removal of attributes
 * 	[1994/08/31  13:06:08  mdf]
 * 
 * Revision 1.1.2.2  1994/06/10  17:13:19  annie
 * 	cr10872 - fixed copyright
 * 	[1994/06/10  17:06:55  annie]
 * 
 * Revision 1.1.2.1  1994/06/02  21:28:31  mdf
 * 	hp_sec_to_osf_3 drop, merge up with latest.
 * 	hp_sec_to_osf_3 drop
 * 	 /main/ODESSA_2/2  1994/05/06  19:56 UTC  mdf
 * 	 Fixes for Inital ERA progagation drop
 * 	 /main/ODESSA_2/mdf_odessa_era_bl36/1  1994/05/06  19:43 UTC  mdf
 * 	modifications to support multiple attribute updates...
 * 	 /main/ODESSA_2/1  1994/04/26  19:53 UTC  mdf
 * 	Support for ERA propagation.
 * 	 /main/mdf_odessa_era_bl33/2  1994/04/26  19:49 UTC  mdf
 * 	Support for ERA propagation.
 * 	 /main/mdf_odessa_era_bl33/1  1994/04/11  18:52 UTC  mdf
 * 	Initial drop.
 * 	[1994/05/24  15:16:04  mdf]
 * 
 * $EndLog$
 */

/*
 * Copyright (c) Hewlett-Packard Company 1994
 * Unpublished work.  All Rights Reserved.
 */

[ uuid(0eff23e6-555a-11cd-95bf-0800092784c3), 
  version(1),
  pointer_default(ptr)
]

interface rs_prop_attr

{
    import
        "dce/rplbase.idl",
        "dce/rs_attr_base.idl";

    typedef struct {
        unsigned32			num_attrs;
        [size_is(num_attrs)] 	
		sec_attr_t		attrs[];
    } rs_prop_attr_list_t;

    typedef struct {
	sec_rgy_name_t			component_name;
	rs_prop_attr_list_t		*attr_list;
    } rs_prop_attr_data_t;


    /*
     * rs_prop_attr_update
     */
    void rs_prop_attr_update (
        [in]       handle_t			h,
        [in]       unsigned32			num_prop_attrs,
        [in, ref, size_is(num_prop_attrs)] 	
		rs_prop_attr_data_t		prop_attrs[],
        [in, ref]  rs_replica_master_info_t	*master_info,
        [in]       boolean32			propq_only,
        [out]      error_status_t		*st
    );

    /*
     * rs_prop_attr_delete
     */
    void rs_prop_attr_delete (
        [in]       handle_t			h,
        [in]       unsigned32			num_prop_attrs,
        [in, ref, size_is(num_prop_attrs)] 	
		rs_prop_attr_data_t		prop_attrs[],
        [in, ref]  rs_replica_master_info_t	*master_info,
        [in]       boolean32			propq_only,
        [out]      error_status_t		*st
    );
}

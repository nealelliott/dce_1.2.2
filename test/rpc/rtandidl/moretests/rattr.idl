/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: rattr.idl,v $
 * Revision 1.1.4.2  1996/03/11  02:27:29  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  19:59:46  marty]
 *
 * Revision 1.1.4.1  1995/12/11  20:08:51  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:44:31  root]
 * 
 * Revision 1.1.2.4  1993/01/25  18:07:03  bbelch
 * 	Fix duplicate log
 * 	[1993/01/25  17:42:55  bbelch]
 * 
 * Revision 1.1.2.3  1993/01/11  23:38:46  bbelch
 * 	Embedding copyright notice
 * 	[1993/01/06  18:11:52  bbelch]
 * 
 * Revision 1.1.2.2  1992/10/12  17:15:20  cuti
 * 	Remove hardcoded protocol seq and endpoint instead using all_protoseq.
 * 	[1992/10/09  20:24:16  cuti]
 * 
 * Revision 1.1  1992/01/19  03:36:28  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/*
#
#
# Copyright (c) 1991 by
#    Hewlett-Packard Company, Palo Alto, Ca.
#
# Permission to use, copy, modify, and distribute this
# software and its documentation for any purpose and without
# fee is hereby granted, provided that the above copyright
# notice appear in all copies and that both that copyright
# notice and this permission notice appear in supporting
# documentation, and that the name of Hewlett-Packard Company not
# be used in advertising or publicity pertaining to distribution
# of the software without specific, written prior permission.
# Hewlett-Packard Company makes no representations about the
# suitability of this software for any purpose.  It is provided
# "as is" without express or implied warranty.
#
#
# DCE API Test
#
*/



/*
 * r a t t r t e s t
 *
 * Interface rattrtest is designed to test the various
 * routine attributes that NIDL defines: [idempotent], [maybe],
 * and [broadcast] .
 */

[uuid(41248aed-1000-0000-0d00-00c366000000),
 version(2)
]

interface rattrtest {

/*
 * op1 
 *
 *[maybe] which stores the value of 'i' in static storage for retrieval by op2
 */
[maybe]
void rattrtest_op1(
    [in] handle_t h,
    [in] long int i
    );

long int rattrtest_op2(
    [in] handle_t h
    );


/*
 * op3
 *
 * An [idempotent] operation which returns the number of times its been called
 * since op4 was last called and, therefore, it is not really idempotent.
 */
[idempotent]
unsigned long rattrtest_op3(
    [in] handle_t h
    );

void rattrtest_op4(
    [in] handle_t h
    );

/*
 * op5
 *
 * A [broadcast] operation which stores the value of 'i' in static storage
 * for retrieval by op6.
 */
[idempotent, broadcast]
void rattrtest_op5(
    [in] handle_t h,
    [in] long int i
    );  

long int rattrtest_op6(
    [in] handle_t h
    );
}

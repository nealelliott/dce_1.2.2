#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1994 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
#
# HISTORY
# $Log: ag_trace.et,v $
# $EndLog$
#
# Copyright (C) 1996, 1994 Transarc Corporation
# Licensed Materials - Property of Transarc
# All rights reserved.
#
# xaggr operations trace table
#
error_table 2 zxa
	ec	XAG_TRACE_NULL,
		"$Header: /afs/tr/project/fs/dev/dfs-dev/src/file/xaggr/RCS/ag_trace.et,v 1.6 1996/03/22 14:02:09 cfe Exp $"
	ec	XAG_TRACE_AFSCALL,
		"afscall_aggr(op=%ld)"
	ec	XAG_TRACE_AFSCALL_END,
		"afscall_aggr returns %ld"
	ec	XAG_TRACE_VOLCREATE,
		"ag_volcreate(aggr %ld, id %lu,,%lu, flags %ld): calling AG_VOLCREATE"
	ec	XAG_TRACE_VOLCREATE_DONE,
		"ag_volcreate returns %ld"
	ec	XAG_TRACE_ATTACH,
		"ag_attach: params are %lx, %lx, %lx"
	ec	XAG_TRACE_ATTACH_COPYIN,
		"ag_attach: returns code %ld from osi_copyin()"
	ec	XAG_TRACE_ATTACH_EXISTS,
		"ag_attach: ag_GetAggr found the aggr; returning EEXIST"
	ec	XAG_TRACE_ATTACH_UNUSED_1,
		"unused"
	ec	XAG_TRACE_ATTACH_UNUSED_2,
		"unused"
	ec	XAG_TRACE_ATTACH_BADGETV,
		"ag_attach: osi_getvdev returns %ld"
	ec	XAG_TRACE_ATTACH_NOEXP,
		"ag_attach: AGGR_ATTACH_NOEXPORT set, so return %ld"
	ec	XAG_TRACE_ATTACH_EXPORTED,
		"ag_attach: Already exported--returning %ld"
	ec	XAG_TRACE_ATTACH_REGGED,
		"ag_attach: Registered after noexport--returning %ld"
	ec	XAG_TRACE_ATTACH_UNKNOWNTYPE,
		"ag_attach: unknown aggregate type: returning %ld"
	ec	XAG_TRACE_ATTACH_SUB,
		"ag_attach: %ld returned from dependent attach-op"
	ec	XAG_TRACE_ATTACH_NOOPS,
		"ag_attach: no ag-operations vector: returning %ld"
	ec	XAG_TRACE_ATTACH_NEWAGGR,
		"ag_attach: ag_NewAggr returned %ld"
	ec	XAG_TRACE_AGGRINFO,
		"ag_aggrInfo: for aggrid %ld"
	ec	XAG_TRACE_AGGRINFO_END,
		"ag_aggrInfo returns %ld"
	ec	XAG_TRACE_AGGRENUMERATE,
		"ag_aggrEnumerate(%ld, %lx, %lx) called"
	ec	XAG_TRACE_AGGRENUMERATE_TOOSMALL,
		"ag_aggrEnumerate: outlen %ld (for %ld aggrs) too small; return %ld"
	ec	XAG_TRACE_AGGRENUMERATE_END,
		"ag_aggrEnumerate: returning %ld"
	ec	XAG_TRACE_VOLENUMERATE,
		"ag_volEnumerate(%ld, %lx, %lx, %lx) called"
	ec	XAG_TRACE_VOLENUMERATE_COPYIN,
		"ag_volEnumerate returns %ld from osi_copyin"
	ec	XAG_TRACE_VOLENUMERATE_TOOBIG,
		"ag_volEnumerate can't store %ld bytes (%d vols): code %ld"
	ec	XAG_TRACE_VOLENUMERATE_GOING,
		"ag_volEnumerate: agid %lu, going for %lu vol(s)"
	ec	XAG_TRACE_VOLENUMERATE_VOLINFOERR,
		"ag_volEnumerate: AG_VOLINFO, index %ld, gives code %ld"
	ec	XAG_TRACE_VOLENUMERATE_DONE,
		"ag_volEnumerate: index %ld, returning code %ld"
	ec	XAG_TRACE_VOLENUMERATE_GETSTS,
		"ag_volEnumerate: VOL_GETSTATUS for ix %ld returns code %ld"
	ec	XAG_TRACE_VOLENUMERATE_MIDEND,
		"ag_volEnumerate: batch done: returning code %ld"
	ec	XAG_TRACE_VOLENUMERATE_NOAGGR,
		"ag_volEnumerate: ag_GetAggr(%ld) returns null; returning ENODEV"
	ec	XAG_TRACE_REGISTERVOLUMES,
		"ag_RegisterVolumes: registering on aggr %ld"
	ec	XAG_TRACE_REGISTERVOLUMES_INFO,
		"ag_RegisterVolumes: AG_VOLINFO ix %ld gives %lu,,%lu, code %ld"
	ec	XAG_TRACE_REGISTERVOLUMES_ATTACH,
		"ag_RegisterVolumes: vol_Attach(%lu,,%lu) gives states %x, code %ld"
	ec	XAG_TRACE_REGISTERVOLUMES_DONE,
		"ag_RegisterVolumes: done"
	ec	XAG_TRACE_UNREGISTERVOLUMES,
		"ag_UnRegisterVolumes: unregistering on aggr %ld"
	ec	XAG_TRACE_UNREGISTERVOLUMES_INFO,
		"ag_UnRegisterVolumes: AG_VOLINFO ix %ld gives %lu,,%lu, code %ld"
	ec	XAG_TRACE_UNREGISTERVOLUMES_VOLREG,
		"ag_UnRegisterVolumes: volreg_Lookup(%lu,,%lu) returns %ld"
	ec	XAG_TRACE_UNREGISTERVOLUMES_BUSY,
		"ag_UnRegisterVolumes: vol %lu,,%lu is busy: returning %ld"
	ec	XAG_TRACE_UNREGISTERVOLUMES_NOOPEN,
		"ag_UnRegisterVolumes: can't open vol %lu,,%lu: code %ld"
	ec	XAG_TRACE_UNREGISTERVOLUMES_DETACH,
		"ag_UnRegisterVolumes: vol_Detach(%lu,,%lu) returns %ld"
	ec	XAG_TRACE_UNREGISTERVOLUMES_RELE,
		"ag_UnRegisterVolumes: after VOL_RELE(%lu,,%lu), code is %ld"
	ec	XAG_TRACE_NEWAGGR,
		"ag_NewAggr(%s, %ld, %#lx) called"
	ec	XAG_TRACE_NEWAGGR_EXISTS,
		"ag_NewAggr: %#lx already exists to match"
	ec	XAG_TRACE_NEWAGGR_NEW,
		"ag_NewAggr: Created new aggr structure %#lx"
	ec	XAG_TRACE_PUTAGGR,
		"ag_PutAggr: decreasing ref count on aggr %lx"
	ec	XAG_TRACE_PUTAGGR_FINAL,
		"ag_PutAggr: FINAL decreasing of ref count on aggr %lx"
	ec	XAG_TRACE_PUTAGGR_FINAL_END,
		"ag_PutAggr: returning code %ld"
	ec	XAG_TRACE_PUTAGGR_FINAL_BOGUS,
		"ag_PutAggr: pointer %lx not in list: returning ENOENT"
	ec	XAG_TRACE_ATTACH_EXISTS_2,
		"ag_attach: ag_GetAggr found the aggr; returning %d from register-vols"
	ec	XAG_TRACE_AGHOLD,
		"ag_fsHold: aggr %#x, ref now %d"
	ec	XAG_TRACE_AGRELE,
		"ag_fsRele: aggr %#x, ref now %d"
	ec	XAG_TRACE_ENTER_AGLOCK,
		"ag_fsLock: aggr %#x, type %d: obtaining lock"
	ec	XAG_TRACE_LEAVE_AGLOCK,
		"ag_fsLock: returning code %d"
	ec	XAG_TRACE_ENTER_AGUNLOCK,
		"ag_fsUnlock: aggr %#x, type %d: releasing lock"
	ec	XAG_TRACE_LEAVE_AGUNLOCK,
		"ag_fsUnlock: returning code %d"
	ec	XAG_TRACE_DMHOLD,
		"ag_fsDMHold: aggr %#x"
	ec	XAG_TRACE_DMRELE,
		"ag_fsDMRele: aggr %#x"
end

# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for 
# the full copyright text.
#
#
# HISTORY
# $Log: test1,v $
# Revision 1.1.6.1  1996/10/17  18:23:48  damon
# 	Submitting on behalf of Transarc
# 	[1996/10/17  16:52:06  damon]
#
# Revision 1.1.2.1  1994/07/28  17:38:25  mckeen
# 	Initial Revision
# 	[1994/07/28  14:10:30  mckeen]
# 
# $EndLog$
#
###############################################################################
# This test is applicable to DFS/NFS exporter.
# The script tests the dfsgw help and apropos funtion
###############################################################################
#
# if not run via the runtests script use
#         test1 >test1.log 2>&1
# to log test data
###############################################################################

d=`pwd`
hn=`hostname`
p=`basename $0`
rc=0
ty=dfsgw


echo ""
echo "RUNNING dfsgw help and apropos COMMANDS on $hn."
echo "========================================================================="
date
echo ""

###############################################################################
cmdlist="apropos add delete list query"

for cmd in $cmdlist
do
   echo ""
   echo "dfsgw help $cmd"
   dfsgw help $cmd
   rf=$?
   if test $rf -ne 0 
      then
      echo "dfsgw help $cmd failed ($p: E1)"
      rc=`expr $rc + 1`
   fi 
   echo ""
   echo "dfsgw apropos -topic $cmd"
   dfsgw apropos -topic $cmd
   rf=$?
   if test $rf -ne 0 
      then 
      echo "dfsgw apropos -topic $cmd failed ($p: E2)"
      rc=`expr $rc + 1`
   fi
done

echo ""
echo "dfsgw apropos -help"
dfsgw apropos -help
rf=$?
if test $rf -ne 0 
   then
   echo "failed ($p: E3)"
   rc=`expr $rc + 1`

fi

echo ""
echo "dfsgw apropos invalid"
dfsgw apropos invalid
rf=$?
if test $rf -eq 0 
   then
   echo "worked ($p: E4)"
   rc=`expr $rc + 1`

fi 

echo ""
echo "dfsgw apropos list"
dfsgw apropos list
rf=$?
if test $rf -ne 0
   then
   echo "failed ($rf) ($p: E5)" 
   rc=`expr $rc + 1`
fi

echo ""
echo "dfsgw help"
dfsgw help
rf=$?
if test $rf -ne 0 
   then
   echo "failed ($rf) ($p: E6)"
   rc=`expr $rc + 1`
fi

echo ""
echo "dfsgw add"
dfsgw add
rf=$?
if test $rf -eq 0 
   then
   echo "failed ($rf) ($p: E7)"
   rc=`expr $rc + 1`
fi

echo ""
echo "dfsgw -topic"
dfsgw -topic
rf=$?
if test $rf -eq 0 
   then
   echo "worked ($p: E8)"
   rc=`expr $rc + 1`
fi
########################################

echo ""
echo "Done at `date`."
echo ""
if [ $rc -eq 0 ]
   then
   echo "$ty/$p PASSED"
else 
   echo "$ty/$p FAILED $rc errors"
fi
exit $rc

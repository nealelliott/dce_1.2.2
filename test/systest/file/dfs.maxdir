#!/bin/ksh
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994, 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# 
# HISTORY
# $Log: dfs.maxdir,v $
# Revision 1.1.6.2  1996/03/11  02:43:54  marty
# 	Update OSF copyright years
# 	[1996/03/10  20:07:20  marty]
#
# Revision 1.1.6.1  1995/12/11  21:59:28  root
# 	Submit OSF/DCE 1.2.1
# 	[1995/12/11  20:58:45  root]
# 
# Revision 1.1.4.2  1994/07/19  13:20:15  rdl
# 	Made command line interface uniform with the other automated DFS system tests.
# 	[1994/07/19  13:16:37  rdl]
# 
# Revision 1.1.4.1  1994/06/10  20:49:11  devsrc
# 	cr10872 - fixed copyright
# 	[1994/06/10  17:19:05  devsrc]
# 
# Revision 1.1.2.2  1993/07/30  15:43:37  gmd
# 	Initial version.
# 	[1993/07/30  14:49:53  gmd]
# 
# $EndLog$
############################################################################
# TITLE: dfs.maxdir
# SYNTAX:
#       dfs.maxdir <datafile>
# OBJECTIVE:
#       Test the ability of dfs to handle large directories.
# DESCRIPTION:
# 	Write, read and delete a directory with NUMENTRIES entries.
#
#################################################################
# use input args
SCRIPT=`basename $0`

USAGE="Usage: `basename $0` [-f] data_file"

DATAFILE=
while getopts :f: ARG
do
	case ${ARG} in
		f)	if [ -n "$DATAFILE" ]	# multiple -f's?
			then
				echo $USAGE
				exit 1
			fi
			DATAFILE=$OPTARG;;

		*)	echo $USAGE
			exit 1;;
	esac
done
shift $(($OPTIND - 1))

if [ -n "$DATAFILE" ]	# has DATAFILE been specified yet?
then
	if [ $# -gt 0 ]
	then
		echo $USAGE
		exit 1
	fi
elif [ $# -ne 1 ]	# no DATAFILE anywhere
then
	echo $USAGE
	exit 1
else
	DATAFILE=$1	# DATAFILE without -f
fi

if [ ! -r $DATAFILE ]	# DATAFILE exist and have read permission?
then
	echo "`basename $0`: Cannot open $DATAFILE for reading"
	exit 2
fi

echo "Data file: $DATAFILE"

# setup
# source in configuration data
. $DATAFILE

# source in routine to check return codes
. ./check_RC.ksh

# keep track of when we started
START_DATE=`date`
echo "START DATE AND TIME IS $START_DATE"

# write it
cd $DFS_PATH
echo "$SCRIPT: Attempting to write, read and delete a directory with $NUMENTRIES entries"
$TROOT/systest/file/dirwrite.sh -n $NUMENTRIES -l $LARGE_FILE -t $TESTDIR
check_RC "$?" "dirwrite"

# read and delete it
$TROOT/systest/file/dirread -n $NUMENTRIES -t $TESTDIR -d
check_RC "$?" "dirread"

echo "$SCRIPT: Successfully wrote, read and deleted a directory with $NUMENTRIES entries"
echo "$SCRIPT: START DATE AND TIME WAS $START_DATE"
echo "$SCRIPT: END DATE AND TIME IS `date`"
echo "$SCRIPT: PASSED"





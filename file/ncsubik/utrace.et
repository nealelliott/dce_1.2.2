#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
#
# HISTORY
# $Log: utrace.et,v $
# Revision 1.1.62.1  1996/10/02  17:56:30  damon
# 	Newest DFS from Transarc
# 	[1996/10/01  18:43:03  damon]
#
# $EndLog$
#
# Copyright (C) 1993, 1996 Transarc Corporation
# Licensed Materials - Property of Transarc
# All rights reserved.
#
# ubik trace table
#
error_table 2 zuk
#
# from ubik.c
#
	ec	UK_TRACE_RCSID,
		"$Header: /u0/rcs_trees/dce/rcs/file/ncsubik/utrace.et,v 1.1.62.1 1996/10/02 17:56:30 damon Exp $"
	ec	UK_TRACE_SERVER_INIT,
		"ubik_ServerInit(myHost=0x%x, nsGroupP=%s, secGroupP=%s, pathName=%s) entered"
	ec	UK_TRACE_SERVER_INIT_EXIT,
		"ubik_ServerInit returns (errorcode=%ld)"
	ec	UK_TRACE_GET_SERVER_LIST,
		"ubik_GetServerList returns (groupName=%s, groupSize=%ld, errorcode=%ld)"
	ec	UK_TRACE_CONTACT_QUORUM,
		"ContactQuorum (host=%s, func=0x%x, transPtr=0x%x)"
	ec	UK_TRACE_CONTACT_QUORUM_EXIT,
		"ContactQuorum(transPtr=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_BEGIN_TRANS,
		"ubik_BeginTrans (transMode=%ld)"
	ec	UK_TRACE_BEGIN_TRANS_EXIT,
		"ubik_BeginTrans returns (transPtr=0x%x, errorcode=%ld)"
	ec	UK_TRACE_ABORT_TRANS,
		"ubik_AbortTrans (transPtr=0x%x)"
	ec	UK_TRACE_ABORT_TRANS_EXIT,
		"ubik_AbortTrans(transPtr=0x%x) returns( errorcode=%ld)"
	ec	UK_TRACE_END_TRANS,
		"ubik_EndTrans (transPtr=0x%x)"
	ec	UK_TRACE_END_TRANS_EXIT,
		"ubik_EndTrans(transPtr=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_READ,
		"ubik_Read (transPtr=0x%x, buffer=0x%x, length=%ld)"
	ec	UK_TRACE_READ_EXIT,
		"ubik_Read(transPtr=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_WRITE,
		"ubik_Write (transPtr=0x%x, buffer=0x%x, length=%ld)"
	ec	UK_TRACE_WRITE_EXIT,
		"ubik_Write(transPtr=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_SEEK,
		"ubik_Seek (transPtr=0x%x, fileid=%ld, position=%ld)"
	ec	UK_TRACE_SEEK_EXIT,
		"ubik_Seek(transPtr=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_TELL,
		"ubik_Tell (transPtr=0x%x)"
	ec	UK_TRACE_TELL_EXIT,
		"ubik_Tell(transPtr=0x%x) returns (fileid=%ld, position=%ld)"
	ec	UK_TRACE_TRUNCATE,
		"ubik_Truncate (transPtr=0x%x, length=%ld)"
	ec	UK_TRACE_TRUNCATE_EXIT,
		"ubik_Truncate(transPtr=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_SETLOCK,
		"ubik_SetLock (transPtr=0x%x, position=%ld, length=%ld, type=%ld)"
	ec	UK_TRACE_SETLOCK_EXIT,
		"ubik_SetLock(transPtr=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_WAIT_VERSION,
		"ubik_WaitVersion (our version %ld.%ld, wait for %ld.%ld)"
	ec	UK_TRACE_POOL_USE_UBIK,
		"ubik_thrPoolLookup, use ubik thread pool"
	ec	UK_TRACE_POOL_USE_DEFAULT,
		"ubik_thrPoolLookup, use default thread pool"

#
# from remote.c
#
	ec	UK_TRACE_SUBIKDISK_GET_SERVER_INTERFACES,
		"SUBIKDISK_GetServerInterfaces (handle=0x%x)"
	ec	UK_TRACE_SUBIKDISK_GET_SERVER_INTERFACES_EXIT,
		"SUBIKDISK_GetServerInterfaces(handle=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_SUBIKDISK_BEGIN,
		"SUBIKDISK_Begin (handle=0x%x, transId %ld.%ld)"
	ec	UK_TRACE_SUBIKDISK_BEGIN_EXIT,
		"SUBIKDISK_Beginx(handle=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_SUBIKDISK_COMMIT,
		"SUBIKDISK_Commit (handle=0x%x, transId %ld.%ld)"
	ec	UK_TRACE_SUBIKDISK_COMMIT_EXIT,
		"SUBIKDISK_Commit(handle=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_SUBIKDISK_RELEASE_LOCKS,
		"SUBIKDISK_ReleaseLocks (handle=0x%x, transId %ld.%ld)"
	ec	UK_TRACE_SUBIKDISK_RELEASE_LOCKS_EXIT,
		"SUBIKDISK_ReleaseLocks(handle=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_SUBIKDISK_ABORT,
		"SUBIKDISK_Abort (handle=0x%x, transId %ld.%ld)"
	ec	UK_TRACE_SUBIKDISK_ABORT_EXIT,
		"SUBIKDISK_Abort(handle=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_SUBIKDISK_LOCK,
		"SUBIKDISK_Lock (handle=0x%x, transId %ld.%ld)"
	ec	UK_TRACE_SUBIKDISK_LOCK_PARAMS,
		"SUBIKDISK_Lock (file=%ld, pos=%ld, len=%ld, type=%ld)"
	ec	UK_TRACE_SUBIKDISK_LOCK_EXIT,
		"SUBIKDISK_Lock(handle=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_SUBIKDISK_WRITE,
		"SUBIKDISK_Write (handle=0x%x, transId %ld.%ld)"
	ec	UK_TRACE_SUBIKDISK_WRITE_PARAMS,
		"SUBIKDISK_Write (file=%ld, pos=%ld, len=%ld, buffer=0x%x)"
	ec	UK_TRACE_SUBIKDISK_WRITE_EXIT,
		"SUBIKDISK_Write(handle=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_SUBIKDISK_TRUNCATE,
		"SUBIKDISK_Truncate (handle=0x%x, transId %ld.%ld)"
	ec	UK_TRACE_SUBIKDISK_TRUNCATE_PARAMS,
		"SUBIKDISK_Truncate (file=%ld, len=%ld)"
	ec	UK_TRACE_SUBIKDISK_TRUNCATE_EXIT,
		"SUBIKDISK_Truncate(handle=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_SUBIKDISK_GETVERSION,
		"SUBIKDISK_GetVersion (handle=0x%x)"
	ec	UK_TRACE_SUBIKDISK_GETVERSION_EXIT,
		"SUBIKDISK_GetVersion(handle=0x%x) returns (version %ld.%ld, errorcode=%ld)"
	ec	UK_TRACE_SUBIKDISK_GETFILE,
		"SUBIKDISK_GetFile (handle=0x%x, file=%ld, pipe=0x%x)"
	ec	UK_TRACE_SUBIKDISK_GETFILE_EXIT,
		"SUBIKDISK_GetFile(handle=0x%x) returns (version %ld.%ld, errorcode=%ld)"
	ec	UK_TRACE_SUBIKDISK_SENDFILE,
		"SUBIKDISK_SendFile (handle=0x%x, file=%ld, len=%ld, pipe=0x%x)"
	ec	UK_TRACE_SUBIKDISK_SENDFILE_PARAMS,
		"SUBIKDISK_SendFile (version %ld.%ld)"
	ec	UK_TRACE_SUBIKDISK_SENDFILE_EXIT,
		"SUBIKDISK_SendFile(handle=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_SUBIKDISK_PROBE,
		"SUBIKDISK_Probe (handle=0x%x)"

#
# from vote.c
#
	ec	UK_TRACE_SUBIKVOTE_GET_SERVER_INTERFACES,
		"SUBIKVOTE_GetServerInterfaces (handle=0x%x)"
	ec	UK_TRACE_SUBIKVOTE_BEACON,
		"SUBIKVOTE_Beacon (host=%s, state=%ld, start=%ld)"
	ec	UK_TRACE_SUBIKVOTE_BEACON_PARAMS,
		"SUBIKVOTE_Beacon (version %ld.%ld, transId %ld.%ld)"
	ec	UK_TRACE_SUBIKVOTE_BEACON_NOT_FOUND,
		"SUBIKVOTE_Beacon host %s not found in configuration, vote=%d"
	ec	UK_TRACE_SUBIKVOTE_BEACON_NOT_LOWEST,
		"SUBIKVOTE_Beacon host %s not lowest, lowest host %s, vote=%d"
	ec	UK_TRACE_SUBIKVOTE_BEACON_NOT_SYNC,
		"SUBIKVOTE_Beacon host %s not sync site, sync site %s,vote=%d"
	ec	UK_TRACE_SUBIKVOTE_BEACON_EXIT,
		"SUBIKVOTE_Beacon(host=%s) returns (vote=%ld, errorcode=%ld)"
	ec	UK_TRACE_SUBIKVOTE_GETSYNCSITE,
		"SUBIKVOTE_Beacon(handle=0x%x) returns (host=%s, errorcode=%ld)"

#
# from recovery.c
#
	ec	UK_TRACE_RECOVERY_STATE,
		"recovery running on host %s in state 0x%x"
	ec	UK_TRACE_RECOVERY_HOST_UP,
		"recovery marking host %s as up"
	ec	UK_TRACE_RECOVERY_SYNC_SITE,
		"recovery running on sync site, state 0x%x"
	ec	UK_TRACE_RECOVERY_BAD_VERSION,
	      	"recovery got bad db version %ld.%ld from server %s"
	ec	UK_TRACE_RECOVERY_GET_VERSION_FAIL,
		"recovery failed to get version from server %s, errorcode=%ld"
	ec	UK_TRACE_RECOVERY_FOUND_DB,
		"recovery found best db version %ld.%ld on server %s"
	ec	UK_TRACE_RECOVERY_NOT_FOUND_DB,
		"recovery failed to find best db, replies=%ld, errorcode=%ld"
	ec	UK_TRACE_RECOVERY_FETCH_DB,
		"recovery fetching database version %ld.%ld from server %s"
	ec 	UK_TRACE_RECOVERY_FETCH_DB_END,
		"recovery fetched db version %ld.%ld, errorcode=%ld"
	ec	UK_TRACE_RECOVERY_ALREADY_HAVE_DB,
		"recovery already has latest db version %ld.%ld, state 0x%x"
	ec	UK_TRACE_RECOVERY_LABEL_DB,
		"recovery labelling db %ld.%ld, errocode=%ld"
	ec	UK_TRACE_RECOVERY_SEND_DB,
		"recovery sending db to %s, errorcode=%ld"
	ec	UK_TRACE_RECOVERY_ABORTALL,
		"recovery aborting all open transactions"
	ec	UK_TRACE_RECOVERY_LOSTSERVER,
		"recovery noticed server going down, db to be sent on wake up"
	ec	UK_TRACE_RECOVERY_CHECKTID,
		"recovery detected transaction mismatch; current transId%ld.%ld, incoming transId %ld.%ld, aborting current transaction"

#
# from beacon.c
#
	ec	UK_TRACE_BEACON_GET_VOTE,
		"received vote %ld from server %s, errorcode=%ld"
	ec	UK_TRACE_BEACON_QUORUM,
		"received %ld votes from %ld servers"

#
# from disk.c
#
	ec	UK_TRACE_DISK_LOGOPCODE,
		"udisk_LogOpcode (opcode=%ld, sync=%ld)"
	ec	UK_TRACE_DISK_LOGEND,
		"udisk_LogEnd (version %ld.%ld)"
	ec	UK_TRACE_DISK_LOGTRUNCATE,
		"udisk_LogTruncate (file=%ld, length=%ld)"
	ec	UK_TRACE_DISK_LOGWRITE,
		"udisk_LogWriteData (file=%ld, buffer=0x%x, pos=%ld, len=%ld)"
	ec	UK_TRACE_DISK_READ,
		"udisk_read (trans=0x%x)"
	ec	UK_TRACE_DISK_READ_PARAMS,
		"udisk_read (file=%ld, buffer=0x%x, pos=%ld, len=%ld)"
	ec	UK_TRACE_DISK_TRUNCATE,
		"udisk_truncate (trans=0x%x, file=%ld, len=%ld)"
	ec	UK_TRACE_DISK_WRITE,
		"udisk_write (trans=0x%x)"
	ec	UK_TRACE_DISK_WRITE_PARAMS,
		"udisk_write (file=%ld, buffer=0x%x, pos=%ld, len=%ld)"
	ec	UK_TRACE_DISK_BEGIN,
		"udisk_begin (type=%ld)"
	ec	UK_TRACE_DISK_BEGIN_EXIT,
		"udisk_begin returns (trans=0x%x)"
	ec	UK_TRACE_DISK_COMMIT,
		"udisk_commit (trans=0x%x)"
	ec	UK_TRACE_DISK_ABORT,
		"udisk_abort (trans=0x%x)"
	ec	UK_TRACE_DISK_END,
		"udisk_end (trans=0x%x)"
	ec	UK_TRACE_DISK_WRITING,
		"udisk_begin setting DBWRITING bit; flags 0x%x"
	ec	UK_TRACE_DISK_NOT_WRITING,
		"udisk_begin unsetting DBWRITING bit; flags 0x%x"

#
# from lock.c
#
	#
	# ubik database locks (locked by application)
	#
	ec	UK_TRACE_LOCK_SETLOCK,
		"ulock_SetLock (trans=0x%x)"
	ec	UK_TRACE_LOCK_SETLOCK_PARAMS,
		"ulock_SetLock (pos=%ld, len=%ld, type=%ld, wait=%ld)"
	ec	UK_TRACE_LOCK_RELEASE,
		"ulock_ReleaseAllLocks (trans=0x%x)"

	#
	# ubik low level and version locks (internal locks held by ubik)
	#	
	ec	UK_TRACE_LOCK_HOLD,
		"ubik low level lock attempt to hold"
	ec	UK_TRACE_LOCK_HOLD_EXIT,
		"ubik low level lock held"
	ec	UK_TRACE_LOCK_RELE,
		"ubik low level lock attempt to release"
	ec	UK_TRACE_LOCK_RELE_EXIT,
		"ubik low level lock released"
	ec	UK_TRACE_LOCK_VLHOLD,
		"ubik version lock attempt to hold"
	ec	UK_TRACE_LOCK_VLHOLD_EXIT,
		"ubik version lock held"
	ec	UK_TRACE_LOCK_VLRELE,
		"ubik version lock attempt to release"
	ec	UK_TRACE_LOCK_VLRELE_EXIT,
		"ubik version lock released"
	ec	UK_TRACE_LOCK_SLEEP,
		"ubik_sleep waiting for writer to finish; flags 0x%x"

#
# from upipe.c
#
	ec	UK_TRACE_PIPE_PULL,
		"upipe_FilePull reading=%ld, read=%ld, errorcode=%ld"
	ec	UK_TRACE_PIPE_PUSH,
		"upipe_FilePush writing=%ld, wrote=%ld, errorcode=%ld"

#
# from ubik.p.h
#
	ec	UK_TRACE_EXCEPTION,
		"ubik RPC generated exception %s, in file %s at line %ld"

	ec	UK_TRACE_PIPE_PULL_ENTRY,
		"upipe_FilePull entered"
	ec	UK_TRACE_PIPE_PULL_EXIT,
		"upipe_FilePull exit, read %ld bytes"
	ec	UK_TRACE_PIPE_PUSH_ENTRY,
		"upipe_FilePush entered, %ld bytes requested"
	ec	UK_TRACE_PIPE_PUSH_EXIT,
		"upipe_FilePush exit"
#
# from beacon.c for concurrent beacons
#
	ec	UK_TRACE_CONCURR_BEACON_ADDPARSET_FAIL,
		"failed to queue a concurrent beacon RPC"
	ec	UK_TRACE_CONCURR_BEACON_CREATEPARSET_FAIL,
		"failed to begin concurrent beacons"
	ec	UK_TRACE_CONCURR_PROBE_ADDPARSET_FAIL,
		"failed to queue a concurrent probe RPC"
	ec	UK_TRACE_CONCURR_PROBE_CREATEPARSET_FAIL,
		"failed to begin concurrent probes"

	ec	UK_TRACE_CLOCK_SKEW,
		"clock skew %ld between servers too high"
	ec	UK_TRACE_CONFIG_OUT_OF_SYNC,
		"original server count %ld, tallied %ld, count from namespace %ld"
	ec	UK_TRACE_CONFIG_SYNC_FAIL,
		"failed to queue request that keeps name space and configuration in sync"
	ec	UK_TRACE_SUBIKVOTE_BEACON_VERIFY_SERVER,
		"caller not part of configuration, result of verification: %s"

#
# new
#
	ec	UK_TRACE_TIDCOUNTER_BUMP,
		"bump tid counter by %d"
	ec	UK_TRACE_CALL_CHECKTID,
		"calling urecovery_CheckTid from %s"
	ec	UK_TRACE_SLEEP_WAIT_FOR_WRITER,
		"write trans has to wait for existing writer"
	ec	UK_TRACE_READY_TO_WRITE,
		"writer has exited, go ahead and do the write"
	ec	UK_TRACE_WAKEUP_WRITER,
		"wakeup the sleeping writer"
	ec	UK_TRACE_READY_TO_SENDFILE,
		"writer has exited, go ahead and propagate the database"
	ec	UK_TRACE_INTERACT_NOBODY_ELSE,
		"ShouldIRun: Yes; no known sync site (lastYes vote given at %lu)"
	ec	UK_TRACE_INTERACT_SOMEBODY_ELSE,
		"ShouldIRun: No; %#lx claimed to be sync (%ld) at time %ld"
	ec	UK_TRACE_INTERACT_OTHER_BETTER,
		"ShouldIRun: No; %#lx is available and lower than us (%#lx)"
	ec	UK_TRACE_INTERACT_WE_GO_NOW,
		"ShouldIRun: Yes; nobody better than us now"
	ec	UK_TRACE_RESET_RESETTING_CONFIG,
		"uvote_ResetState: Resetting our configuration"
        ec      UK_TRACE_SUBIKDISK_PROBE_EXIT,
                "SUBIKDISK_Probe exit (code=%ld)"
        ec      UK_TRACE_SEND_PROBE,
                "sending probe to host %s"
        ec      UK_TRACE_PROBE_FAIL,
                "probe to host %s failed, code= %ld"
	ec	UK_TRACE_FLUSH,
		"ubik_Flush (transPtr=0x%x)"
	ec	UK_TRACE_FLUSH_EXIT,
		"ubik_Flush(transPtr=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_SUBIKDISK_BULKUPDATE,
		"SUBIKDISK_BulkUpdate (handle=0x%x, transId %ld.%ld)"
	ec	UK_TRACE_SUBIKDISK_BULKUPDATE_PARAMS_1,
		"SUBIKDISK_BulkUpdate (uop=%ld, arg1=%ld, arg2=%ld, arg3=%ld,"
	ec	UK_TRACE_SUBIKDISK_BULKUPDATE_PARAMS_2,
		"                      arg4=%ld, length=%ld, data=0x%x)"
	ec	UK_TRACE_SUBIKDISK_BULKUPDATE_EXIT,
		"SUBIKDISK_BulkUpdate(handle=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_DISK_RPC_CALL,
		"DiskRpcCall (host=%s, func=0x%x, transPtr=0x%x)"
	ec	UK_TRACE_DISK_RPC_CALL_RESULT,
		"DiskRpcCall(transPtr=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_PVER_CONTACT_QUORUM,
		"ContactQuorum (func=0x%x, transPtr=0x%x, pver=%d, compat=0x%x)"
	ec	UK_TRACE_ASYNC_CONTACT_QUORUM,
		"AsyncContactQuorum (func=0x%x, transPtr=0x%x, pver=%d, compat=0x%x)"
	ec	UK_TRACE_ASYNC_CONTACT_QUORUM_EXIT,
		"AsyncContactQuorum(transPtr=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_WAIT_CONTACT_QUORUM,
		"WaitContactQuorum (transPtr=0x%x)"
	ec	UK_TRACE_WAIT_CONTACT_QUORUM_EXIT,
		"WaitContactQuorum(transPtr=0x%x) returns (errorcode=%ld)"
	ec	UK_TRACE_COMMIT_PANIC,
		"PANIC: %s failed during commit (errorcode=%ld)"
	ec	UK_TRACE_SUBIKVOTE_GETSYNCSITEIDENTITY,
		"SUBIKVOTE_Beacon(handle=0x%x) returns (host=%s, errorcode=%ld)"
end

# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# 
# HISTORY
# $Log: new-block-security.rcvr.test,v $
# Revision 1.1.12.1  1996/10/02  17:18:25  damon
# 	Newest DFS from Transarc
# 	[1996/10/01  18:28:25  damon]
#
# Revision 1.1.6.1  1994/06/09  13:58:28  annie
# 	fixed copyright in src/file
# 	[1994/06/08  21:33:40  annie]
# 
# Revision 1.1.4.2  1993/01/18  22:06:32  cjd
# 	embedded copyright notice
# 	[1993/01/18  21:46:20  cjd]
# 
# Revision 1.1.2.2  1992/05/13  21:56:55  jdp
# 	Transarc delta: ota-freed-frags-2464 1.5
# 	  Files modified:
# 	    anode: anode.p.h, block_alloc.c, mkdir.test
# 	    anode: new-block-security.hm.int.test
# 	    anode: new-block-security.rcvr.test, new-block-security.test
# 	    anode: runtest.c, runtest.h, test_anode.c
# 	  Selected comments:
# 	    Closing only so I can fix another bug.
# 	    So far only new tests and supporting code are done.  The seems to behave
# 	    as expected since NBS and FB changes aren't in yet.
# 	    Doesn't compile now.
# 	    Part of new-block-security.test.
# 	    This is run after recovery to verify the expected results.
# 	    More work on freed block part of new block security.
# 	    Now compiles but new code disabled.
# 	    Close to edit another delta.
# 	    Freed Block fragment stuff now seems to work.  all_tests succeeds.  This
# 	    could be incorporated in to a release if anyone cared.
# 	    Due to a change in episode configuration 2.15,16,or 17, the interface to
# 	    buffer_EquivTran changed.  It no longer returns a code.
# 	[1992/05/13  20:27:42  jdp]
# 
# $EndLog$
# /* Copyright (C) 1992 Transarc Corporation - All rights reserved */
# $Header: /u0/rcs_trees/dce/rcs/file/episode/anode/new-block-security.rcvr.test,v 1.1.12.1 1996/10/02 17:18:25 damon Exp $

new-block-security.rcvr 1
restore /tmp/new-block-security.fn

open_device 1
check_device

open_file test-file

(var=1) get_info l=0 z=0

(var=2) get_info l=0 z=0

(var=3) get_info l=1000 z=1
(var=3) read_file 0 1000 0

(var=4) get_info l=1000 z=1
(var=4) read_file 0 1000

(var=5) get_info l=0 z=0
(var=5) open_file dir
(var=5) get_info l=0 z=0
(var=5) aggr_info f=4

(var=6) get_info l=0 z=0
(var=6) open_file file
(var=6) get_info l=0 z=0
(var=6) aggr_info f=4

(var=7) get_info l=0 z=0
(var=7) open_file frag-file
(var=7) get_info l=0 z=0
(var=7) aggr_info f=1

(var=8) get_info l=0 z=0
(var=8) open_file dir
(var=8) get_info l=0 z=0
(var=8) aggr_info f=4

(var=9) get_info l=0 z=0
(var=9) open_file file
(var=9) get_info l=0 z=0
(var=9) aggr_info f=4

(var=10) get_info l=0 z=0
(var=10) open_file frag-file
(var=10) get_info l=0 z=0
(var=10) aggr_info f=1

(var=11) get_info l=1000 z=1
(var=11) read_file 0 1000 0 # 4148762264 # expected data
(var=11) open_file dir
(var=11) get_info l=0 z=0
(var=11) aggr_info f=3

(var=12) get_info l=1000 z=1
(var=12) read_file 0 1000 0 # 4148762262 # expected data
(var=12) open_file file
(var=12) get_info l=0 z=0
(var=12) aggr_info f=3

(var=13) get_info l=1000 z=1
(var=13) read_file 0 1000 0 # 4148762263 # expected data
(var=13) open_file frag-file
(var=13) get_info l=0 z=0
(var=13) aggr_info f=0

end

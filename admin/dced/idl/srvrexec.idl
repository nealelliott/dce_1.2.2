/*
 * @OSF_COPYRIGHT@
 * Copyright (c) 1994, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: srvrexec.idl,v $
 * Revision 1.1.8.3  1996/03/09  23:07:05  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:25:51  marty]
 *
 * Revision 1.1.8.2  1995/12/08  21:27:48  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/08  17:59:52  root]
 * 
 * Revision 1.1.4.1  1994/10/25  21:47:07  max
 * 	CR 12568 general fixes
 * 	[1994/10/25  21:46:13  max]
 * 
 * Revision 1.1.2.8  1994/09/06  19:56:24  rsalz
 * 	Add srvrexec_exited; finish OT CR 11791.
 * 	[1994/09/06  19:34:16  rsalz]
 * 
 * Revision 1.1.2.7  1994/05/26  19:42:03  rsalz
 * 	EP functionality.
 * 	[1994/05/26  19:35:31  rsalz]
 * 
 * 	Checkpointing.
 * 	[1994/05/18  19:34:19  rsalz]
 * 
 * Revision 1.1.2.6  1994/04/11  18:45:54  rsalz
 * 	Update to final RFC revision.
 * 	[1994/04/11  18:26:26  rsalz]
 * 
 * Revision 1.1.2.5  1994/03/09  20:03:52  rsalz
 * 	Fix errors found in review of previous submit.
 * 	[1994/03/09  19:52:59  rsalz]
 * 
 * Revision 1.1.2.4  1994/03/07  20:18:09  rsalz
 * 	Updating to second edition of functional spec.
 * 	[1994/03/07  19:39:24  rsalz]
 * 
 * Revision 1.1.2.3  1994/02/24  20:33:11  bowe
 * 	Added srvrexec_get() [it was missing]
 * 	[1994/02/24  20:32:02  bowe]
 * 
 * Revision 1.1.2.2  1994/02/01  21:43:27  bowe
 * 	Changed typedef name from srvrexec_stop_method_e to
 * 	srvrexec_stop_method_t.  Changed "method" arg of srvrexec_stop()
 * 	from unsigned32 to srvrexec_stop_method_t.
 * 	[1994/01/29  21:45:35  bowe]
 * 
 * Revision 1.1.2.1  1994/01/21  18:03:35  bowe
 * 	Initial checkin
 * 	[1994/01/21  18:00:29  bowe]
 * 
 * $EndLog$
 */


[
    uuid(006e0b04-0538-1d34-8366-0000c09ce054),
    version(1.0)
]


/*
**  S R V R E X E C
*/
interface srvrexec
{
    import "dce/dced_base.idl";


    /*
    **  Get the list of srvrexec objects.
    */
    void
    srvrexec_get_list(
	[in]		handle_t		h,
	[out]		dced_entry_list_t	*items,
	[out]		error_status_t		*st
    );


    /*
    **  Retrieve a srvrexec object.
    */
    void
    srvrexec_get(
	[in]		handle_t		h,
	[in]		uuid_t			*id,
	[out]		server_t		*server,
	[out]		error_status_t		*st
    );


    /*
    **  Report that a configured server has started.  The instance
    **  identifies the running server.
    */
    void
    srvrexec_started(
	[in]		handle_t		h,
	[in, ptr]	uuid_t			*id,
	[in, ptr]	srvrexec_ep_list_t	*eps,
	[in]		uuid_t			*instance,
	[out]		error_status_t		*st
    );


    /*
    **  Report that an unconfigured server has started.  The instance
    **  identifies the running server.
    */
    void
    srvrexec_create(
	[in]		handle_t		h,
	[in]		server_t		*server,
	[in]		uuid_t			*instance,
	[out]		error_status_t		*st
    );


    /*
    **  Report that a server is exiting.  The instance identifies the
    **  running server.
    */
    void
    srvrexec_exited(
	[in]		handle_t		h,
	[in]		uuid_t			*instance,
	[out]		error_status_t		*st
    );


    /*
    **  Stop a server.
    */
    void
    srvrexec_stop(
	[in]		handle_t		h,
	[in]		uuid_t			*id,
	[in]		srvrexec_stop_method_t	method,
	[out]		error_status_t		*st
    );


    /*
    **  Affect an orderly shutdown of DCE.
    */
    void
    srvrexec_shutdown(
	[in]		handle_t		h,
	[out]		error_status_t		*st
    );


    /*
    **  Enable a service within a server.
    */
    void
    srvrexec_enable_service(
	[in]		handle_t		h,
	[in]		uuid_t			*id,
	[in]		rpc_if_id_t		*ifspec,
	[out]		error_status_t		*st
    );


    /*
    **  Disable a service within a server.
    */
    void
    srvrexec_disable_service(
	[in]		handle_t		h,
	[in]		uuid_t			*id,
	[in]		rpc_if_id_t		*ifspec,
	[out]		error_status_t		*st
    );
}

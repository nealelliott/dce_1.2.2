#!/bin/ksh
#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994, 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# 
# HISTORY
# $Log: dsa,v $
# Revision 1.1.4.2  1996/03/11  02:33:53  marty
# 	Update OSF copyright years
# 	[1996/03/10  19:39:19  marty]
#
# Revision 1.1.4.1  1995/12/11  15:23:44  root
# 	Submit
# 	[1995/12/11  14:35:23  root]
# 
# Revision 1.1.2.8  1994/07/18  20:19:07  keutel
# 	OT 10667: changed NLSPATH stuff
# 	[1994/07/18  14:32:14  keutel]
# 
# Revision 1.1.2.7  1994/07/15  16:58:14  keutel
# 	OT 11316: unsetting of XDS_LOG and D2_LOG removed
# 	[1994/07/15  15:29:33  keutel]
# 
# Revision 1.1.2.6  1994/07/06  15:53:55  marrek
# 	Add version string in July 1994 code drop.
# 	[1994/07/06  15:42:01  marrek]
# 
# Revision 1.1.2.5  1994/06/21  14:29:13  marrek
# 	June 1994 code submission.
# 	[1994/06/16  07:49:38  marrek]
# 
# Revision 1.1.2.4  1994/06/10  20:20:39  devsrc
# 	cr10872 - fixed copyright
# 	[1994/06/10  16:58:56  devsrc]
# 
# Revision 1.1.2.3  1994/05/25  16:21:51  keutel
# 	I18N settings: OT 10667
# 	[1994/05/25  14:25:09  keutel]
# 
# Revision 1.1.2.2  1994/05/18  22:09:41  zeliff
# 	ot10648: fix problem with error checking
# 	[1994/05/16  19:14:47  zeliff]
# 
# 	ot10644: remove change to TET_ROOT value
# 	[1994/05/15  20:04:33  zeliff]
# 
# Revision 1.1.2.1  1994/05/10  14:32:19  marrek
# 	Bug fixes for April 1994 submission.
# 	[1994/05/05  09:18:16  marrek]
# 
# 	Created in April 1994 submission.
# 	[1994/05/03  12:13:45  marrek]
# 
# $EndLog$
#
# $RCSfile: dsa,v $ $Revision: 1.1.4.2 $ $Date: 1996/03/11 02:33:53 $
#
# (c) Copyright 1991,1992-1994 Siemens-Nixdorf Information Systems
# Burlington, MA, USA
# Munich, Germany
# All Rights Reserved
#
#
# dsa
#
# 
# NAME dsa
# 

export TP_PATH=$TET_EXECUTE/lib

tet_startup="Startup"			# no startup function
tet_cleanup="Cleanup"			# cleanup function

iclist="ic1 ic2 ic3 ic4 ic5 ic6 ic7 ic8 ic9 ic10 ic11 ic12 ic13 ic14 ic15 ic16 ic17 ic18 ic19 ic20 ic21 ic22 ic23 ic24 ic25 ic26 ic27 ic28 ic29"

ic1="tp1"				# functions for ic1
ic2="tp2"				# functions for ic2
ic3="tp3"				# functions for ic3
ic4="tp4"				# functions for ic4
ic5="tp5"				# functions for ic5
ic6="tp6"				# functions for ic6
ic7="tp7"				# functions for ic7
ic8="tp8"				# functions for ic8
ic9="tp9"				# functions for ic9
ic10="tp10"				# functions for ic10
ic11="tp11"				# functions for ic11
ic12="tp12"				# functions for ic12
ic13="tp13"				# functions for ic13
ic14="tp14"				# functions for ic14
ic15="tp15"				# functions for ic15
ic16="tp16"				# functions for ic16
ic17="tp17"				# functions for ic17
ic18="tp18"				# functions for ic18
ic19="tp19"				# functions for ic19
ic20="tp20"				# functions for ic20
ic21="tp21"				# functions for ic21
ic22="tp22"				# functions for ic22
ic23="tp23"				# functions for ic23
ic24="tp24"				# functions for ic24
ic25="tp25"				# functions for ic25
ic26="tp26"				# functions for ic26
ic27="tp27"				# functions for ic27
ic28="tp28"				# functions for ic28
ic29="tp29"				# functions for ic29

tp1() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.adduser"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.adduser"
	check_nostderr
	check_ERROR
}

tp2() {
   	tet_infoline "DSA ADMIN: TEST CASE dsa.1addobj"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.1addobj"
	check_nostderr
	check_ERROR
}

tp3() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.3displ"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.3displ"
	check_nostderr
	check_ERROR
}

tp4() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.4displ"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.4displ"
	check_nostderr
	check_ERROR
}

tp5() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.5addatt"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.5addatt"
	check_nostderr
	check_ERROR
}

tp6() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.6rematt"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.6rematt"
	check_nostderr
	check_ERROR
}

tp7() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.7modatt"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.7modatt"
	check_nostderr
	check_ERROR
}

tp8() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.8addali"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.8addali"
	check_nostderr
	check_ERROR
}

tp9() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.11modacl"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.11modacl"
	check_nostderr
	check_ERROR
}

tp10() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.12modrdn"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.12modrdn"
	check_nostderr
	check_ERROR
}

tp11() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.2remobj"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.2remobj"
	check_nostderr
	check_ERROR
}

tp12() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.remuser"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.remuser"
	check_nostderr
	check_ERROR
}

tp13() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.mdl1addobj"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.mdl1addobj"
	check_nostderr
	check_ERROR
}

tp14() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.mdl5addatt"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.mdl5addatt"
	check_nostderr
	check_ERROR
}

tp15() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.mdl7addval"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.mdl7addval"
	check_nostderr
	check_ERROR
}

tp16() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.mdl7modval"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.mdl7modval"
	check_nostderr
	check_ERROR
}

tp17() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.mdl7delval"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.mdl7delval"
	check_nostderr
	check_ERROR
}

tp18() {
	tet_infoline "DSA ADMIN: TEST CASE dsa.mdl7modsub"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.mdl7modsub"
	check_nostderr
	check_ERROR
}

tp19() {
	tet_infoline "DSA ADMIN: TEST CASE   dsa.mdl6rematt"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.mdl6rematt"
	check_nostderr
	check_ERROR
}

tp20() {
	tet_infoline "DSA ADMIN: TEST CASE   dsa.adddme.01"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.adddme.01"
	check_nostderr
	check_ERROR
}

tp21() {
	tet_infoline "DSA ADMIN: TEST CASE   dsa.dispdme.01"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.dispdme.01"
	check_nostderr 
	check_ERROR
}

tp22() {
	tet_infoline "DSA ADMIN: TEST CASE   dsa.deldme.01"
	execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.deldme.01"
	check_nostderr
	check_ERROR
}

tp23() {
        tet_infoline "DSA ADMIN: TEST CASE   dsa.addcert.01"
        execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.addcert.01"
        check_nostderr
        check_ERROR
}

tp24() {
        tet_infoline "DSA ADMIN: TEST CASE   dsa.addcertl.02"
        execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.addcertl.02"
        check_nostderr
        check_ERROR
}

tp25() {
        tet_infoline "DSA ADMIN: TEST CASE   dsa.addcertp.03"
        execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.addcertp.03"
        check_nostderr
        check_ERROR
}

tp26() {
        tet_infoline "DSA ADMIN: TEST CASE   dsa.dispcert.01"
        execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.dispcert.01"
        check_nostderr
        check_ERROR
}

tp27() {
        tet_infoline "DSA ADMIN: TEST CASE   dsa.delcert.01"
        execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.delcert.01"
        check_nostderr
        check_ERROR
}

tp28() {
        tet_infoline "DSA ADMIN: TEST CASE   dsa.addi18n.01"
	
        export NLSPATH=/opt/dcelocal/nls/msg/en_US.ASCII/%N
	case `uname` in
    	HP-UX)
        	export LANG=english
        	;;
    	OSF1)
        	export LANG=en_US.ISO8859-1
        	;;
	esac

        execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.addi18n.01"
        check_nostderr
        check_ERROR
}

tp29() {
        tet_infoline "DSA ADMIN: TEST CASE   dsa.deli18n.01"

        export NLSPATH=/opt/dcelocal/nls/msg/en_US.ASCII/%N
	case `uname` in
    	HP-UX)
        	export LANG=english
        	;;
    	OSF1)
        	export LANG=en_US.ISO8859-1
        	;;
	esac

        execute_cmd "gdsditadm test_trace < ${TP_PATH}/dsa.deli18n.01"
        check_nostderr
        check_ERROR
}

Cleanup() {
        rm -f $ADM/test_trace
        rm -f ${TET_EXECUTE}/admin/out.*
        rm -f ${TET_EXECUTE}/admin/save*
	mv $TET_EXECUTE/tet.log $OUTDIR/admin.dsa.log
	tet_infoline "DSA ADMIN TEST ENDED"
}

Startup() {
	export_paths
        rm -f ${TET_EXECUTE}/tet.log
	tet_infoline "DSA ADMIN TEST START"
	. ${TET_EXECUTE}/config/config_gds-admin_cache.sh
}


# source shell common functions
. ${TET_EXECUTE}/lib/shfuncs

# execute shell test case manager - must be last line
. ${TET_ROOT}/lib/xpg3sh/tcm.sh


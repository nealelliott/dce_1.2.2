/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 */
/*
 * HISTORY
 * $Log: afsvl_proc.idl,v $
 * Revision 1.1.41.1  1996/10/02  17:45:49  damon
 * 	Newest DFS from Transarc
 * 	[1996/10/01  18:36:56  damon]
 *
 * Revision 1.1.36.2  1994/06/09  14:06:50  annie
 * 	fixed copyright in src/file
 * 	[1994/06/09  13:22:07  annie]
 * 
 * Revision 1.1.36.1  1994/02/04  20:17:51  devsrc
 * 	Merged from 1.0.3a to 1.1
 * 	[1994/02/04  15:12:38  devsrc]
 * 
 * Revision 1.1.34.1  1993/12/07  17:23:29  jaffe
 * 	1.0.3a update from Transarc
 * 	[1993/12/03  15:15:39  jaffe]
 * 
 * Revision 1.1.2.5  1993/01/21  19:33:41  zeliff
 * 	Embedding copyright notices
 * 	[1993/01/19  19:47:13  zeliff]
 * 
 * Revision 1.1.2.4  1992/11/24  17:01:29  bolinger
 * 	Change include file install directory from .../afs to .../dcedfs.
 * 	[1992/11/22  17:56:27  bolinger]
 * 
 * Revision 1.1.2.3  1992/09/15  13:12:19  jaffe
 * 	Transarc delta: vijay-ot4824-multiple-ubik-servers-fail-to-startup 1.3
 * 	  Selected comments:
 * 
 * 	    Problems were detected when multiple ubik servers were started up in a cell.
 * 	    This delta attempts to fix these bugs that prevent multiple ubik servers
 * 	    from running in a cell. Problems fixed are
 * 	    1. a hang in sec_id_parse_name was eliminated by removing unnecessary
 * 	    global locks (pthread_lock_global_np)
 * 	    2. ubik_Call routine cleaned up to handle all error cases. flserver RPC
 * 	    interface had to be changed to return the communication status as a
 * 	    return value instead of as a parameter.
 * 	    3. An error code was not returned if an invalid group is passed to ubik_
 * 	    ServerInit.
 * 	    Any other bugs noticed will be added to this delta. Not ready for release yet,
 * 	    upgrading before further changes are added.
 * 	    comm status as a return value instead of as a parameter
 * 	    After the upgrade, made changes to CM, PX, REP and fixed some typos in
 * 	    flserver and ubik. The changes are mainly to follow the new VL_ RPC
 * 	    signature.
 * 	    cleaned up bad merge.
 * 	[1992/09/14  19:35:31  jaffe]
 * 
 * Revision 1.1.2.2  1992/08/31  19:33:01  jaffe
 * 	Transarc delta: cfe-ot4029-portable-rpc-data-types 1.2
 * 	  Selected comments:
 * 	    If ``long'' could possibly mean ``64 bits'' any time soon, we need to keep
 * 	    our RPC interfaces from breaking.
 * 	    see above
 * 	    More of the same.  Forgot a couple of .idl files, and needed to change
 * 	    a couple of procedure signatures to match.
 * 	[1992/08/30  02:18:27  jaffe]
 * 
 * Revision 1.1  1992/01/19  02:48:39  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/*
*/
/* Copyright (C) Transarc Corporation 1991--All Rights Reserved */

[
 uuid(4d37f2dd-ed43-0000-02c0-37cf2e000001),
 version(4.0)
 /* provider_version(1) */
]
interface VL_
{

	import "dcedfs/afsvl_data.idl";

	/* vldb interface calls */

	/* PREFIX excerpted in afsvl_proc.idl, this ordering should be
	 * identical in both the idl files */

	error_status_t VL_GetEntryByID (			/* access=OPEN */
		[in] handle_t h,			/* provider_version(1) */
		[in] afsHyper *Volid, 
		[in] unsigned32 voltype,
		[out] vldbentry *entry
	);

	error_status_t VL_GetEntryByName (		/* access=OPEN */
		[in] handle_t h,			/* provider_version(1) */
		[in] volumeName volName,
		[out] vldbentry *entry
	);

	error_status_t VL_Probe (				/* access=OPEN */
		[in] handle_t h			/* provider_version(1) */
	);

	error_status_t VL_GetCellInfo (			/* access=OPEN */
		[in] handle_t h,			/* provider_version(1) */
		[out] vlconf_cell *MyCell
	);

	error_status_t VL_GetNextServersByID (		/* access=OPEN */
		[in] handle_t h,			/* provider_version(1) */
		[in] afsHyper *Volid, 
		[in] unsigned32 voltype,
		[in] unsigned32 startHere,
		[out] unsigned32 *nextStartP,
		[out] vldbentry *entry,
		[out] unsigned32 *flagsP
	);

	error_status_t VL_GetNextServersByName (	/* access=OPEN */
		[in] handle_t h,			/* provider_version(1) */
		[in] volumeName volName,
		[in] unsigned32 startHere,
		[out] unsigned32 *nextStartP,
		[out] vldbentry *entry,
		[out] unsigned32 *flagsP
	);

	error_status_t VL_GetSiteInfo (			/* access=OPEN */
		[in] handle_t h,			/* provider_version(1) */
		[in] afsNetAddr *OldAddr,
		[out] siteDesc *FullSiteInfo
	);

	error_status_t VL_GetCEntryByID (		/* access=OPEN */
		[in] handle_t h,			/* provider_version(1) */
		[in] afsHyper *Volid, 
		[in] unsigned32 voltype,
		[out] compactvldbentry *entry
	);

	error_status_t VL_GetCEntryByName (		/* access=OPEN */
		[in] handle_t h,			/* provider_version(1) */
		[in] volumeName volName,
		[out] compactvldbentry *entry
	);

	error_status_t VL_GetCNextServersByID(		/* access=OPEN */
		[in] handle_t h,			/* provider_version(1) */
		[in] afsHyper *Volid, 
		[in] unsigned32 voltype,
		[in] unsigned32 startHere,
		[out] unsigned32 *nextStartP,
		[out] compactvldbentry *entry,
		[out] unsigned32 *flagsP
	);

	error_status_t VL_GetCNextServersByName (	/* access=OPEN */
		[in] handle_t h,			/* provider_version(1) */
		[in] volumeName volName,
		[in] unsigned32 startHere,
		[out] unsigned32 *nextStartP,
		[out] compactvldbentry *entry,
		[out] unsigned32 *flagsP
	);

	error_status_t VL_ExpandSiteCookie (		/* access=OPEN */
		[in] handle_t h,			/* provider_version(1) */
		[in] unsigned32 Cookie,
		[out] siteDesc *FullSiteInfo
	);

	error_status_t VL_GetServerInterfaces (		/* access=OPEN */
		[in] handle_t h,			/* provider_version(1) */
		[in, out] dfs_interfaceList *serverInterfacesP
	);

}

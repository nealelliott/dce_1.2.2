/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: scal.idl,v $
 * Revision 1.1.4.2  1996/03/11  02:27:42  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  19:59:50  marty]
 *
 * Revision 1.1.4.1  1995/12/11  20:09:41  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:44:48  root]
 * 
 * Revision 1.1.2.4  1993/01/25  19:27:44  bbelch
 * 	Fix duplicate log
 * 	[1993/01/25  17:43:56  bbelch]
 * 
 * Revision 1.1.2.3  1993/01/11  23:39:39  bbelch
 * 	Embedding copyright notice
 * 	[1993/01/06  18:13:00  bbelch]
 * 
 * Revision 1.1.2.2  1992/10/12  17:28:55  cuti
 * 	Remove hardcoded protocol seq and endpoint instead using all_protoseq.
 * 	[1992/10/09  21:18:47  cuti]
 * 
 * Revision 1.1  1992/01/19  03:36:50  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/*
#
#
# Copyright (c) 1991 by
#    Hewlett-Packard Company, Palo Alto, Ca.
#
# Permission to use, copy, modify, and distribute this
# software and its documentation for any purpose and without
# fee is hereby granted, provided that the above copyright
# notice appear in all copies and that both that copyright
# notice and this permission notice appear in supporting
# documentation, and that the name of Hewlett-Packard Company not
# be used in advertising or publicity pertaining to distribution
# of the software without specific, written prior permission.
# Hewlett-Packard Company makes no representations about the
# suitability of this software for any purpose.  It is provided
# "as is" without express or implied warranty.
#
#
# DCE API Test
#
*/



[uuid(3fb4f09c-b000-0000-0d00-018ed9000000),
 version(2)
]

interface scalartest {

/*
 * s c a l a r t e s t
 *
 * Interface for testing correctness of a nidl compiler's marshalling,
 * unmarshalling, and conversion of scalar types.
 */

/*
 * s c a l a r t e s t _ o p 1
 * send a small integer; receive it back incremented by 1
 */
void scalartest_op1(
    [in] handle_t h,
    [in] small int i,
    [out] small int *o
    );

/*
 * s c a l a r t e s t _ o p 2
 * send an unsigned small integer; receive it back incremented by 1
 */
void scalartest_op2(
    [in] handle_t h,
    [in] unsigned small int i,
    [out] unsigned small int *o
    );

/*
 * s c a l a r t e s t _ o p 3
 * send a short integer; receive it back incremented by 1
 */
void scalartest_op3(
    [in] handle_t h,
    [in] short int i,
    [out] short int *o
    );

/*
 * s c a l a r t e s t _ o p 4
 * send an unsigned short integer; receive it back incremented by 1
 */
void scalartest_op4(
    [in] handle_t h,
    [in] unsigned short i,
    [out] unsigned short int *o
    );

/*
 * s c a l a r t e s t _ o p 5
 * send a long integer; receive it back incremented by 1
 */
void scalartest_op5(
    [in] handle_t h,
    [in] long int i,
    [out] long int *o
    );

/*
 * s c a l a r t e s t _ o p 6
 * send an unsigned long integer; receive it back incremented by 1
 */
void scalartest_op6(
    [in] handle_t h,
    [in] unsigned long int i,
    [out] unsigned long int *o
    );

/*
 * s c a l a r t e s t _ o p 7
 * send a hyper integer; receive it back incremented by 1
 */
void scalartest_op7(
    [in] handle_t h,
    [in] hyper int i,
    [out] hyper int *o
    );

/*
 * s c a l a r t e s t _ o p 8
 * send an unsigned hyper integer; receive it back incremented by 1
 */
void scalartest_op8(
    [in] handle_t h,
    [in] unsigned hyper int i,
    [out] unsigned hyper int *o
    );

/*
 * s c a l a r t e s t _ o p 9
 * send a boolean; receive it back negated
 */
void scalartest_op9(
    [in] handle_t h,
    [in] boolean i,
    [out] boolean *o
    );

/*
 * s c a l a r t e s t _ o p 1 0
 * send a byte; receive it back inverted
 */
void scalartest_op10(
    [in] handle_t h,
    [in] byte i,
    [out] byte *o
    );

/*
 * s c a l a r t e s t _ o p 1 1
 * send a float; receive it back squared
 */
void scalartest_op11(
    [in] handle_t h,
    [in] float i,
    [out] float *o
    );

/*
 * s c a l a r t e s t _ o p 1 2
 * send a double; receive it back squared
 */
void scalartest_op12(
    [in] handle_t h,
    [in] double i,
    [out] double *o
    );

/*
 * s c a l a r t e s t _ o p 1 3
 * send an char;
 * receive it back case reversed if alphabetic, unchanged otherwise
 */
void scalartest_op13(
    [in] handle_t h,
    [in] char i,
    [out] char *o
    );

}

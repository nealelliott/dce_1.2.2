/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: rec.idl,v $
 * Revision 1.1.4.2  1996/03/11  02:27:33  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  19:59:47  marty]
 *
 * Revision 1.1.4.1  1995/12/11  20:09:05  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:44:36  root]
 * 
 * Revision 1.1.2.4  1993/01/25  19:27:10  bbelch
 * 	Fix duplicate log
 * 	[1993/01/25  17:43:12  bbelch]
 * 
 * Revision 1.1.2.3  1993/01/11  23:38:59  bbelch
 * 	Embedding copyright notice
 * 	[1993/01/06  18:12:09  bbelch]
 * 
 * Revision 1.1.2.2  1992/10/12  17:19:23  cuti
 * 	Remove hardcoded protocol seq and endpoint instead using all_protoseq.
 * 	[1992/10/09  20:25:12  cuti]
 * 
 * Revision 1.1  1992/01/19  03:36:34  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/*
#
#
# Copyright (c) 1991 by
#    Hewlett-Packard Company, Palo Alto, Ca.
#
# Permission to use, copy, modify, and distribute this
# software and its documentation for any purpose and without
# fee is hereby granted, provided that the above copyright
# notice appear in all copies and that both that copyright
# notice and this permission notice appear in supporting
# documentation, and that the name of Hewlett-Packard Company not
# be used in advertising or publicity pertaining to distribution
# of the software without specific, written prior permission.
# Hewlett-Packard Company makes no representations about the
# suitability of this software for any purpose.  It is provided
# "as is" without express or implied warranty.
#
#
# DCE API Test
#
*/



[uuid(41248a48-7000-0000-0d00-00c366000000),
 version(2)
]

/*
 * r e c o r d t e s t
 *
 * Interface to test nidl's handling of record types.
 */

interface recordtest {

typedef struct {
    long int f1;
} recordtest_t1;

typedef struct {
    long int f1;
    long int f2;
} recordtest_t2;

const long int recordtest_c1 = 100;

typedef struct {
    long int f1[recordtest_c1];
} recordtest_t3;

typedef struct {
    long int f1, f2;
    [last_is(f1), max_is(f2)] long int f3[];
} recordtest_t4;

typedef struct {
    recordtest_t1 f1;
    recordtest_t3 f2;
} recordtest_t5;


/*
 * r e c o r d t e s t _ o p 1
 */
void recordtest_op1(
    [in] handle_t h,
    [in] recordtest_t1 i,
    [out] recordtest_t1 *o
);

/*
 * r e c o r d t e s t _ o p 2
 */
void recordtest_op2(
    [in] handle_t h,
    [in, out] recordtest_t2 *io
);

/*
 * r e c o r d t e s t _ o p 3
 */
void recordtest_op3(
    [in] handle_t h,
    [in] recordtest_t3 i,
    [out] recordtest_t3 *o
);

const long int recordtest_c2 = 10;

/*
 * r e c o r d t e s t _ o p 4
 */
void recordtest_op4(
    [in] handle_t h,
    [in] recordtest_t4 *i,
    [in, out] recordtest_t4 *o
);

/*
 * r e c o r d t e s t _ o p 5
 */
void recordtest_op5(
    [in] handle_t h,
    [in] recordtest_t5 i,
    [out] recordtest_t5 *o
);

}

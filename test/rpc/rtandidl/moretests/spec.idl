/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: spec.idl,v $
 * Revision 1.1.4.2  1996/03/11  02:27:44  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  19:59:51  marty]
 *
 * Revision 1.1.4.1  1995/12/11  20:10:17  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:45:06  root]
 * 
 * Revision 1.1.2.4  1993/01/25  19:28:05  bbelch
 * 	Fix duplicate log
 * 	[1993/01/25  17:44:22  bbelch]
 * 
 * Revision 1.1.2.3  1993/01/11  23:40:22  bbelch
 * 	Embedding copyright notice
 * 	[1993/01/06  18:14:01  bbelch]
 * 
 * Revision 1.1.2.2  1992/10/12  17:35:28  cuti
 * 	Remove hardcoded protocol seq and endpoint instead using all_protoseq.
 * 	[1992/10/09  21:23:33  cuti]
 * 
 * Revision 1.1  1992/01/19  03:37:03  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/*
#
#
# Copyright (c) 1991 by
#    Hewlett-Packard Company, Palo Alto, Ca.
#
# Permission to use, copy, modify, and distribute this
# software and its documentation for any purpose and without
# fee is hereby granted, provided that the above copyright
# notice appear in all copies and that both that copyright
# notice and this permission notice appear in supporting
# documentation, and that the name of Hewlett-Packard Company not
# be used in advertising or publicity pertaining to distribution
# of the software without specific, written prior permission.
# Hewlett-Packard Company makes no representations about the
# suitability of this software for any purpose.  It is provided
# "as is" without express or implied warranty.
#
#
# DCE API Test
#
*/



/*
 * S P E C I A L T E S T
 *
 * Interface for testing correctness of a nidl compiler's behavior
 * in special cases.
 */

[uuid(40c9490f-7000-0000-0d00-00c366000000),
 version(2)
]

interface specialtest {

typedef struct {
    long int a;
    long int b;
} specialtest_t1;

/*
 * s p e c i a l t e s t _ o p 1
 *
 * a minimal operation - no marshalled ins or outs
 */
void specialtest_op1(
    [in] handle_t h
);

/*
 * s p e c i a l t e s t _ o p 2
 *
 * a different minimal operation - no marshalled ins or outs
 */
void specialtest_op2(
    [in] handle_t h
);

/*
 * s p e c i a l t e s t _ o p 3
 *
 *  returns true iff op1 has been called since op2 was last called
 */
boolean specialtest_op3(
    [in] handle_t h
);

/*
 * s p e c i a l t e s t _ o p 4
 *
 * an operation with multiple out open parameters which signals an exception;
 * this tests whether allocated storage on the server side is freed 
 * when an exception occurs
 */
void specialtest_op4(
    [in] handle_t h,
    [out, last_is(*l), max_is(m)] specialtest_t1  i1[],
    [out, last_is(*l), max_is(m)] specialtest_t1  i2[],
    [out, last_is(*l), max_is(m)] specialtest_t1  i3[],
    [in, out] long int *l,
    [in] long int m
);


}



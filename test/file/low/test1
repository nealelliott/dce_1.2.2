#!/bin/sh
#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
#
# HISTORY
# $Log: test1,v $
# Revision 1.1.11.1  1996/10/17  18:30:16  damon
# 	Submitting on behalf of Transarc
# 	[1996/10/17  16:55:12  damon]
#
# Revision 1.1.5.5  1993/01/11  18:35:42  htf
# 	Embedded copyright notice
# 	[1993/01/11  17:18:13  htf]
# 
# Revision 1.1.5.4  1992/10/28  18:14:36  jaffe
# 	Transarc delta: fred-ot5472-use-testhome-variable 1.1
# 	  Selected comments:
# 	    Fixed the fs and low tests to correctly use TESTTOP.  We were setting a
# 	    variable, testhome, as the location for the test scripts and executables,
# 	    but we did not use it to execute C programs.
# 	    (I checked out some scripts which did not need this change.)
# 	    Use testhome when referencing C executables.
# 	Transarc delta: jess-add-dumpkernel-in-low-tests 1.5
# 	  Selected comments:
# 	    Add function call (icl_DumpKernel) in the test suite. In case of running
# 	    error of C programmes in the test suite the "icl_DumpKernel" function
# 	    will be called in errex() to do the kernel trace. The dump file is located
# 	    in "/tmp/prog#.kernel.dump.pid". You have to have the debug flag set to
# 	    have the dump file.
# 	    See above.
# 	    Put a note about the dump file in the begining of the file.
# 	    Process another C file and add "low" as dump file header.
# 	    Turn on the prog3 debug flags.
# 	    It should not create the zero length dumpfile when there is nothing wrong.
# 	Transarc delta: jess-ot5320-fix-fs-low-testhome 1.1
# 	  Selected comments:
# 	    The fs and low test shell scripts have the following if statement
# 	    if [ "$TESTTOP" = "`pwd`" ]
# 	    then
# 	    UTIL_DIR=../util
# 	    testhome=$TESTTOP
# 	    else
# 	    UTIL_DIR=$TESTTOP/util
# 	    testhome=$TESTTOP/$testSuiteType
# 	    fi
# 	    The problem is that variable testSuiteType is not defined at this time.
# 	    See above.
# 	[1992/10/28  14:47:05  jaffe]
# 
# Revision 1.1.5.3  1992/09/25  17:25:00  jaffe
# 	Transarc delta: jess-ot5196-low-test-err-redirection 1.1
# 	  Selected comments:
# 	    Redirect stderr to stdout from running programs of low/tests
# 	    Put 2>&1 at end of cprog call line.
# 	[1992/09/24  12:49:08  jaffe]
# 
# Revision 1.1.5.2  1992/08/28  18:16:50  jaffe
# 	Transarc delta: mcinerny-fix-merge-makefile-refs-wrong-files 1.5
# 	  Selected comments:
# 	    (see below)
# 	    Couple of typos
# 	    Couple of minor changes to get tests running more smoothly.
# 	    Remove reference to `sys`, since that's an AFS-ism only.
# 	    oops!  watch those sub-shells....
# 	Transarc delta: rajesh-clean-low-tests 1.5
# 	  Selected comments:
# 	    To remove make and clean options from the low test suite. To change
# 	    the scripts to use common shell functions. To create a file
# 	    fs_functionsScript with the common shell functions in the util
# 	    directory.
# 	    To remove make and clean options. To change the scripts to use common
# 	    shell functions from util/fs_functionsScript instead of inline code.
# 	    Modify scripts to follow coding standards, simplify the code, increase
# 	    readability etc.
# 	    Change variable names used in the test scripts to follow coding standards.
# 	    The check for existence of half_meg should be done even if 16_bytes does
# 	    not exist.
# 	    More of above.
# 	    Modify the tests to give them a simpler logical structure, modularity,
# 	    readability ( one command per line) and to change then to use the
# 	    common function created earlier.
# 	    See above.
# 	    Modification of rtest1 and rtest2 to use the utility functions
# 	    correctly.
# 	[1992/08/28  12:33:22  jaffe]
# 
# Revision 1.1.2.4  1992/06/18  18:54:37  jaffe
# 	Transarc delta: fred-3925-remove-make 1.1
# 	  Selected comments:
# 	    Removed -make option.  Data files are now automatically generated when
# 	    the test is run.
# 	[1992/06/18  18:45:15  jaffe]
# 
# 	Transarc delta: fred-3925-remove-make 1.1
# 	  Selected comments:
# 	    Removed -make option.  Data files are now automatically generated when
# 	    the test is run.
# 	[1992/06/18  18:18:30  jaffe]
# 
# Revision 1.1.2.3  1992/05/29  22:59:57  mason
# 	Transarc delta: fred-3754-change-script-name 1.1
# 	  Selected comments:
# 	    To clean up a number of defects with the tests.  In addition to defect
# 	    3754, the changes also fix defects 3750 and 3748.
# 	    Fixed setting of TESTTOP variable.
# 	[1992/05/29  12:53:12  mason]
# 
# Revision 1.1.2.2  1992/05/21  12:49:42  jaffe
# 	Transarc delta: fred-merge-tests 1.1
# 	  Selected comments:
# 	    Created this delta to merge Phil Hirsch's final DFS test code changes with
# 	    the test code that the OSF had.  Hopefully, this means we and the OSF
# 	    should be looking at the same test code.
# 	    Changes to facilitate merge of local DFS test code with the OSF's.
# 	Transarc delta: fred-remove-sys 1.1
# 	  Selected comments:
# 	    To remove dependency on the AFS sys command in the test scripts.
# 	    To remove dependency on AFS sys command.
# 
# 	$TALog: test1,v $
# 	Revision 4.28  1994/11/01  22:32:14  cfe
# 	Bring over the changes that the OSF made in going from their DCE 1.0.3
# 	release to their DCE 1.1 release.
# 	[from r4.27 by delta cfe-db6109-merge-1.0.3-to-1.1-diffs, r1.1]
# 
# 	[1992/05/20  20:49:56  jaffe]
# 
# $EndLog$
#
###############################################################################
#    Copyright (C) 1990, 1992 Transarc Corporation - All rights reserved      #
###############################################################################

# This script runs a C program which performs a variety of basic I/O operations
# on both large and small data files.

# In case of error the C program will dump the kernel data into
# a file "/tmp/prog#.kernel.dump.pid" if the debug flag is on.


# Usage: test1 

###############################################################################

#
# PrintUsage() -
#   Prints the usage message for this script.

PrintUsage()
{
    echo "$programName tests C I/O calls"
    echo "Usage: $programName"
}

#
# Initialise some variables. UTIL_DIR is the directory containing 
# the script fs_FunctionsScript with common functions.
#

TESTTOP=${TESTTOP:="`pwd`"}
if [ "$TESTTOP" = "`pwd`" ]
then
    UTIL_DIR=../util
    testhome=$TESTTOP
else
    UTIL_DIR=$TESTTOP/util
    testhome=$TESTTOP/low
fi

#
# Source script containing common functions
#
. $UTIL_DIR/fs_FunctionsScript

trap '
     cd $currentDir; rm -rf tdir.1.$$
     echo "$programName killed; returning 2" | tee -a $logFile; exit 2
     ' 2 3 15

#
# Initialise more variables
#

fs_InitSetup low

#
#  Parse the command line.
#
while [ "$1" != "" ] 
do
    case $1 in
        help|-help) PrintUsage;
                    exit $successExit
                    ;;
      
        *)          echo "$programName: invalid argument \"$1\"" | tee -a $logFile; 
                    exit $scriptErrExit
                    ;;
    esac
done

#
# Confirm existence of the C program binary used.
#

fs_CheckBinaryExistence $testhome/$cProgramName

#
# Generate data files if they are not present.
#

if [ ! -f 16_bytes ]
then  
    $UTIL_DIR/fs_GenerateFile '0123456789012345' 16 16_bytes 16
    fs_CheckFileSize 16_bytes 16 
    if [ $result -ne 0 ] 
    then
        echo "$programName: 16_bytes is the wrong size" | tee -a $logFile; 
        exit 2
    fi
fi

if [ ! -f half_meg ]
then 
     half_megLength=`expr 1024 \* 1024`
     half_megLength=`expr $half_megLength / 2`
     $UTIL_DIR/fs_GenerateFile \
        -nl 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.' 63 half_meg $half_megLength
     fs_CheckFileSize half_meg 524288   
     if [ $result -ne 0 ] 
     then 
         echo "$programName: half_meg is the wrong size" | tee -a $logFile; 
        exit 2
     fi
fi

#
# Start test
#

(echo "$programName (io_test) starting in $currentDir"; 
echo "Host `hostname` ($fs_sysName)"; date) | tee -a $logFile
fs_DetermineFSType
mkdir tdir.1.$$; cd tdir.1.$$
ln -s ../16_bytes ../half_meg .
touch ls.final; ls -F > ls.init

$testhome/$cProgramName > $programName.out 2>&1
errorCount=$? 
cat $programName.out | tee -a $logFile; 
rm -f $programName.out

ls -F > ls.final
diff ls.init ls.final > /dev/null
if test $? -ne 0
then 
    echo "$programName ERROR: initial and final ls's are different" \
	| tee -a $logFile; 
    errorCount=1
fi

###############################################################################

#
# Remove temporary file created by the test. (Previously done in -clean option)
#
(
    echo "$programName cleaning up" ; 
    date 
) | tee -a $logFile
rm -f temp[0-9]* $programName.out ls.init ls.final
cd $currentDir; rm -rf tdir.1.$$

(
    echo ""; 
    echo "$testSuiteType/$programName returning $errorCount in $currentDir";
    date
) | tee -a $logFile


exit $errorCount

###############################################################################

/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: ichar1.idl,v $
 * Revision 1.1.4.2  1996/03/11  02:14:10  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  19:53:27  marty]
 *
 * Revision 1.1.4.1  1995/12/11  20:06:55  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:32:01  root]
 * 
 * Revision 1.1.2.2  1993/08/11  16:25:55  ganni
 * 	tests for new IDL functionality
 * 	[1993/08/11  16:14:10  ganni]
 * 
 * $EndLog$
 */
/*
*/
[
uuid(555A2F6A-5093-11CC-871C-08002B107359),
version(0.0)
]
interface ichar1
{
    const long FA_SIZE = 26;

    typedef byte my_byte;

    void op0( [in] unsigned long s,
              [in] unsigned long dr,
              [out] unsigned long *p_r,
              [in] unsigned long sz,
              [in, out] long *p_ln,
              [in, out, size_is(sz), length_is(*p_ln)] my_byte barr[] );

    boolean op1( [in] unsigned long s,
              [in] unsigned short sz,
              [in, size_is(sz)] my_byte barr[] );

    void op2( [out] unsigned long *p_r,
              [out] my_byte barr[FA_SIZE] );

    void op3( [in] unsigned long dr,
              [out] unsigned long *p_r,
              [out] unsigned small *p_ln,
              [out, length_is(*p_ln)] my_byte barr[FA_SIZE] );

    typedef struct open_t {
        long ln;
        unsigned long sz;
        [size_is(sz), length_is(ln)] my_byte barr[];
    } open_t;

    void op4( [in] unsigned long s,
              [in] unsigned long dr,
              [out] unsigned long *p_r,
              [in, out] open_t *p_o);

    typedef struct conf_t {
        short sz;
        [size_is(sz)] my_byte barr[];
    } conf_t;

    boolean op5( [in] unsigned long s,
              [in] conf_t *p_c);

    typedef struct fixed_t {
        my_byte barr[FA_SIZE];
    } fixed_t;

    void op6( [out] unsigned long *p_r,
              [out] fixed_t *p_f);

    typedef struct varying_t {
        small ln;
        [length_is(ln)] my_byte barr[FA_SIZE];
    } varying_t;

    void op7( [in] unsigned long dr,
              [out] unsigned long *p_r,
              [out] varying_t *p_v);
}

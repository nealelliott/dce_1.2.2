#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# HISTORY
# $Log: ftu_trace.et,v $
# Revision 1.1.21.1  1996/10/02  17:48:52  damon
# 	Newest DFS from Transarc
# 	[1996/10/01  18:38:38  damon]
#
# Revision 1.1.15.2  1994/06/09  14:09:20  annie
# 	fixed copyright in src/file
# 	[1994/06/09  13:23:59  annie]
# 
# Revision 1.1.15.1  1994/02/04  20:19:52  devsrc
# 	Merged from 1.0.3a to 1.1
# 	[1994/02/04  15:13:41  devsrc]
# 
# Revision 1.1.13.2  1993/12/07  20:32:20  jaffe
# 	Fixed Bad Comment leaders
# 	[1993/12/07  20:31:17  jaffe]
# 
# Revision 1.1.13.1  1993/12/07  17:25:48  jaffe
# 	New File from Transarc 1.0.3a
# 
# Revision 1.1.1.2  1993/12/02  21:07:24  jaffe
# 	New File from Transarc 1.0.3a
# 
# $EndLog$
#
# (C) Copyright Transarc Corporation 1993.  ALL RIGHTS RESERVED.
#

error_table 2 zfu
	ec FTU_TRACE_RCSID,
	"$Header: /u0/rcs_trees/dce/rcs/file/ftutil/ftu_trace.et,v 1.1.21.1 1996/10/02 17:48:52 damon Exp $"

	ec FTU_TRACE_ENTER_AGGR_GET_INFO,
	"ftu_AggrGetInfo(%lu, OUT <aggrInfoP>) entered"
	ec FTU_TRACE_EXIT_AGGR_GET_INFO,
	"ftu_AggrGetInfo returns %ld, *aggrInfoP = {%s, %s, %ld,"
	ec FTU_TRACE_EXIT_AGGR_GET_INFO2,
	"\t%ld, %ld, %ld}"

	ec FTU_TRACE_ENTER_AGGR_SYNC,
	"ftu_AggrSync(%lu, %d) entered"
	ec FTU_TRACE_EXIT_AGGR_SYNC,
	"ftu_AggrSync returns %ld"

	ec FTU_TRACE_ENTER_AGGR_CREATE_FSET_WITH_STATUS,
	"ftu_AggrCreateFsetWithStatus(%lu, %u,,%u, {..., %u,,%u, ..., %#lx"
	ec FTU_TRACE_ENTER_AGGR_CREATE_FSET_WITH_STATUS2,
	"\t..., %s, ...}, %#lx) entered"
	ec FTU_TRACE_EXIT_AGGR_CREATE_FSET_WITH_STATUS,
	"ftu_AggrCreateFsetWithStatus returns %ld"

	ec FTU_TRACE_ENTER_AGGR_OPEN_FSET,
	"ftu_AggrOpenFset(%lu, %u,,%u, %#lx,"
	ec FTU_TRACE_ENTER_AGGR_OPEN_FSET2,
	"\t%lu (%s), OUT <fsetDescP>) entered"
	ec FTU_TRACE_EXIT_AGGR_OPEN_FSET,
	"ftu_AggrOpenFset returns %ld, *fsetDescP = %ld"

	ec FTU_TRACE_ENTER_AGGR_CLOSE_FSET,
	"ftu_AggrCloseFset(%ld) entered"
	ec FTU_TRACE_EXIT_AGGR_CLOSE_FSET,
	"ftu_AggrCloseFset returns %ld"

	ec FTU_TRACE_ENTER_AGGR_ABORT_FSET_OPEN,
	"ftu_AggrAbortFsetOpen(%ld) entered"
	ec FTU_TRACE_EXIT_AGGR_ABORT_FSET_OPEN,
	"ftu_AggrAbortFsetOpen returns %ld"

	ec FTU_TRACE_ENTER_AGGR_ENUMERATE_FSETS,
	"ftu_AggrEnumerateFsets(%lu, INOUT *indexP = %u, %#lx, %u, OUT <numFsetsReturnedP>) entered"
	ec FTU_TRACE_EXIT_AGGR_ENUMERATE_FSETS,
	"ftu_AggrEnumerateFsets returns %ld, *indexP = %u, *numFsetsReturnedP = %u"

	ec FTU_TRACE_ENTER_AGGR_LOOKUP_FSET,
	"ftu_AggrLookupFset(%lu, %s, OUT <fsetIdP>) entered"
	ec FTU_TRACE_EXIT_AGGR_LOOKUP_FSET,
	"ftu_AggrLookupFset returns %ld, *fsetIdP = %u,,%u"
	ec FTU_TRACE_EXIT_AGGR_LOOKUP_FSET_WITHOUT_FSET_ID,
	"ftu_AggrLookupFset returns %ld"

	ec FTU_TRACE_ENTER_FSET_GET_STATUS,
	"ftu_FsetGetStatus(%ld, OUT <fsetStatusP>) entered"
	ec FTU_TRACE_EXIT_FSET_GET_STATUS,
	"ftu_FsetGetStatus returns %ld, *fsetStatusP = {%u,,%u, %u,,%u, ... %#lx,"
	ec FTU_TRACE_EXIT_FSET_GET_STATUS2,
	"\t%lu (%s), %lx, ..., %s}"

	ec FTU_TRACE_ENTER_FSET_SET_STATUS,
	"ftu_FsetSetStatus(%ld, %#lx, {%u,,%u, ... %#lx, ...}) entered"
	ec FTU_TRACE_EXIT_FSET_SET_STATUS,
	"ftu_FsetSetStatus returns %ld"

	ec FTU_TRACE_ENTER_FSET_BULK_SET_STATUS,
	"ftu_FsetBulkSetStatus(%u"
	ec FTU_TRACE_ENTER_FSET_BULK_SET_STATUS2,
	"\t, {%ld, %#lx, %u,,%u}"
	ec FTU_TRACE_ENTER_FSET_BULK_SET_STATUS3,
	") entered"
	ec FTU_TRACE_EXIT_FSET_BULK_SET_STATUS,
	"ftu_FsetBulkSetStatus returns %ld"

	ec FTU_TRACE_ENTER_FSET_PUSH_STATUS,
	"ftu_FsetPushStatus(%ld) entered"
	ec FTU_TRACE_EXIT_FSET_PUSH_STATUS,
	"ftu_FsetPushStatus returns %ld"

	ec FTU_TRACE_ENTER_FSET_SYNC,
	"ftu_FsetSync(%ld, %ld) entered"
	ec FTU_TRACE_EXIT_FSET_SYNC,
	"ftu_FsetSync returns %ld"

	ec FTU_TRACE_ENTER_FSET_CLONE,
	"ftu_FsetClone(%ld, %u,,%u, %s, %#lx) entered"
	ec FTU_TRACE_FSET_CLONE_BUMP_LIMIT,
	"ftu_FsetClone: Raising %s limit on fset %u,,%u to %u,,%u (was %u,,%u)"
	ec FTU_TRACE_FSET_CLONE_BOGUS_BACKING_ID,
	"ftu_FsetClone: Zeroing bogus back ID in fset %u,,%u (was %u,,%u)"
	ec FTU_TRACE_EXIT_FSET_CLONE,
	"ftu_FsetClone returns %ld"

	ec FTU_TRACE_ENTER_FSET_RECLONE,
	"ftu_FsetReclone(%ld) entered"
	ec FTU_TRACE_EXIT_FSET_RECLONE,
	"ftu_FsetReclone returns %ld"

	ec FTU_TRACE_ENTER_FSET_RECLONE_INTO,
	"ftu_FsetRecloneInto(%ld, %u,,%u) entered"
	ec FTU_TRACE_EXIT_FSET_RECLONE_INTO,
	"ftu_FsetRecloneInto returns %ld"

	ec FTU_TRACE_RECLONE_INTO_ADJACENT_FSET_BUMP_LIMIT,
	"RecloneIntoAdjacentFset: Raising %s limit on fset %u,,%u to %u,,%u (was %u,,%u)"

	ec FTU_TRACE_ENTER_DESTROY_FSET,
	"DestroyFset(%ld, %ld) entered"
	ec FTU_TRACE_DESTROY_FSET_BOGUS_BACKING_ID,
	"DestroyFset: Ignoring bogus back ID in fset %u,,%u (was %u,,%u)"
	ec FTU_TRACE_DESTROY_FSET_BOGUS_FWD_ID,
	"DestroyFset: Ignoring bogus fwd. ID in fset %u,,%u (was %u,,%u)"
	ec FTU_TRACE_DESTROY_FSET_BUMP_LIMIT,
	"DestroyFset: Raising %s limit on fset %u,,%u to %u,,%u (was %u,,%u)"
	ec FTU_TRACE_EXIT_DESTROY_FSET,
	"DestroyFset returns %ld"

	ec FTU_TRACE_ENTER_FSET_DUMP_TO_PIPE,
	"ftu_FsetDumpToPipe(%ld,"
	ec FTU_TRACE_ENTER_FSET_DUMP_TO_PIPE2,
	"\t{%#lx, {%lu, %lu}, %lu,,%lu},"
	ec FTU_TRACE_ENTER_FSET_DUMP_TO_PIPE3,
	"\t%#lx) entered"
	ec FTU_TRACE_EXIT_FSET_DUMP_TO_PIPE,
	"ftu_FsetDumpToPipe returns %ld"

	ec FTU_TRACE_ENTER_FSET_RESTORE_FROM_PIPE,
	"ftu_FsetRestoreFromPipe(%ld, %#lx, %#lx) entered"
	ec FTU_TRACE_EXIT_FSET_RESTORE_FROM_PIPE,
	"ftu_FsetRestoreFromPipe returns %ld"

	ec FTU_TRACE_ENTER_AGGR_SYSCALL,
	"ftu_AggrSyscall(%ld, %#lx, %#lx, %#lx"
	ec FTU_TRACE_ENTER_AGGR_SYSCALL2,
	"\t%#lx) entered"
	ec FTU_TRACE_EXIT_AGGR_SYSCALL,
	"ftu_AggrSyscall returns %ld"

	ec FTU_TRACE_ENTER_VOL_SYSCALL,
	"ftu_VolSyscall(%ld, %#lx, %#lx, %#lx,"
	ec FTU_TRACE_ENTER_VOL_SYSCALL2,
	"\t%#lx) entered"

	 # A newer version is defined below
	ec FTU_TRACE_EXIT_VOL_SYSCALL_OBSOLETE,
	"ftu_VolSyscall returns %ld"

	ec FTU_TRACE_FSET_CLONE_OPEN_FAILED,
	"ftu_FsetCloneWithKA: Failed to open (and thus destroy) %s (%u,,%u)"

	ec FTU_TRACE_VOLS_DUMP_VOLUME_EXCEPTION,
	"vols_DumpVolume: Caught exception: %s"

	ec FTU_TRACE_ENTER_FTUTIL_CLONE_PROC,
	"%s(%ld, %ld, %#lx,"
	ec FTU_TRACE_ENTER_FTUTIL_CLONE_PROC2,
	"\t%#lx, %#lx) entered"
	ec FTU_TRACE_EXIT_FTUTIL_CLONE_PROC,
	"%s returns %ld"

	ec FTU_TRACE_ENTER_FTUTIL_VOL_DEPLETE_AUX,
	"ftutil_VolDepleteAux(%ld, %#lx, %#lx, %#lx) entered"
	ec FTU_TRACE_EXIT_FTUTIL_VOL_DEPLETE_AUX,
	"ftutil_VolDepleteAux returns %ld"

	ec FTU_TRACE_ENTER_FSET_SWAP_IDS,
	"ftu_FsetSwapIds(%ld, %ld) entered"
	ec FTU_TRACE_EXIT_FSET_SWAP_IDS,
	"ftu_FsetSwapIds returns %ld"

	ec FTU_TRACE_EXIT_VOL_SYSCALL,
	"ftu_VolSyscall(%ld) returns %ld"

	ec FTU_TRACE_RESTORE_FAILED_SETACL,
	"vols_RestoreVnode: can't set acl type %d in vnode %d: error %d"
end

/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1994, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 */
/*
 * HISTORY
 * $Log: rs_attr_base.idl,v $
 * Revision 1.1.4.2  1996/03/09  23:28:22  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:43:50  marty]
 *
 * Revision 1.1.4.1  1995/12/08  17:33:53  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/08  16:55:22  root]
 * 
 * Revision 1.1.2.2  1994/06/17  18:42:26  devsrc
 * 	cr10872 - fix copyright
 * 	[1994/06/17  18:09:04  devsrc]
 * 
 * Revision 1.1.2.1  1994/03/02  17:55:18  hanfei
 * 	Initial ERA drop
 * 	[1994/02/18  19:19:48  hanfei]
 * 
 * $EndLog$
 */
/*
 * @OSF_COPYRIGHT@
 */
/*
** Copyright (c) Hewlett-Packard Company 1993, 1994
** Unpublished work. All Rights Reserved.
**
**      Registry Server Attributes base type definitions
**            security/idl/rs_attr_base.idl
*/
[
    uuid(113ed3fe-d305-11cc-9f17-080009353559)
]

interface rs_attr_base {

    import "dce/sec_attr_base.idl";

    /* r s _ a t t r _ c u r s o r _ t;
     *
     * Schema and Attribute scan cursor for interative
     * database operations.
     *	source - identifies the server that initialized the cursor.
     *	object - identifies the object upon which the operation
     *		is being performed.
     *		For schema i/f: object is named by schema_name.
     *		For attr i/f: object is named by component_name.
     *	list - (optional) identifies the list of entries to
     *		be operated upon.
     *		For schema i/f: not used.
     *		For attr i/f: attr_list_id for the object.
     *	entry - identifies the current entry for this operation.
     *		For schema i/f: sequential id of current schema entry.
     *		For attr i/f: list index of current attribute instance.
     *	num_entries_left - a hint at the number of entries not yet seen.
     *	valid - if set to `0', indicates uninitialized cursor.
     *		The server will set to `1' upon initialization.
     */
    typedef struct {
	uuid_t		source;
	unsigned32	object;
	unsigned32	list;
	unsigned32	entry;
	unsigned32	num_entries_left;
	boolean32	valid;
    } rs_attr_cursor_t;
}

/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: cover_top_pointer.idl,v $
 * Revision 1.1.4.2  1996/03/11  02:12:31  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  19:52:43  marty]
 *
 * Revision 1.1.4.1  1995/12/11  20:03:01  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:30:25  root]
 * 
 * Revision 1.1.2.2  1993/01/07  19:54:41  bbelch
 * 	Embedding copyright notice
 * 	[1993/01/06  13:32:35  bbelch]
 * 
 * Revision 1.1  1992/01/19  03:24:30  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/*
*/
[uuid(e8bb5d80-723b-11c9-b6a8-08002b0ecef1)]
interface cover_top_pointer
/*
 * Test to fill in some of the coverage gaps around toplevel pointers.
 */
{
long scalars
(
    /*
     * Note that at top-level, [ptr] is weaker than in the normal sense
     * since the value cannot change across a call.
     */
    [in] handle_t h,
    /*
     * The following parameter pairs have an [in,ref] value and an [in,out,ptr]
     * value equal to NULL.
     */
    [in]            char *          refch,
    [in,out,ptr]    char *          ptrch,
    [in]            float *         reffl,
    [in,out,ptr]    float *         ptrfl,
    /*
     * The following parameter pairs have an [in,ref] value and an [in,out,ptr]
     * value that will be point to storage equal to the [in] value both ways.
     */
    [in]            small *         refsm,
    [in,out,ptr]    small *         ptrsm,
    [in]            unsigned long * refulo,
    [in,out,ptr]    unsigned long * ptrulo,
    /*
     * The following parameter pairs have an [in,ref] value and an [in,out,ptr]
     * value that will be point to storage equal to the [in] value on the way
     * on the way in and equal to a multiple of the [in] value on the way out.
     */
    [in]            unsigned small *refusm,
    [in,out,ptr]    unsigned small *ptrusm,
    [in]            long *          reflo,
    [in,out,ptr]    long *          ptrlo,
    /*
     * The following parameter pairs have a NULL [in] value and an
     * [in,out] value that doesn't change across the call.
     */
    [in,ptr]        boolean *       ptrbo,
    [in,out]        boolean *       refbo,
    [in,ptr]        unsigned hyper *ptruhy,
    [in,out]        unsigned hyper *refuhy,
    [in,ptr]        double *        ptrdo,
    [in,out]        double *        refdo,
    /*
     * The following parameter pairs have a non-NULL [in] value and an
     * [in,out] value that changes across the call.
     */
    [in,ptr]        byte *          ptrby,
    [in,out]        byte *          refby,
    [in,ptr]        unsigned short *ptrush,
    [in,out]        unsigned short *refush,
    [in,ptr]        hyper *         ptrhy,
    [in,out]        hyper *         refhy
);
}

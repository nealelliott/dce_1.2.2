#!/bin/ksh
# 
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
#  
#
# HISTORY
# $Log: dceseacl,v $
# Revision 1.1.14.2  1996/03/11  02:47:20  marty
# 	Update OSF copyright years
# 	[1996/03/10  20:08:42  marty]
#
# Revision 1.1.14.1  1995/12/11  22:44:34  root
# 	Submit OSF/DCE 1.2.1
# 
# 	HP revision /main/HPDCE02/jrr_1.2_mothra/1  1995/11/29  20:05 UTC  bell_d
# 	Merge in many changes done by others - looping now inserted in this test,  additions for USE_ERA or not,
# 	standardize RUN_TIME as variable for setting elapsed time.
# 
# 	HP revision /main/HPDCE02/3  1994/10/12  20:10 UTC  bissen
# 	Merge Hpdce02_04 to HPDCE02 branch
# 	[1995/12/11  22:21:07  root]
# 
# Revision 1.1.12.7  1994/10/06  19:51:19  hester
# 	botched previous submission; missed updates
# 	[1994/10/06  15:15:50  hester]
# 
# Revision 1.1.12.6  1994/10/05  21:46:32  hester
# 	fixed attr name for group modify
# 	[1994/10/05  21:41:58  hester]
# 
# Revision 1.1.12.5  1994/10/05  21:00:41  hester
# 	final updates for eraobj001 acl test
# 	[1994/10/05  20:58:19  hester]
# 
# Revision 1.1.12.4  1994/09/24  17:28:45  hester
# 	removed attempt to modify ERA instance acl
# 	[1994/09/24  17:24:14  hester]
# 
# 	updates to fully qualified schema names, latest dcecp syntax
# 	[1994/09/23  19:44:40  hester]
# 
# Revision 1.1.12.3  1994/08/25  21:09:36  hester
# 	updates to xattrschema and latest dcecp functionality
# 	[1994/08/25  20:13:15  hester]
# 
# 	HP revision /main/HPDCE02/2  1994/08/23  14:37 UTC  bissen
# 	Merge from Hpdce02_01
# 
# Revision 1.1.12.2  1994/07/22  17:30:46  hester
# 	minor cleanup of syntax, etc.
# 	[1994/06/30  16:19:48  hester]
# 
# 	fix syntax errors
# 	[1994/06/29  22:55:03  hester]
# 
# 	first rev of updates for ERA tests
# 	[1994/06/28  18:49:20  hester]
# 
# 	HP revision /main/HPDCE02/1  1994/07/01  17:08 UTC  bissen
# 	Merge hpdce02 (DCE 1.1 beta) and HPDCE01 into HPDCE02
# 
# Revision 1.1.12.1  1994/03/10  22:38:04  pellis
# 	Fixed defect 10119, test will now say failed when errors occur.
# 	[1994/03/10  22:37:46  pellis]
# 
# 	HP revision /main/HPDCE01/1  1994/01/28  16:23  bissen
# 	merge kk and hpdce01
# 
# Revision 1.1.7.5  1993/09/22  13:05:56  bissen
# 	Set MYDIR to /tmp
# 	[1993/09/20  18:14:35  bissen]
# 
# Revision 1.1.7.4  1993/09/10  13:04:00  bissen
# 	Changed to run single loop
# 	[1993/09/09  18:25:29  bissen]
# 
# Revision 1.1.7.3  1993/09/02  20:33:01  giza
# 	updated from DTM tree
# 	[1993/09/01  19:11:36  giza]
# 
# Revision 1.1.7.2  1993/07/09  14:09:54  root
# 	Initial King Kong branch
# 	[1993/07/09  14:09:13  root]
# 
# Revision 1.1.5.4  1993/04/28  18:54:01  eheller
# 
# 	Correcting submit problem
# 	[1993/09/01  18:34:53  cmckeen]
# 
# Revision 1.1.10.2  1993/09/01  17:59:13  cmckeen
# 	Made minor fixes.
# 
# Revision 1.1.10.1  1993/08/30  20:54:26  qbarry
# 	Has time loops removed plus Cindy's org/group change.  Runs on 2 HP cell.
# 	[1993/08/30  20:53:51  qbarry]
# 
# Revision 1.1.6.5  1993/08/13  18:48:35  cmckeen
# 	Changes made to reflect the new install tree.
# 	[1993/08/13  18:20:46  cmckeen]
# 
# Revision 1.1.6.4  1993/08/11  17:43:12  pellis
# 	Merged with final version of test from DCE 1.0.2.
# 	[1993/08/11  17:38:27  pellis]
# 
# Revision 1.1.6.3  1993/08/02  17:31:23  cmckeen
# 	 Changes made to reflect the new install tree
# 	[1993/08/02  17:17:13  cmckeen]
# 
# Revision 1.1.6.2  1993/07/28  19:55:35  cmckeen
# 	HP's TET'ized version of the system tests
# 	[1993/07/28  13:53:03  cmckeen]
# 
# 	Modified the MYDIR variable to generate the program
# 	generated clean script into another directory.
# 	[1993/06/16  17:23:18  eheller]
# 
# 	Fixed due to ode merge failure
# 	[1993/06/01  20:48:53  eheller]
# 
# 	Tet'ified file for reference platform tests
# 	[1993/05/28  16:02:14  eheller]
# 
# 	*** empty log message ***
# 	[1993/04/28  18:51:57  eheller]
# 
# Revision 1.1.5.3  1993/04/23  13:50:53  eheller
# 	"Merged time looping changes"
# 	[1993/04/23  13:21:12  eheller]
# 
# Revision 1.1.5.2  1993/03/31  12:53:49  mgm
# 	Initial GAMERA branch
# 	[1993/03/31  12:53:49  mgm]
# 
# Revision 1.1.3.5  1993/02/02  14:21:08  mgm
# 	Replaced remove_KRB5CCNAME with kdestroy
# 	[1993/02/02  14:17:41  mgm]
# 
# Revision 1.1.3.4  1992/11/30  12:39:53  mgm
# 	Changed std out of "grep $HOST $MYDIR/clean_acl 2> /dev/null" to
# 	/dev/null instead of screen
# 	[1992/11/30  12:39:15  mgm]
# 
# Revision 1.1.3.3  1992/11/03  13:45:19  mgm
# 	Updated for TET
# 	[1992/11/03  13:44:45  mgm]
# 
# 	*** empty log message ***
# 	[1992/05/21  22:21:57  eperkins]
# 
# Revision 1.1.3.2  1992/11/03  13:32:53  mgm
# 	Added TET changes
# 	Replaced dceseacl.main with dceseacl
# 	[1992/11/03  13:13:02  mgm]
# 
# Revision 1.1.3.2  1992/07/24  14:21:17  macgregor_m
# 	Changed to /bin/ksh
# 	[1992/07/24  14:20:36  macgregor_m]
# 
# Revision 1.1.1.2  1992/06/16  03:10:41  root
# 	    Loading drop Dce1_0_1b19
# 
# $EndLog$
# TEST_NAME:  dceseacl
#
# COMPONENT_NAME:  dce.systest
#
# FILE:  dceseacl.data
#        sec.functions
#
# DESCRIPTION:
#       To stress the ACL manager via lots if access requests.
#       Create a  special account sead"hostname" that have the permission "c"
#	in the test object whose ACL is being change.
#	Create two accounts, se"hostname"0 and se"hostname"1.
#	Account se"hostname"0 is used to test permission to create principal,
#	group, organization, and account (se"hostname"prin, se"hostname"group,
#	se"hostname"org, and se"hostname"prin respectively).
#	Account se"hostname"1 used all the objects created by se"hostname"0 to
#	test the following ACLs permissions:
#		Permissions to change ACLs on registry objects.
#		Permissions to create principals, groups and organizations.
#		Permissions to add and delete members of group.
#		Permissions to add and delete members of organization.
#		Permissions to create accounts.
#		Permissions to change a principal's, group's, and organization's
#		fullname.
#		Permissions to change management information for principal,
#		group, and organization.
#		Permissions to change management, authentication, and user
#		information for accounts.
#		Permissions to change authentication and management information
#		for registry policies and properties.
#		Permissions to delete accounts.
#		Permissions to delete principals, groups and organizations.
#	Also, verify invalid ACL Entry Types and Permissions for all Manager
#	Types.
#
# CHANGE HISTORY
# 4/3/92                       Initial design
#
# 6/30/92	Mary MacGregor	Changed /bin/sh to /bin/ksh.  
# 11/3/92	Mary MacGregor  Added TET changes
#				Replaced dceseacl.main with dceseacl
tet_startup="startup"
tet_cleanup="cleanup"
iclist="ic1"
ic1="run_test"

test_purp_list="run_test"

USE_ERA=${USE_ERA:-no}
if [ $USE_ERA = yes ]; then
	testname=ERAOBJ001
else
	testname=DCESEACL
fi #ERA

export testname USE_ERA

startup ()
{

        fail=0
	test_fail=0
        tet_infoline "Starting test $testname"

	# Use a feature of dce_login that allows authentication from a
	# shell script
        if [ -f /usr/bin/dce_login -a ! -f /usr/bin/dce_login_noexec ]
        then
                ln -s /usr/bin/dce_login /usr/bin/dce_login_noexec >/dev/null
        fi

	HOST=`hostname | cut -f1 -d.`  #Strip off TCP/IP domain
	export HOST

        MYDIR=$STTMPDIR
        export MYDIR

        echo "do p" > $MYDIR/clean_acl$HOST
        echo "del sead"$HOST"" >> $MYDIR/clean_acl$HOST
        echo "del se"$HOST"0" >> $MYDIR/clean_acl$HOST
        echo "del se"$HOST"1" >> $MYDIR/clean_acl$HOST
        echo "del se"$HOST"0prin" >> $MYDIR/clean_acl$HOST
        echo "do g" >> $MYDIR/clean_acl$HOST
        echo "del se"$HOST"g" >> $MYDIR/clean_acl$HOST
        echo "del se"$HOST"0group" >> $MYDIR/clean_acl$HOST
        echo "do o" >> $MYDIR/clean_acl$HOST
        echo "del se"$HOST"o" >> $MYDIR/clean_acl$HOST
        echo "del se"$HOST"0org" >> $MYDIR/clean_acl$HOST
        echo "q" >> $MYDIR/clean_acl$HOST

	chmod 777  $MYDIR/clean_acl$HOST

}

run_test()
{
        LOOP=1
        CURRENT_LOOP=1

        if [ -n "$RUNNING_TIME" ]
	then
           export RUN_TIME="$RUNNING_TIME"
	fi
        if [ -n "$RUN_TIME" ]
        then
                SECONDS_TO_EXECUTE=`awk "BEGIN { printf (\"%d\", 3600 * $RUN_TIME); exit; }"`
        fi

        SECONDS=0
        while [ $LOOP -eq 1 ]
        do
                if [ $CURRENT_LOOP -eq 1 ]
                then
                        fail=0
                        test_fail=0
                fi

                tet_infoline "starting iteration $CURRENT_LOOP"

		# Authenticate the cell
	 	dce_auth $PARENT_ACCOUNT $PARENT_PASSWD

		if [ $fail -ne 0 ]
		then
			del_test_purp
			return
		fi

		# Make sure that rgy_edit can be accessed as current user.
		tet_infoline "Attempting to access rgy_edit as current user."

		${RGY_EXEC} < /dev/null
		check_return "$?" "ERROR: ${RGY_EXEC} cannot be accessed by current user." \
				 	"Current user can access registry"
		if [ $fail -ne 0 ]
		then
			del_test_purp
			return
		fi

		# Verify the current state of registry. If not already exist, 
		# then create group, organization, principals, and accounts.

		verify_rgy $CLIENT_PREFIX

		if [ "$?" != 0 ] 
		then
			# Add group and organization
			add_group $SEC_GROUP "" #$SEC_GROUP_ID
			add_org $SEC_ORG "" #$SEC_ORG_ID
if [ $USE_ERA = yes ]; then
    if [ -f ./core ];then
	tet_infoline "Unknown core file found. Moved to /tmp/core.unknown"
	print "Unknown core file found. Moved to /tmp/core.unknown"
	mv ./core /tmp/core.unknown
    fi
		# Add attribute schema
		COMMENT="\"schema-added-by-cell_admin-for-test-PGOs\""
		add_schema ${A_ATTR_NAME} ${ATTR_ENCODING} \
			${UNIQUE_FLAG} ${MULTI_INSTANCED} ${RESERVED_FLAG} \
			${APPLY_DEFAULTS} ${INTERCELL_ACTION} ${TRIG_TYPE} \
			${COMMENT} "${ACLMGR_SET}"
    if [ -f ./core ];then
	tet_infoline "Core found after add_schema ${A_ATTR_NAME}"
	print "Core found after add_schema ${A_ATTR_NAME}"
	if [ ! -d /tmp/dceseacl ];then
	    mkdir /tmp/dceseacl
	fi
	mv ./core /tmp/dceseacl/core${A_ATTR_NAME}
    fi
fi 
			# Add special account that will be assign permissions to change ACLs on registry objects
			add_person $ADMIN_PRIN "" "none"
			add_account $ADMIN_PRIN $SEC_GROUP $SEC_ORG $SEC_LOGIN_PASSWD\
				$PARENT_PASSWD $VALID $SEC_HOME_DIR $SEC_SHELL

		 	if [ $fail -eq 0 ]
		 	then
				tet_infoline "SUCCESSFULLY added person, group, org and account to registry"
		 	else
				tet_infoline "FAILURE: in adding person, group, org or account to registry"
				test_fail=1
				fail=0
			fi

			# Setup permissions to change ACLs on Registry Objects for the special account
			tet_infoline "Setting up permissions to change ACLs for $ADMIN_PRIN"
			acl_edit /.:/sec/principal -m user:$ADMIN_PRIN:rc
			check_return "$?" "ERROR: Unable to assign permission for /sec/principal" \
					"Able to assign permission for /sec/principal"

			acl_edit /.:/sec/group -m user:$ADMIN_PRIN:rc
			check_return "$?" "ERROR: Unable to assign permission for /sec/group" \
					"Able to assign permission for /sec/group"

			acl_edit /.:/sec/org -m user:$ADMIN_PRIN:rc
			check_return "$?" "ERROR: Unable to assign permission for /sec/org" \
					"Able to assign permission for /sec/org"

			acl_edit /.:/sec/policy -m user:$ADMIN_PRIN:rc
			check_return "$?" "ERROR: Unable to assign permission for /sec/policy" \
					"Able to assign permission for /sec/policy"

if [ $USE_ERA = yes ]; then
		DCECP_CMD="acl modify /.:/sec/xattrschema -add {user $ADMIN_PRIN rc}" 
		dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
		check_return "$?" "ERROR: Unable to assign permission for /.:/sec/xattrschema" \
				"Able to assign permission for /.:/sec/xattrschema"
fi 

			acl_edit /.:/sec/group/$SEC_GROUP -m user:$ADMIN_PRIN:rc
			check_return "$?" "ERROR: Unable to assign permission for /sec/group/$SEC_GROUP" \
				"Able to assign permission for /sec/group/$SEC_GROUP"

			acl_edit /.:/sec/org/$SEC_ORG -m user:$ADMIN_PRIN:rc
			check_return "$?" "ERROR: Unable to assign permission for /sec/org/$SEC_ORG" \
				"Able to assign permission for /sec/org/$SEC_ORG"


			if [ $fail -eq 0 ]
			then
				tet_infoline "SUCCESSFULLY set up permissions to change acls for $ADMIN_PRIN"
			else
				tet_infoline "FAILURE: in setting up permissions to change acls for $ADMIN_PRIN"
				test_fail=1
				fail=0
			fi

			# Add valid accounts to registry
			SEC_PRIN_ID=0
			while [ "$SEC_PRIN_ID" -lt $SEC_NUM_USERS ] 
			do
				add_person $CLIENT_PREFIX$SEC_PRIN_ID "" "none" 
if [ $USE_ERA = yes ]; then
			#   Attach ERAs to each of the PGO
			#   Each principal gets one instance of the attr with a different value.
			#   Since attr is multi-valued the same attr gets added to the G and O
			#   with a different value each time.
			ATTR_VAL=`hostname`${SEC_PRIN_ID}"pval"
			add_attr principal $CLIENT_PREFIX$SEC_PRIN_ID ${A_ATTR_NAME} ${ATTR_VAL}
			ATTR_VAL=`hostname`${SEC_PRIN_ID}"gval"
			add_attr group $SEC_GROUP ${A_ATTR_NAME} ${ATTR_VAL}
			ATTR_VAL=`hostname`${SEC_PRIN_ID}"oval"
			add_attr organization $SEC_ORG ${A_ATTR_NAME} ${ATTR_VAL}
fi 
				add_account $CLIENT_PREFIX$SEC_PRIN_ID $SEC_GROUP\
					$SEC_ORG $SEC_LOGIN_PASSWD $PARENT_PASSWD \
					$VALID $SEC_HOME_DIR $SEC_SHELL
				SEC_PRIN_ID=`expr $SEC_PRIN_ID + 1`
			done
			if [ $fail -eq 0 ]
			then
				tet_infoline "SUCCESSFULLY added accounts to registry"
			else
				tet_infoline "ERROR: in adding accounts to registry"
				test_fail=1
		 	fi

		 	if [ $test_fail -eq 0 ]
		 	then
		       		tet_infoline "SUCCESSFULLY initialized registry in startup"
		 	else
		       		tet_infoline "FAILURE in startup...aborting test...can't initialize registry"
				del_test_purp
			# Remove authenticated tickets
				if [ -n "$KRB5CCNAME" ]; then kdestroy; fi
				return
		 	fi
		fi

		# Remove authenticated tickets
		if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

		ID=0
		ID1=1
		PRIN=$CLIENT_PREFIX

		create_pgo
		add_del_grp
		add_del_org
if [ $USE_ERA = yes ]; then
	add_del_attrs
fi
		add_act
		change_pgo
		change_mgmt
		chg_auth_act
		chg_auth_pol
if [ $USE_ERA = yes ]; then
	change_schema_and_attrs
fi
		test_acl_mgrs
		del_act
if [ $USE_ERA = yes ]; then
	del_schema
fi
		del_pgo

                CURRENT_LOOP=`expr $CURRENT_LOOP + 1`
                if [ -n "$LOOPS_TO_EXECUTE" ]
                then
                        if [ $CURRENT_LOOP -gt $LOOPS_TO_EXECUTE ]
                        then
                                LOOP=0
                        fi
                elif [ -n "$RUN_TIME" ]
                then
                        if [ "$SECONDS" -ge "$SECONDS_TO_EXECUTE" ]
                        then
                                LOOP=0
                        fi
                else
                        LOOP=0
                fi
	done
	num_loops=`expr $CURRENT_LOOP - 1`
	measure="minutes"
	minutes=`expr $SECONDS / 60`
	if [ $minutes -lt 2 ]
	then
    	  minutes=$SECONDS
  	  measure="seconds"
	fi
	tet_infoline "${testname} test ran for $num_loops loops/iterations in $minutes $measure"
	if [ $test_fail -eq 0 ]
	then
		tet_infoline "${testname} Passed"
		echo "${testname} Passed"
		tet_result PASS
	else
		tet_infoline "${testname} Failed"
		echo "${testname} Failed"
		tet_result DCE_ERROR
	fi
}	# end run_test

# Ensure test accounts are not left in the registry
cleanup ()
{
        tet_infoline "Cleaning up"
	fail=0
        dce_auth $PARENT_ACCOUNT $PARENT_PASSWD

	if [ $fail -eq 0 ]
	then
	        ${RGY_EXEC} < $MYDIR/clean_acl$HOST > /dev/null
	        # Remove authenticated tickets
		if [ -n "$KRB5CCNAME" ]; then kdestroy; fi
	else
		tet_infoline "FAILURE: Can't login to run cleanup...in cleanup"
	fi
	rm $MYDIR/clean_acl$HOST
}       # end cleanup

#==============================================================================
# Testing permissions to create principal, group, or organization 
#==============================================================================

create_pgo ()
{

        tet_infoline "Begin testing create prin, group, org in create_pgo()"
	tet_infoline "Testing permission to create principal"

	dce_auth $PRIN$ID $SEC_LOGIN_PASSWD

	# Attempting to add principal without permission
	add_neg_person $PRIN$ID"prin" "" "none"

	# Attempting to add group without permission
	add_neg_group $PRIN$ID"group" ""

	# Attempting to add organization without permission
	add_neg_org $PRIN$ID"org" ""

if [ $USE_ERA = yes ]; then
	# Attempting to add attribute schema without permission
	add_neg_schema /.:/sec/xattrschema/$PRIN$ID"attr-neg" ${ATTR_ENCODING} \
			${UNIQUE_FLAG} ${MULTI_INSTANCED} ${RESERVED_FLAG} \
			${APPLY_DEFAULTS} ${INTERCELL_ACTION} ${TRIG_TYPE} \
			${DFLT_COMMENT} "${ACLMGR_SET}" 
fi 

	# Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

	# Authenticate the cell by  the special account
	dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

	# Assign "i" permission for directory principal
	tet_infoline "Attempting to assign \"i\" permission in sec/prin for $PRIN$ID"
	acl_edit /.:/sec/principal -m user:$PRIN$ID:i
	check_return "$?" "ERROR: Unable to assign permission to $PRIN$ID" \
		"$PRIN$ID now HAS \"i\" permission in sec/prin"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell 
	dce_auth $PRIN$ID $SEC_LOGIN_PASSWD

	# Attempting to add person with "i" permission
	add_person $PRIN$ID"prin" "" "none"
        # Attempting to add group without permission
        add_neg_group $PRIN$ID"group" ""
        # Attempting to add organization without permission
        add_neg_org $PRIN$ID"org" ""

if [ $USE_ERA = yes ]; then
	# Attempting to add attribute schema without permission
	add_neg_schema /.:/sec/xattrschema/$PRIN$ID"attr-neg" ${ATTR_ENCODING} \
			${UNIQUE_FLAG} ${MULTI_INSTANCED} ${RESERVED_FLAG} \
			${APPLY_DEFAULTS} ${INTERCELL_ACTION} ${TRIG_TYPE} \
			${DFLT_COMMENT} "${ACLMGR_SET}" 
fi 

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY created principal"
        else
                tet_infoline "ERROR: in creating principal"
                test_fail=1
		fail=0
        fi

        tet_infoline "Testing permission to create group"

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove "i" permissions from sec/principal
        tet_infoline "Attempting to remove \"i\" permission from sec/principal for $PRIN$ID"
	acl_edit /.:/sec/principal -d user:$PRIN$ID
        check_return "$?" "ERROR: Unable to remove permission for $PRIN$ID" \
			"$PRIN$ID now DOESN'T HAVE \"i\" permission in sec/principal"

	# Assign "i" permission for directory group
        tet_infoline "Attempting to assign \"i\" permission in sec/group for $PRIN$ID"
        acl_edit /.:/sec/group -m user:$PRIN$ID:i
        check_return "$?" "ERROR: Unable to assign permission to $PRIN$ID" \
		"$PRIN$ID now HAS \"i\" permission in sec/group"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell 
        dce_auth $PRIN$ID $SEC_LOGIN_PASSWD

        # Attempting to add principal without permission
        add_neg_person $PRIN$ID"prin1" "" "none"

        # Attempting to add group with "i" permission
	add_group $PRIN$ID"group" ""

        # Attempting to add organization without permission
        add_neg_org $PRIN$ID"org" ""

if [ $USE_ERA = yes ]; then
	# Attempting to add attribute schema without permission
	add_neg_schema /.:/sec/xattrschema/$PRIN$ID"attr-neg" ${ATTR_ENCODING} \
			${UNIQUE_FLAG} ${MULTI_INSTANCED} ${RESERVED_FLAG} \
			${APPLY_DEFAULTS} ${INTERCELL_ACTION} ${TRIG_TYPE} \
			${DFLT_COMMENT} "${ACLMGR_SET}"
fi 

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY created group"
        else
                tet_infoline "ERROR: in creating group"
                test_fail=1
		fail=0
        fi

        tet_infoline "Testing permission to create organization"

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove "i" permissions from sec/group
        tet_infoline "Attempting to remove \"i\" permission from sec/group for $PRIN$ID"
        acl_edit /.:/sec/group -d user:$PRIN$ID
        check_return "$?" "ERROR: Unable to remove permission for $PRIN$ID" \
        		"$PRIN$ID now DOESN'T HAVE \"i\" permission in sec/principal"

        # Assign "i" permission for directory organization
        tet_infoline "Attempting to assign \"i\" permission in sec/org for $PRIN$ID"
        acl_edit /.:/sec/org -m user:$PRIN$ID:i
        check_return "$?" "ERROR: Unable to assign permission to $PRIN$ID" \
        		"$PRIN$ID now HAS \"i\" permission in sec/org"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID $SEC_LOGIN_PASSWD

        # Attempting to add group without permission
        add_neg_group $PRIN$ID"group1" ""

	# Attempting to add organization with "i" permission
	add_org  $PRIN$ID"org" ""

if [ $USE_ERA = yes ]; then
	# Attempting to add attribute schema without permission
	add_neg_schema /.:/sec/xattrschema/$PRIN$ID"attr-neg" ${ATTR_ENCODING} \
			${UNIQUE_FLAG} ${MULTI_INSTANCED} ${RESERVED_FLAG} \
			${APPLY_DEFAULTS} ${INTERCELL_ACTION} ${TRIG_TYPE} \
			${DFLT_COMMENT} "${ACLMGR_SET}"
fi

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY created organization"
        else
                tet_infoline "ERROR: in creating organization"
                test_fail=1
		fail=0
        fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove "i" permissions from sec/org
        tet_infoline "Attempting to remove \"i\" permission from sec/org for $PRIN$ID"
        acl_edit /.:/sec/org -d user:$PRIN$ID
        check_return "$?" "ERROR: Unable to remove permission for $PRIN$ID" "Able to remove permission for $PRIN$ID"

if [ $USE_ERA = yes ]; then
        # Assign "i" permission for directory schema
	DCECP_CMD="acl modify /.:/sec/xattrschema -add {user $PRIN$ID ri}" 
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign i permission to /.:/sec/xattrschema for $PRIN$ID" \
				"Able to assign i permission to /.:/sec/xattrschema for $PRIN$ID"
	
fi

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID $SEC_LOGIN_PASSWD

        # Attempting to add organization without permission
        add_neg_org $PRIN$ID"org1" ""

if [ $USE_ERA = yes ]; then
    if [ -f ./core ];then
        tet_infoline "Unknown core file found. Moved to /tmp/core.unknown"
        print "Unknown core file found. Moved to /tmp/core.unknown"
        mv ./core /tmp/core.unknown
    fi

	COMMENT="\"schema-added-by-${PRIN}${ID}-for-testing\""
	# Attempt to add attribute schema with "i" permission
	add_schema /.:/sec/xattrschema/$PRIN$ID"attr" ${ATTR_ENCODING} \
		${UNIQUE_FLAG} ${MULTI_INSTANCED} ${RESERVED_FLAG} \
		${APPLY_DEFAULTS} ${INTERCELL_ACTION} ${TRIG_TYPE} \
		${COMMENT} "${ACLMGR_SET}"
    if [ -f ./core ];then
        tet_infoline "Core found after add_schema /.:/sec/xattrschema/$PRIN$IDattr"
        print "Core found after add_schema /.:/sec/xattrschema/$PRIN$IDattr"
        if [ ! -d /tmp/dceseacl ];then
            mkdir /tmp/dceseacl
        fi
        mv ./core /tmp/dceseacl/core/.:/sec/xattrschema/$PRIN$IDattr
    fi

	
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY created schema"
        else
                tet_infoline "ERROR: in creating schema"
                test_fail=1
		fail=0
        fi
	
        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove permission for directory schema
	DCECP_CMD="acl modify /.:/sec/xattrschema -remove {user $PRIN$ID}" 
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to delete permission to /.:/sec/xattrschema for $PRIN$ID" \
				"Able to delete permission to /.:/sec/xattrschema for $PRIN$ID"
	
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID $SEC_LOGIN_PASSWD

	# Make sure can't add schema now that permissions are gone
	# Attempting to add attribute schema without permission
	add_neg_schema /.:/sec/xattrschema/$PRIN$ID"attr-neg" ${ATTR_ENCODING} \
			${UNIQUE_FLAG} ${MULTI_INSTANCED} ${RESERVED_FLAG} \
			${APPLY_DEFAULTS} ${INTERCELL_ACTION} ${TRIG_TYPE} \
			${DFLT_COMMENT} "${ACLMGR_SET}"
	
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

fi #ERA

	# Authenticate the cell by cell_admin
	dce_auth $PARENT_ACCOUNT $PARENT_PASSWD

        # Setup permissions to change ACLs on Registry Objects for the special account
	tet_infoline "Setting up permissions to change acls for $ADMIN_PRIN"
        acl_edit /.:/sec/principal/$PRIN$ID -m user:$ADMIN_PRIN:rc
        check_return "$?" "ERROR: Unable to assign permission for /sec/principal/$PRIN$ID" \
			"Able to assign permission for /sec/principal/$PRIN$ID"

        acl_edit /.:/sec/principal/$PRIN$ID"prin" -m user:$ADMIN_PRIN:rc
        check_return "$?" "ERROR: Unable to assign permission for /sec/principal/$PRIN$ID"prin"" \
			"Able to assign permission for /sec/principal/$PRIN$ID"prin""

        acl_edit /.:/sec/group/$PRIN$ID"group" -m user:$ADMIN_PRIN:rc
        check_return "$?" "ERROR: Unable to assign permission for /sec/group/$PRIN$ID"group"" \
			"Able to assign permission for /sec/group/$PRIN$ID"group""

        acl_edit /.:/sec/org/$PRIN$ID"org" -m user:$ADMIN_PRIN:rc
        check_return "$?" "ERROR: Unable to assign permission for /sec/org/$PRIN$ID"org"" \
			"Able to assign permission for /sec/org/$PRIN$ID"org""

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY set up permissions to change acls for $ADMIN_PRIN"
        else
                tet_infoline "ERROR: in setting up permissions to change acls for $ADMIN_PRIN"
                test_fail=1
		fail=0
        fi

        tet_infoline "Setting up permissions to change ACLs for $PRIN$ID1"

        acl_edit /.:/sec/principal/$ADMIN_PRIN -m user:$PRIN$ID1:rc

        if [ $? -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY set up permissions to change acls for $PRIN$ID1"
        else
                tet_infoline "ERROR: in setting up permissions to change acls for $PRIN$ID1"
                test_fail=1
        fi

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

	if [ $test_fail -eq 0 ]
        then
		tet_infoline "SUCCESSFULLY completed create_pgo()"
		tet_result PASS
        else
                tet_infoline "ERROR: in create_pgo()"
                tet_result DCE_ERROR
        fi

}	# end create_pgo
#==============================================================================
# Testing permissions to add and delete members of groups
#============================================================================== 

add_del_grp ()
{
	fail=0
	test_fail=0

	tet_infoline "Begin testing add/delete member of group in add_del_grp()"
        tet_infoline "Testing permission to add member of group"

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	# Attempting to add member to group without permissions
	add_neg_to_group_or_org -g $PRIN$ID"group" $PRIN$ID"prin" 

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by the special account 
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

	# Assign "g" permissions for sec/principal/name_of_principal
        tet_infoline "Attempting to assign \"g\" permission in sec/prin/$PRIN$ID"prin" for $PRIN$ID1"
        acl_edit /.:/sec/principal/$PRIN$ID"prin" -m user:$PRIN$ID1:rg
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
        		"$PRIN$ID1 now HAS \"g\" permission in sec/prin/$PRIN$ID"prin""

	# Make sure that other_object entry type does not have "g" permission
        # Remove "g" permissions for other_obj from sec/principal/name_of_principal
        tet_infoline "Attempting to remove \"g\" permission from sec/prin/$PRIN$ID"prin" for other_obj"
        acl_edit /.:/sec/principal/$PRIN$ID"prin" -m other_obj:r
        check_return "$?" "ERROR: Unable to remove \"g\" permission for other_obj" \
			"Removed \"g\" permission from sec/prin/$PRIN$ID"prin" for other_obj"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to add member to group with only "g" permission
        add_neg_to_group_or_org -g $PRIN$ID"group" $PRIN$ID"prin" 

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "M" permissions for sec/group/name_of_group
        tet_infoline "Attempting to assign \"M\" permission in sec/group/$PRIN$ID"group" for $PRIN$ID1"
        acl_edit /.:/sec/group/$PRIN$ID"group" -m user:$PRIN$ID1:rM
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
        		"$PRIN$ID1 now HAS \"M\" permission in sec/group/$PRIN$ID"group""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to add member to group with permissions
        add_to_group_or_org -g $PRIN$ID"group" $PRIN$ID"prin" 

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY added member of group "
        else
                tet_infoline "ERROR: in adding member of group"
                test_fail=1
		fail=0
        fi

        tet_infoline "Testing permission to delete member of group"

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove "M" permissions for sec/group/name_of_group
        tet_infoline "Attempting to remove \"M\" permission in sec/group/$PRIN$ID"group" for $PRIN$ID1"
        acl_edit /.:/sec/group/$PRIN$ID"group" -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to remove permission for $PRIN$ID1" \
        		"$PRIN$ID1 now DOESN'T HAVE \"M\" permission in sec/group/$PRIN$ID"group""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to add member to group with only "g" permission
        add_neg_to_group_or_org -g $PRIN$ID"group" $ADMIN_PRIN

        # Attempting to remove member to group with only "g" permission
        remove_neg_from_group_or_org -g $PRIN$ID"group" $PRIN$ID"prin"

        # Make sure that other_object entry type does not have "g" permission
        # Remove "g" permissions for other_obj from sec/principal/name_of_principal
        tet_infoline "Attempting to remove \"g\" permission from sec/prin/$ADMIN_PRIN for other_obj"
        acl_edit /.:/sec/principal/$ADMIN_PRIN -m other_obj:r
        check_return "$?" "ERROR: Unable to remove \"g\" permission for other_obj" \
			"Able to remove \"g\" permission for other_obj"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "M" permissions for sec/group/name_of_group
        tet_infoline "Attempting to assign \"M\" permission in sec/group/$PRIN$ID"group" for $PRIN$ID1"
        acl_edit /.:/sec/group/$PRIN$ID"group" -m user:$PRIN$ID1:rM
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
        		"$PRIN$ID1 now HAS \"M\" permission in sec/group/$PRIN$ID"group""

        # Remove "g" permissions for sec/principal/name_of_principal
        tet_infoline "Attempting to remove \"g\" permission from sec/prin/$PRIN$ID"prin" for $PRIN$ID1"
        acl_edit /.:/sec/principal/$PRIN$ID"prin" -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to remove permission for $PRIN$ID1" \
        		"\"g\" permissions for $PRIN$ID1 have been removed from sec/prin/$PRIN$ID"prin""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to add member to group with only "M" permission
        add_neg_to_group_or_org -g $PRIN$ID"group" $ADMIN_PRIN

        # Attempting to remove member to group with permissions
        #
        remove_from_group_or_org -g $PRIN$ID"group" $PRIN$ID"prin"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY deleted member of group"
        else
                tet_infoline "ERROR: in deleting member of group"
                test_fail=1
        fi

        if [ $test_fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY completed add_del_grp()"
		tet_result PASS
        else
                tet_infoline "ERROR: in add_del_grp()"
                tet_result DCE_ERROR
        fi

}	# end add_del_grp
#==============================================================================
# Testing permissions to add and delete members of organization
#==============================================================================

add_del_org ()
{
	fail=0
	test_fail=0
        tet_infoline "Begin testing add/delete member of organization in add_del_org()"
        tet_infoline "Testing permission to add member of organization"

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to add member to organization without permissions
        add_neg_to_group_or_org -o $PRIN$ID"org" $PRIN$ID"prin"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "M" permissions for sec/org/name_of_org
        tet_infoline "Attempting to assign \"M\" permission in sec/org/$PRIN$ID"org" for $PRIN$ID1"
        acl_edit /.:/sec/org/$PRIN$ID"org" -m user:$PRIN$ID1:rM
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
        		"$PRIN$ID1 now HAS \"M\" permission in sec/org/$PRIN$ID"org""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to add member to organization with permissions
        add_to_group_or_org -o $PRIN$ID"org" $PRIN$ID"prin"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY added member of organization"
        else
                tet_infoline "ERROR: in adding member of organization"
                test_fail=1
		fail=0
        fi

        tet_infoline "Testing permission to delete member of organization"

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove "M" permissions for sec/org/name_of_org
        tet_infoline "Attempting to remove \"M\" permission in sec/org/$PRIN$ID"org" for $PRIN$ID1"
        acl_edit /.:/sec/org/$PRIN$ID"org" -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to remove permission for $PRIN$ID1" \
        		"$PRIN$ID1 now DOESN'T HAVE \"M\" permission in sec/org/$PRIN$ID"org""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to add member to organization without permissions
        add_neg_to_group_or_org -o $PRIN$ID"org" $ADMIN_PRIN

        # Attempting to remove member from organization without permission
        remove_neg_from_group_or_org -o $PRIN$ID"org" $PRIN$ID"prin"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "M" permissions for sec/org/name_of_org
        tet_infoline "Attempting to assign \"M\" permission in sec/org/$PRIN$ID"org" for $PRIN$ID1"
        acl_edit /.:/sec/org/$PRIN$ID"org" -m user:$PRIN$ID1:rM
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
			"Able to assign permission for $PRIN$ID1"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to remove member to organization with permissions
        remove_from_group_or_org -o $PRIN$ID"org" $PRIN$ID"prin"

	# Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY deleted member of organization"
        else
                tet_infoline "ERROR: in deleting member of organization"
                test_fail=1
        fi

        if [ $test_fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY completed add_del_org()"
		tet_result PASS
        else
                tet_infoline "ERROR: in add_del_org()"
                tet_result DCE_ERROR
        fi

}       # end add_del_org

if [ $USE_ERA = yes ]; then
#=================================================================
# Testing permissions to add and delete attr instances from PGOs
#  Permissions needed on registry object determined by permset of 
#  attribute, set in era.data
# ADMIN_PRIN will grant/revoke perissions from $PRIN1 who will try
#  attribute operations on $PRIN0prin, $PRIN0group, $PRIN0org
# Flow:  
#	add attr to   prin
#	del attr from prin
#	add attr to   group
#	del attr from group
#	add attr to   org
#	del attr from org
#=================================================================
add_del_attrs () {

	fail=0
	test_fail=0
        tet_infoline "Begin testing add/delete attribute instances in add_del_attrs()"

####### ##### ###### ###### ADDING ERA TO PRINCIPAL ###### ###### ###### ###### 
#	In order to update (add) a principal's attribute we need 'ruf' permission

        tet_infoline "Testing permission to add attribute to principal"

	# Make sure test account doesn't have permissions to the test principal
        # Authenticate the cell by cell_admin
        dce_auth $PARENT_ACCOUNT $PARENT_PASSWD

	DCECP_CMD="acl modify /.:/sec/principal/$PRIN${ID}prin -remove {user $PRIN$ID1}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	add_neg_attr principal $PRIN$ID"prin" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# Start adding permissions, turning on one bit at a time 'til we get to "ruf"
	DCECP_CMD="acl modify /.:/sec/principal/$PRIN${ID}prin -add {user $PRIN$ID1 r}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign r permission to /.:/sec/principal/$PRIN${ID}prin for $PRIN${ID1}" \
				"Able to assign r permission to /.:/sec/principal/$PRIN${ID}prin for $PRIN${ID1}"

	# Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	add_neg_attr principal $PRIN$ID"prin" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add u permissions
	DCECP_CMD="acl modify /.:/sec/principal/$PRIN${ID}prin -change {user $PRIN$ID1 ru}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign ru permission to /.:/sec/principal/$PRIN${ID}prin for $PRIN${ID1}" \
				"Able to assign ru permission to /.:/sec/principal/$PRIN${ID}prin for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	add_neg_attr principal $PRIN$ID"prin" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add f permissions
	DCECP_CMD="acl modify /.:/sec/principal/$PRIN${ID}prin -change {user $PRIN$ID1 ruf}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign ruf permission to /.:/sec/principal/$PRIN${ID}prin for $PRIN${ID1}" \
				"Able to assign ruf permission to /.:/sec/principal/$PRIN${ID}prin for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	add_attr principal $PRIN$ID"prin" $PRIN$ID"attr" ${ATTR_VAL}

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY added attribute to principal in add_del_era"
        else
                tet_infoline "ERROR: in adding attribute to principal in add_del_era"
                test_fail=1
		fail=0
        fi

####### ###### ###### ##### DELETING ERA FROM PRINCIPAL ###### ###### ###### ###### 
#	In order to delete a principal's attribute we need 'rmD' permission

        tet_infoline "Testing permission to delete attribute from principal"

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

	DCECP_CMD="acl modify /.:/sec/principal/$PRIN${ID}prin -remove {user $PRIN$ID1}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to delete permissions to /.:/sec/principal/$PRIN${ID}prin for $PRIN${ID1}" \
				"Able to delete permissions to /.:/sec/principal/$PRIN${ID}prin for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	del_neg_attr principal $PRIN$ID"prin" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add m permissions
	DCECP_CMD="acl modify /.:/sec/principal/$PRIN${ID}prin -add {user $PRIN$ID1 m}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign m permission to /.:/sec/principal/$PRIN${ID}prin for $PRIN${ID1}" \
				"Able to assign m permission to /.:/sec/principal/$PRIN${ID}prin for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	del_neg_attr principal $PRIN$ID"prin" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add D permissions (remove m)
	DCECP_CMD="acl modify /.:/sec/principal/$PRIN${ID}prin -change {user $PRIN$ID1 D}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign D permission to /.:/sec/principal/$PRIN${ID}prin for $PRIN${ID1}" \
				"Able to assign D permission to /.:/sec/principal/$PRIN${ID}prin for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	del_neg_attr principal $PRIN$ID"prin" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add rmD permissions 
	DCECP_CMD="acl modify /.:/sec/principal/$PRIN${ID}prin -change {user $PRIN$ID1 rmD}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign rmD permission to /.:/sec/principal/$PRIN${ID}prin for $PRIN${ID1}" \
				"Able to assign rmD permission to /.:/sec/principal/$PRIN${ID}prin for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	delete_attr principal $PRIN$ID"prin" $PRIN$ID"attr" ${ATTR_VAL}

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY deleted attribute from principal"
        else
                tet_infoline "ERROR: in deleting attribute from principal"
                test_fail=1
        fi

####### ###### ###### ##### ADDING ERA TO GROUP ###### ###### ###### ###### 
#	In order to update (add) a group's attribute we need 'rm' permission

        tet_infoline "Testing permission to add attribute to group"

	# Make sure test account doesn't have permissions to the test group
        # Authenticate the cell by cell_admin
        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PARENT_ACCOUNT $PARENT_PASSWD

	DCECP_CMD="acl modify /.:/sec/group/$PRIN${ID}group -remove {user $PRIN$ID1}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	add_neg_attr group $PRIN$ID"group" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# Start adding permissions, turning on one bit at a time 'til we get to "rm"
	DCECP_CMD="acl modify /.:/sec/group/$PRIN${ID}group -add {user $PRIN$ID1 r}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign r permission to /.:/sec/group/$PRIN${ID}group for $PRIN${ID1}" \
				"Able to assign r permission to /.:/sec/group/$PRIN${ID}group for $PRIN${ID1}"

	# Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	add_neg_attr group $PRIN$ID"group" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add m permissions (delete r)
	DCECP_CMD="acl modify /.:/sec/group/$PRIN${ID}group -change {user $PRIN$ID1 m}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign m permission to /.:/sec/group/$PRIN${ID}group for $PRIN${ID1}" \
				"Able to assign m permission to /.:/sec/group/$PRIN${ID}group for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	add_neg_attr group $PRIN$ID"group" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add rm permissions
	DCECP_CMD="acl modify /.:/sec/group/$PRIN${ID}group -change {user $PRIN$ID1 rm}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign rm permission to /.:/sec/group/$PRIN${ID}group for $PRIN${ID1}" \
				"Able to assign rm permission to /.:/sec/group/$PRIN${ID}group for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	add_attr group $PRIN$ID"group" $PRIN$ID"attr" ${ATTR_VAL}

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY added attribute to group in add_del_era"
        else
                tet_infoline "ERROR: in adding attribute to group in add_del_era"
                test_fail=1
		fail=0
        fi

####### ###### ###### ##### DELETING ERA FROM GROUP ###### ###### ###### ###### 
#	In order to delete a group's attribute we need 'rmD' permission

        tet_infoline "Testing permission to delete attribute from group"

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

	DCECP_CMD="acl modify /.:/sec/group/$PRIN${ID}group -remove {user $PRIN$ID1}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to delete permissions to /.:/sec/group/$PRIN${ID}group for $PRIN${ID1}" \
				"Able to delete permissions to /.:/sec/group/$PRIN${ID}group for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	del_neg_attr group $PRIN$ID"group" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add m permissions
	DCECP_CMD="acl modify /.:/sec/group/$PRIN${ID}group -add {user $PRIN$ID1 m}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign m permission to /.:/sec/group/$PRIN${ID}group for $PRIN${ID1}" \
				"Able to assign m permission to /.:/sec/group/$PRIN${ID}group for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	del_neg_attr group $PRIN$ID"group" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add D permissions (remove m)
	DCECP_CMD="acl modify /.:/sec/group/$PRIN${ID}group -change {user $PRIN$ID1 D}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign D permission to /.:/sec/group/$PRIN${ID}group for $PRIN${ID1}" \
				"Able to assign D permission to /.:/sec/group/$PRIN${ID}group for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	del_neg_attr group $PRIN$ID"group" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add rmD permissions 
	DCECP_CMD="acl modify /.:/sec/group/$PRIN${ID}group -change {user $PRIN$ID1 rmD}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign rmD permission to /.:/sec/group/$PRIN${ID}group for $PRIN${ID1}" \
				"Able to assign rmD permission to /.:/sec/group/$PRIN${ID}group for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	delete_attr group $PRIN$ID"group" $PRIN$ID"attr" ${ATTR_VAL}

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY deleted attribute from group"
        else
                tet_infoline "ERROR: in deleting attribute from group"
                test_fail=1
        fi

####### ###### ###### ##### ADDING ERA TO ORG ###### ###### ###### ###### 
#	In order to update (add) an organizations's attribute we need 'rm' permission

        tet_infoline "Testing permission to add attribute to org"

	# Make sure test account doesn't have permissions to the test org
        # Authenticate the cell by cell_admin
        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PARENT_ACCOUNT $PARENT_PASSWD

	DCECP_CMD="acl modify /.:/sec/org/$PRIN${ID}org -remove {user $PRIN$ID1}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	add_neg_attr organization $PRIN$ID"org" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# Start adding permissions, turning on one bit at a time 'til we get to "rm"
	DCECP_CMD="acl modify /.:/sec/org/$PRIN${ID}org -add {user $PRIN$ID1 r}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign r permission to /.:/sec/org/$PRIN${ID}org for $PRIN${ID1}" \
				"Able to assign r permission to /.:/sec/org/$PRIN${ID}org for $PRIN${ID1}"

	# Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	add_neg_attr organization $PRIN$ID"org" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add m permissions (delete r)
	DCECP_CMD="acl modify /.:/sec/org/$PRIN${ID}org -change {user $PRIN$ID1 m}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign m permission to /.:/sec/org/$PRIN${ID}org for $PRIN${ID1}" \
				"Able to assign m permission to /.:/sec/org/$PRIN${ID}org for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	add_neg_attr organization $PRIN$ID"org" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add rm permissions
	DCECP_CMD="acl modify /.:/sec/org/$PRIN${ID}org -change {user $PRIN$ID1 rm}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign rm permission to /.:/sec/org/$PRIN${ID}org for $PRIN${ID1}" \
				"Able to assign rm permission to /.:/sec/org/$PRIN${ID}org for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	add_attr organization $PRIN$ID"org" $PRIN$ID"attr" ${ATTR_VAL}

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY added attribute to org in add_del_era"
        else
                tet_infoline "ERROR: in adding attribute to org in add_del_era"
                test_fail=1
		fail=0
        fi

####### ###### ###### ##### DELETING ERA FROM ORG ###### ###### ###### ###### 
#	In order to delete an org's attribute we need 'rmD' permission

        tet_infoline "Testing permission to delete attribute from org"

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

	DCECP_CMD="acl modify /.:/sec/org/$PRIN${ID}org -remove {user $PRIN$ID1}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to delete permissions to /.:/sec/org/$PRIN${ID}org for $PRIN${ID1}" \
				"Able to delete permissions to /.:/sec/org/$PRIN${ID}org for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	del_neg_attr organization $PRIN$ID"org" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add m permissions
	DCECP_CMD="acl modify /.:/sec/org/$PRIN${ID}org -add {user $PRIN$ID1 m}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign m permission to /.:/sec/org/$PRIN${ID}org for $PRIN${ID1}" \
				"Able to assign m permission to /.:/sec/org/$PRIN${ID}org for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	del_neg_attr organization $PRIN$ID"org" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add D permissions (remove m)
	DCECP_CMD="acl modify /.:/sec/org/$PRIN${ID}org -change {user $PRIN$ID1 D}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign D permission to /.:/sec/org/$PRIN${ID}org for $PRIN${ID1}" \
				"Able to assign D permission to /.:/sec/org/$PRIN${ID}org for $PRIN${ID1}"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	del_neg_attr organization $PRIN$ID"org" $PRIN$ID"attr" ${ATTR_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add rmD permissions 
	DCECP_CMD="acl modify /.:/sec/org/$PRIN${ID}org -change {user $PRIN$ID1 rmD}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign rmD permission to /.:/sec/org/$PRIN${ID}org for $PRIN$ID1" \
				"Able to assign rmD permission to /.:/sec/org/$PRIN${ID}org for $PRIN$ID1"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	delete_attr organization $PRIN$ID"org" $PRIN$ID"attr" ${ATTR_VAL}

	# Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]

        then
                tet_infoline "SUCCESSFULLY deleted attribute from org in add_del_era"
        else
                tet_infoline "ERROR: in deleting attribute from org in add_del_era"
                test_fail=1
		fail=0
        fi

        if [ $test_fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY completed add_del_attrs"
		tet_result PASS
        else
                tet_infoline "ERROR: in add_del_attrs"
                tet_result DCE_ERROR
        fi

}       # end add_del_attrs
fi #ERA

#==============================================================================
# Testing permissions to add  account
#==============================================================================

add_act ()
{
	fail=0
        tet_infoline "Begin testing permission to add account in add_act()"

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to add account without permissions
        add_neg_account $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org"\
                $SEC_LOGIN_PASSWD $SEC_LOGIN_PASSWD $VALID\
                $SEC_HOME_DIR $SEC_SHELL

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "mau" permissions for sec/principal/name_of_principal
        tet_infoline "Attempting to assign \"mau\" permission in sec/prin/$PRIN$ID"prin" for $PRIN$ID1"
        acl_edit /.:/sec/principal/$PRIN$ID"prin" -m user:$PRIN$ID1:rmau
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
        		"$PRIN$ID1 now HAS \"mau\" permission in sec/prin/$PRIN$ID"prin""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
# This is an OSF bug
        #dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD
	# MGM Think this is a bug-account should be added if it has mau permissions
        # Attempting to add account with permissions
#        add_account $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org"\
#                $SEC_LOGIN_PASSWD $SEC_LOGIN_PASSWD $VALID\
#                $SEC_HOME_DIR $SEC_SHELL

        # Remove authenticated tickets
#	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

	# Authenticate the cell by cell_admin
	dce_auth $PARENT_ACCOUNT $PARENT_PASSWD

        add_account $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org"\
                $SEC_LOGIN_PASSWD $PARENT_PASSWD $VALID\
                $SEC_HOME_DIR $SEC_SHELL

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY added account...completed add_act()"
		tet_result PASS
        else
                tet_infoline "ERROR: in adding account...end add_act()"
		tet_result DCE_ERROR
        fi

}       # end add_act

#==============================================================================
# Testing permissions to change principal, group, organization's full name
#==============================================================================

change_pgo ()
{
	fail=0
	test_fail=0
        tet_infoline "Begin testing permission to change prin/group/org full name in change_pgo"
	tet_infoline "Testing permission to change prin full name"

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change principal's full name without permissions
        change_neg_prin_full_name $PRIN$ID"prin" "$FULL_NAME$PRIN$ID"prin"" 

        # Attempting to change group's full name without permissions
        change_neg_group_full_name $PRIN$ID"group" "$FULL_NAME$PRIN$ID"group"" 

        # Attempting to change organization's full name without permissions
        change_neg_org_full_name $PRIN$ID"org" "$FULL_NAME$PRIN$ID"org"" 

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "f" permissions for sec/principal/name_of_prin
        #
        tet_infoline "Attempting to assign \"f\" permission in sec/prin/$PRIN$ID"prin" for $PRIN$ID1"
        acl_edit /.:/sec/principal/$PRIN$ID"prin" -m user:$PRIN$ID1:rf
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
        		"$PRIN$ID1 now has \"f\" permission in sec/prin/$PRIN$ID"prin""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to add member to organization with permissions
# MGM Looks like code missing ???

        # Attempting to change principal's full name with permissions
        change_prin_full_name $PRIN$ID"prin" "$FULL_NAME$PRIN$ID"prin""

        # Attempting to change group's full name without permissions
        change_neg_group_full_name $PRIN$ID"group" "$FULL_NAME$PRIN$ID"group""

        # Attempting to change organization's full name without permissions
        change_neg_org_full_name $PRIN$ID"org" "$FULL_NAME$PRIN$ID"org""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY changed principal's full name"
        else
                tet_infoline "ERROR: in changing principal's full name"
                test_fail=1
		fail=0
        fi

        tet_infoline "Testing permission to change group full name"

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove "f" permissions from sec/principal/name_of_prin
        tet_infoline "Attempting to remove \"f\" permission from sec/prin/$PRIN$ID"prin" for $PRIN$ID1"
        acl_edit /.:/sec/principal/$PRIN$ID"prin" -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to remove permission for $PRIN$ID1" \
        		"$PRIN$ID1 now DOESN'T HAVE \"f\" permission in sec/prin/$PRIN$ID"prin""

        # Assign "f" permissions for sec/group/name_of_group
        tet_infoline "Attempting to assign \"f\" permission in sec/group/$PRIN$ID"group" for $PRIN$ID1"
        acl_edit /.:/sec/group/$PRIN$ID"group" -m user:$PRIN$ID1:rf
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
        		"$PRIN$ID1 now has \"f\" permission in sec/group/$PRIN$ID"group""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change principal's full name without permissions
        change_neg_prin_full_name $PRIN$ID"prin" "none"

        # Attempting to change group's full name with permissions
        change_group_full_name $PRIN$ID"group" "$FULL_NAME$PRIN$ID"group""

        # Attempting to change organization's full name without permissions
        change_neg_org_full_name $PRIN$ID"org" "$FULL_NAME$PRIN$ID"org""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY changed group's full name"
        else
                tet_infoline "ERROR: in changing group's full name"
                test_fail=1
		fail=0
        fi

        tet_infoline "Testing permission to change organization full name"

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove "f" permissions from sec/group/name_of_group
        tet_infoline "Attempting to remove \"f\" permission from sec/group/$PRIN$ID"group" for $PRIN$ID1"
        acl_edit /.:/sec/group/$PRIN$ID"group" -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to remove permission for $PRIN$ID1" \
        		"$PRIN$ID1 now DOESN'T HAVE \"f\" permission in sec/group/$PRIN$ID"group""

        # Assign "f" permissions for sec/org/name_of_org
        tet_infoline "Attempting to assign \"f\" permission in sec/org/$PRIN$ID"org" for $PRIN$ID1"
        acl_edit /.:/sec/org/$PRIN$ID"org" -m user:$PRIN$ID1:rf
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
        		"$PRIN$ID1 now has \"f\" permission in sec/prin/$PRIN$ID"org""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change group's full name without permissions
        change_neg_group_full_name $PRIN$ID"group" "none"

        # Attempting to change organization's full name with permissions
        change_org_full_name $PRIN$ID"org" "$FULL_NAME$PRIN$ID"org""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove "f" permissions from sec/org/name_of_org
        tet_infoline "Attempting to remove \"f\" permission from sec/org/$PRIN$ID"org" for $PRIN$ID1"
        acl_edit /.:/sec/org/$PRIN$ID"org" -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to remove permission for $PRIN$ID1" \
        		"$PRIN$ID1 now DOESN'T HAVE \"f\" permission in sec/org/$PRIN$ID"group""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change organization's full name without permissions
        change_neg_org_full_name $PRIN$ID"org" "none"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY changed organization's full name"
        else
                tet_infoline "ERROR: in changing organization's full name"
                test_fail=1
        fi

        if [ $test_fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY completed change_pgo()"
		tet_result PASS
        else
                tet_infoline "ERROR: in change_pgo()"
                tet_result DCE_ERROR
        fi

}       # end change_pgo


#==============================================================================
# Testing permissions to change management information for principal,
# group, and organization.
#==============================================================================

change_mgmt ()
{
	fail=0
	test_fail=0
        tet_infoline "Begin testing permission to change prin/group/org management info in change_mgmt"
	tet_infoline "Testing permission to change prin management info"

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change principal's object creation quota without permissions
        change_neg_prin_quota $PRIN$ID"prin" "999"

        # Attempting to change group's project list without permissions
        change_neg_group_project_list $PRIN$ID"group" "nl" 

        # Attempting to change organization's management information without permissions
        change_neg_org_management_info $PRIN$ID"org" "pna" "pns" 

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "m" permissions for sec/principal/name_of_prin
        tet_infoline "Attempting to assign \"m\" permission in sec/prin/$PRIN$ID"prin" for $PRIN$ID1"
        acl_edit /.:/sec/principal/$PRIN$ID"prin" -m user:$PRIN$ID1:rm
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
        		"$PRIN$ID1 now has \"m\" permission in sec/prin/$PRIN$ID"prin""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change principal's object creation quota with permissions
        change_prin_quota $PRIN$ID"prin" "999"

        # Attempting to change group's project list without permissions
        change_neg_group_project_list $PRIN$ID"group" "nl"

        # Attempting to change organization's management information without permissions
        change_neg_org_management_info $PRIN$ID"org" "pna" "pns"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY changed principal's management info"
        else
                tet_infoline "ERROR: in changing principal's management info"
                test_fail=1
		fail=0
        fi

        tet_infoline "Testing permission to change group management info"

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove "m" permissions from sec/principal/name_of_prin
        tet_infoline "Attempting to remove \"m\" permission from sec/prin/$PRIN$ID"prin" for $PRIN$ID1"
        acl_edit /.:/sec/principal/$PRIN$ID"prin" -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to remove permission for $PRIN$ID1" \
        		"$PRIN$ID1 now DOESN'T HAVE \"m\" permission in sec/prin/$PRIN$ID"prin""

        # Assign "m" permissions for sec/group/name_of_group
        tet_infoline "Attempting to assign \"m\" permission in sec/group/$PRIN$ID"group" for $PRIN$ID1"
        acl_edit /.:/sec/group/$PRIN$ID"group" -m user:$PRIN$ID1:rm
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
			"$PRIN$ID1 now has \"m\" permission in sec/group/$PRIN$ID"group""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change principal's object creation quota without permissions
        change_neg_prin_quota $PRIN$ID"prin" "unlimited"

        # Attempting to change group's full name with permissions
        change_group_project_list $PRIN$ID"group" "nl"

        # Attempting to change organization's management information without permissions
        change_neg_org_management_info $PRIN$ID"org" "pna" "pns"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY changed group's management info"
        else
                tet_infoline "ERROR: in changing group's management info"
                test_fail=1
		fail=0
        fi

        tet_infoline "Testing permission to change organization management info"

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove "m" permissions from sec/group/name_of_group
        tet_infoline "Attempting to remove \"m\" permission in sec/group/$PRIN$ID"group" for $PRIN$ID1"
        acl_edit /.:/sec/group/$PRIN$ID"group" -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to remove permission for $PRIN$ID1" \
			"$PRIN$ID1 now DOESN'T HAVE \"m\" permission in sec/group/$PRIN$ID"group""

        # Assign "m" permissions for sec/org/name_of_org
        tet_infoline "Attempting to assign \"m\" permission in sec/org/$PRIN$ID"org" for $PRIN$ID1"
        acl_edit /.:/sec/org/$PRIN$ID"org" -m user:$PRIN$ID1:rm
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
			"$PRIN$ID1 now has \"m\" permission in sec/prin/$PRIN$ID"org""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change group's project list without permissions
        change_neg_group_project_list $PRIN$ID"group" "l"

        # Attempting to change organization's management information with permissions
        change_org_management_info $PRIN$ID"org" "n" "n"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove "m" permissions from sec/org/name_of_org
        tet_infoline "Attempting to remove \"m\" permission in sec/org/$PRIN$ID"org" for $PRIN$ID1"
        acl_edit /.:/sec/org/$PRIN$ID"org" -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to remove permission for $PRIN$ID1" \
			"$PRIN$ID1 now DOESN'T HAVE \"m\" permission in sec/org/$PRIN$ID"org""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change organization's management information without permissions
        change_neg_org_management_info $PRIN$ID"org" "pa" "ps"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY changed organization management info"
        else
                tet_infoline "ERROR: in changing organization management info"
                test_fail=1
        fi

        if [ $test_fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY completed change_mgmt()"
		tet_result PASS
        else
                tet_infoline "ERROR: in change_mgmt()"
                tet_result DCE_ERROR
        fi

}       # end change_mgmt


#==============================================================================
# Testing permissions to change authentication, management and user information
# for account. 
#==============================================================================

chg_auth_act ()
{
	fail=0
	test_fail=0
        tet_infoline "Begin testing permission to change account's authentication info in chg_auth_act()"

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change account's authentication information without permissions
        change_neg_account_auth_info $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org" "5d" "5w"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "a" permissions for sec/principal/$PRIN$ID"prin"
        tet_infoline "Attempting to assign \"a\" permission in sec/principal/$PRIN$ID"prin" for $PRIN$ID1"
        acl_edit /.:/sec/principal/$PRIN$ID"prin" -m user:$PRIN$ID1:ra
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
			"$PRIN$ID1 now has \"a\" permission in sec/principal/$PRIN$ID"prin""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change account's management information without permissions
        change_neg_account_manag_info $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org" "anv"

        # Attempting to change account's user information without permissions
        change_neg_account_user_info $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org" "/u"

        # Attempting to change authentication information with permissions
        change_account_auth_info $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org" "5d" "5w"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY changed account's authentication info"
        else
                tet_infoline "ERROR: in changing account's authentication info"
                test_fail=1
		fail=0
        fi

        tet_infoline "Begin testing permission to change account's management info"

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "m" permissions for sec/principal/$PRIN$ID"prin"
        tet_infoline "Attempting to assign \"m\" permission in sec/principal/$PRIN$ID"prin" for $PRIN$ID1"
        acl_edit /.:/sec/principal/$PRIN$ID"prin" -m user:$PRIN$ID1:rm
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
			"$PRIN$ID1 now has \"m\" permission in sec/principal/$PRIN$ID"prin""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change account's authentication information without permissions
        change_neg_account_auth_info $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org" "6d" "6w"

        # Attempting to change account's user information without permissions
        change_neg_account_user_info $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org" "/u"

        # Attempting to change account's management information with permissions
        change_account_manag_info $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org" "anv"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY changed account's management info"
        else
                tet_infoline "ERROR: in changing account's management info"
                test_fail=1
		fail=0
        fi

        tet_infoline "Begin testing permission to change account's user info"

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "u" permissions for sec/principal/$PRIN$ID"prin"
        tet_infoline "Attempting to assign \"u\" permission in sec/principal/$PRIN$ID"prin" for $PRIN$ID1"
        acl_edit /.:/sec/principal/$PRIN$ID"prin" -m user:$PRIN$ID1:ru
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
			"$PRIN$ID1 now has \"u\" permission in sec/principal/$PRIN$ID"prin""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change account's authentication information without permissions
        change_neg_account_auth_info $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org" "6d" "6w"

        # Attempting to change account's management information without permissions
        change_neg_account_manag_info $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org" "av"

        # Attempting to change account's user information with permissions
        change_account_user_info $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org" "/u"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove "u" permissions for sec/principal/$PRIN$ID"prin"
        tet_infoline "Attempting to remove \"u\" permission from sec/principal/$PRIN$ID"prin" for $PRIN$ID1"
        acl_edit /.:/sec/principal/$PRIN$ID"prin" -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to remove permission for $PRIN$ID1" \
			"$PRIN$ID1 now DOESN'T HAVE \"u\" permission in sec/principal/$PRIN$ID"prin""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change account's user information without permissions
        change_neg_account_user_info $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org" "/tmp"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY changed account's user info"
        else
                tet_infoline "ERROR: in changing account's user info"
                test_fail=1
        fi

        if [ $test_fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY completed chg_auth_act()"
		tet_result PASS
        else
                tet_infoline "ERROR: in chg_auth_act()"
                tet_result DCE_ERROR
        fi

}       # end chg_auth_act


#==============================================================================
# Testing permissions to change authentication and management information for
# registry policies and properties.
#==============================================================================

chg_auth_pol ()
{
	fail=0
	test_fail=0
        tet_infoline "Begin testing permission to change authentication information in chg_auth_pol()"

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change authentication information without permissions
        change_neg_auth_info "2d" "2w" 

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "a" permissions for sec/policy
        tet_infoline "Attempting to assign \"a\" permission in sec/policy for $PRIN$ID1"
        acl_edit /.:/sec/policy -m user:$PRIN$ID1:ra
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
			"$PRIN$ID1 now has \"a\" permission in sec/policy"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change authentication information with permissions
        change_auth_info "2d" "2w"
        change_auth_info "1d" "4w"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY changed authentication info"
        else
                tet_infoline "ERROR: in changing authentication info"
                test_fail=1
		fail=0
        fi

        tet_infoline "Begin testing permission to change policy management information"

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change policy information without permissions
        change_neg_policy_info "6w6d6h" "5w5d5h"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "m" permissions for sec/policy
        tet_infoline "Attempting to assign \"m\" permission in sec/policy for $PRIN$ID1"
        acl_edit /.:/sec/policy -m user:$PRIN$ID1:rm
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
			"$PRIN$ID1 now has \"m\" permission in sec/policy"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change authentication information without permissions
        change_neg_auth_info "forever" "forever"

        # Attempting to change policy information with permissions
        change_policy_info "6w6d6h" "5w5d5h"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY changed policy management info"
        else
                tet_infoline "ERROR: in changing policy management info"
                test_fail=1
		fail=0
        fi

        tet_infoline "Begin testing permission to change property management information"

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove all permissions from sec/policy that were set
        tet_infoline "Attempting to remove \"m\" permission from sec/policy for $PRIN$ID1"
        acl_edit /.:/sec/policy -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to remove permission for $PRIN$ID1" \
			"$PRIN$ID1 now DOESN'T HAVE \"m\" permission in sec/policy"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change policy information without permissions
        change_neg_policy_info "6w6d6h" "5w5d5h"

        # Attempting to change property information without permissions
        change_neg_property_info "10"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "m" permissions for sec/policy
        tet_infoline "Attempting to assign \"m\" permission in sec/policy for $PRIN$ID1"
        acl_edit /.:/sec/policy -m user:$PRIN$ID1:rm
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
			"$PRIN$ID1 now has \"m\" permission in sec/policy"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change property information with permissions
        change_property_info "10"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove all permissions from sec/policy that were set
        tet_infoline "Attempting to remove \"m\" permission from sec/policy for $PRIN$ID1"
        acl_edit /.:/sec/policy -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to remove permission for $PRIN$ID1" \
			"$PRIN$ID1 now DOESN'T HAVE \"m\" permission in sec/policy"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to change property information without permissions
        change_neg_property_info "10"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY changed property management info"
        else
                tet_infoline "ERROR: in changing property management info"
                test_fail=1
        fi

        if [ $test_fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY completed chg_auth_pol()"
		tet_result PASS
        else
                tet_infoline "ERROR: in chg_auth_pol()"
                tet_result DCE_ERROR
        fi

}       # end chg_auth_pol


if [ $USE_ERA = yes ]; then
#===================================================================
# Testing permissions to modify attribute schema in the registry and
#   modify attribute instances on PGOs
# Permissions needed on registry object to change attr instances 
#  determined by Update permset of attribute, set in era.data
#
# ADMIN_PRIN will grant/revoke permissions for $PRIN1 who will try
#  schema operations on the test attribute schema $PRIN$ID"attr", and
#  attribute operations on the attribute instance $A_ATTR_NAME on $PRIN0, 
#  $SEC_GROUP, $SEC_ORG
#=================================================================
change_schema_and_attrs ()
{
	fail=0
	test_fail=0
        tet_infoline "Begin test for changing attribute schema in change_attr()"

###### ##### ##### ##### MODIFYING SCHEMA ##### ##### ##### ##### 
#	In order to update a schema object, you need "c" permission on /.:/sec/xattrschema
#	Additionally, only the following fields are modifiable:
#   	  -applydefs -aclmgr -annotation -applydefs -intercell -reserved -trigbind 
#	So these are not modifiable:
#   	  -encoding -unique -multivalued -trigtype -uuid
#	 (Note that aclmgr may only be modified by adding a new type; can't have
#	  existing ones changed or deleted)

#### **** NOTE ******
#  The schema modify operation is not implemented for
#  the /.:/sec/xattrschema object, so the following has
#  been commented out...


#        # Make sure test account doesn't have permissions to the schema
#        # Authenticate the cell by cell_admin
#        dce_auth $PARENT_ACCOUNT $PARENT_PASSWD
#
#        DCECP_CMD="acl modify /.:/sec/xattrschema -remove {user $PRIN$ID1}"
#        dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
#
#        # Authenticate the cell by the test account
#        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD
#
#	change_neg_schema /.:/sec/xattrschema/$PRIN$ID"attr" intercell accept
#
#        # Authenticate the cell by  the special account
#        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
#
#	# Add control permission and this time the change should succeed
#	DCECP_CMD="acl modify /.:/sec/xattrschema -add {user $PRIN$ID1 rc}"
#        dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
#        check_return "$?" "ERROR: Unable to assign c permission to /.:/sec/xattrschema for $PRIN$ID1" \
#                                "Able to assign c permission to /.:/sec/xattrschema for $PRIN$ID1"
#
#        # Authenticate the cell by the test account
#        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD
#
#	change_schema /.:/sec/xattrschema/$PRIN$ID"attr" intercell accept
#
#	# Now try changing ALL fields that are not modifiable
#
#	change_neg_schema /.:/sec/xattrschema/$PRIN$ID"attr" encoding any
#	change_neg_schema /.:/sec/xattrschema/$PRIN$ID"attr" unique yes
#	change_neg_schema /.:/sec/xattrschema/$PRIN$ID"attr" multivalued no
#	change_neg_schema /.:/sec/xattrschema/$PRIN$ID"attr" trigtype query
#	change_neg_schema /.:/sec/xattrschema/$PRIN$ID"attr" uuid 12ab3456-1234-11ab-a9b9-12345a123d9d
#	change_neg_schema /.:/sec/xattrschema/$PRIN$ID"attr" aclmgr "{06ab9320-0191-11ca-a9e8-08001e039d7d r ruf r rmD}"
#
#	if [ $fail -eq 0 ]
#        then
#                tet_infoline "SUCCESSFULLY changed schema in change_schema_and_attrs"
#        else
#                tet_infoline "ERROR: in changing schema in change_schema_and_attrs"
#                test_fail=1
#                fail=0
#        fi
#
###### ##### ##### ##### MODIFYING ERA ON PRINCIPAL ##### ##### ##### ##### 
#	In order to update a principal's attribute we need 'ruf' permission

        tet_infoline "Testing permission to modify attribute on a principal"

	# Make sure test account doesn't have permissions to the test principal
        # Authenticate the cell by cell_admin
#        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PARENT_ACCOUNT $PARENT_PASSWD
        dce_auth $PARENT_ACCOUNT $PARENT_PASSWD

	DCECP_CMD="acl modify /.:/sec/principal/$PRIN$ID -remove {user $PRIN$ID1}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	change_neg_attr principal $PRIN$ID ${A_ATTR_NAME} ${ATTR_NEW_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# Start adding permissions, turning on one bit at a time 'til we get to "ruf"
	DCECP_CMD="acl modify /.:/sec/principal/$PRIN$ID -add {user $PRIN$ID1 r}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign r permission to /.:/sec/principal/$PRIN$ID for $PRIN$ID1" \
				"Able to assign r permission to /.:/sec/principal/$PRIN$ID for $PRIN$ID1"

	# Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	change_neg_attr principal $PRIN$ID ${A_ATTR_NAME} ${ATTR_NEW_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add u permissions
	DCECP_CMD="acl modify /.:/sec/principal/$PRIN$ID -change {user $PRIN$ID1 ru}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign ru permission to /.:/sec/principal/$PRIN${ID} for $PRIN$ID1" \
				"Able to assign ru permission to /.:/sec/principal/$PRIN${ID} for $PRIN$ID1"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	change_neg_attr principal $PRIN$ID ${A_ATTR_NAME} ${ATTR_NEW_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add f permissions
	DCECP_CMD="acl modify /.:/sec/principal/$PRIN$ID -change {user $PRIN$ID1 ruf}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign ruf permission to /.:/sec/principal/$PRIN${ID} for $PRIN$ID1" \
				"Able to assign ruf permission to /.:/sec/principal/$PRIN${ID} for $PRIN$ID1"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	change_attr principal $PRIN$ID ${A_ATTR_NAME} ${ATTR_NEW_VAL}

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY modified attribute ${A_ATTR_NAME} on principal $PRIN$ID in change_schema_and_attrs"
        else
                tet_infoline "ERROR: in modifying attribute ${A_ATTR_NAME} on principal $PRIN$ID in change_schema_and_attrs"
                test_fail=1
		fail=0
        fi

###### ##### ##### ##### MODIFYING ERA ON GROUP ##### ##### ##### ##### 
#	In order to update a group's attribute we need 'rm' permission

        tet_infoline "Testing permission to modify attribute on group"

	# Make sure test account doesn't have permissions to the test group
        # Authenticate the cell by cell_admin
        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PARENT_ACCOUNT $PARENT_PASSWD

	DCECP_CMD="acl modify /.:/sec/group/$SEC_GROUP -remove {user $PRIN$ID1}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	change_neg_attr group $SEC_GROUP ${A_ATTR_NAME} ${ATTR_NEW_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# Start adding permissions, turning on one bit at a time 'til we get to "rm"
	DCECP_CMD="acl modify /.:/sec/group/$SEC_GROUP -add {user $PRIN$ID1 r}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign r permission to /.:/sec/group/$PRIN$ID"group" for $PRIN$ID1" \
				"Able to assign r permission to /.:/sec/group/$PRIN$ID"group" for $PRIN$ID1"

	# Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	change_neg_attr group $SEC_GROUP ${A_ATTR_NAME} ${ATTR_NEW_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add m permissions (delete r)
	DCECP_CMD="acl modify /.:/sec/group/$SEC_GROUP -change {user $PRIN$ID1 m}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign m permission to /.:/sec/group/$SEC_GROUP for $PRIN$ID1" \
				"Able to assign m permission to /.:/sec/group/$SEC_GROUP for $PRIN$ID1"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	change_neg_attr group $SEC_GROUP ${A_ATTR_NAME} ${ATTR_NEW_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add rm permissions
	DCECP_CMD="acl modify /.:/sec/group/$SEC_GROUP -change {user $PRIN$ID1 rm}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign rm permission to /.:/sec/group/$SEC_GROUP for $PRIN$ID1" \
				"Able to assign rm permission to /.:/sec/group/$SEC_GROUP for $PRIN$ID1"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	change_attr group $SEC_GROUP ${A_ATTR_NAME} ${ATTR_NEW_VAL}

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY modified attribute ${A_ATTR_NAME} on group $SEC_GROUP in change_schema_and_attrs"
        else
                tet_infoline "ERROR: in modifying attribute ${A_ATTR_NAME} on group $SEC_GROUP in change_schema_and_attrs"
                test_fail=1
		fail=0
        fi

###### ##### ##### ##### MODIFYING ERA ON ORG ##### ##### ##### ##### 
#	In order to update an organizations's attribute we need 'rm' permission

        tet_infoline "Testing permission to update attribute on org"

	# Make sure test account doesn't have permissions to the test org
        # Authenticate the cell by cell_admin
        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PARENT_ACCOUNT $PARENT_PASSWD

	DCECP_CMD="acl modify /.:/sec/org/$SEC_ORG -remove {user $PRIN$ID1}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	change_neg_attr organization $SEC_ORG ${A_ATTR_NAME} ${ATTR_NEW_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# Start adding permissions, turning on one bit at a time 'til we get to "rm"
	DCECP_CMD="acl modify /.:/sec/org/$SEC_ORG -add {user $PRIN$ID1 r}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign r permission to /.:/sec/org/$SEC_ORG for $PRIN$ID1" \
				"Able to assign r permission to /.:/sec/org/$SEC_ORG for $PRIN$ID1"

	# Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	change_neg_attr organization $SEC_ORG ${A_ATTR_NAME} ${ATTR_NEW_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add m permissions (delete r)
	DCECP_CMD="acl modify /.:/sec/org/$SEC_ORG -change {user $PRIN$ID1 m}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign m permission to /.:/sec/org/$SEC_ORG for $PRIN$ID1" \
				"Able to assign m permission to /.:/sec/org/$SEC_ORG for $PRIN$ID1"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	change_neg_attr organization $SEC_ORG ${A_ATTR_NAME} ${ATTR_NEW_VAL}

        # Authenticate the cell by  the special account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD
	
	# add rm permissions
	DCECP_CMD="acl modify /.:/sec/org/$SEC_ORG -change {user $PRIN$ID1 rm}"
	dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to assign rm permission to /.:/sec/org/$SEC_ORG for $PRIN$ID1" \
				"Able to assign rm permission to /.:/sec/org/$SEC_ORG for $PRIN$ID1"

        # Authenticate the cell by the test account
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

	change_attr organization $SEC_ORG ${A_ATTR_NAME} ${ATTR_NEW_VAL}

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY modified attribute ${A_ATTR_NAME} on org $SEC_ORG in change_schema_and_attrs"
        else
                tet_infoline "ERROR: in modifying attribute ${A_ATTR_NAME} on org $SEC_ORG in change_schema_and_attrs"
                test_fail=1
		fail=0
        fi


        if [ $test_fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY completed change_schema_and_attrs()"
		tet_result PASS
        else
                tet_infoline "ERROR: in change_schema_and_attrs()"
                tet_result DCE_ERROR
        fi

}       # end change_schema_and_attrs
fi # ERA

#==============================================================================
# Testing ACL Managers entry types and permissions
#==============================================================================

test_acl_mgrs ()
{
	fail=0
	test_fail=0
	tet_infoline "Testing acl managers entry types and permissions in test_acl_mgrs()"

        # Authenticate the cell by cell_admin
        dce_auth $PARENT_ACCOUNT $PARENT_PASSWD

        if [ $fail -ne 0 ]
        then
                test_fail=1
		fail=0
        fi

	# Attempting to test ACL Managers entry types and permissions
if [ $USE_ERA = yes ]; then
#NOTE added for debug:
echo "dcecp -c acl show /.:/sec/xattrschema" > ${DCECP_OUTPUT}
dcecp -c acl show /.:/sec/xattrschema >> ${DCECP_OUTPUT}
file_to_journal ${DCECP_OUTPUT}
#end NOTE added for debug:
	test_acl_perm_and_entry $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org" $PRIN$ID"attr"
else
	test_acl_perm_and_entry $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org"
fi

        if [ $fail -ne 0 ]
        then
                test_fail=1
                fail=0
        fi

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -ne 0 ]
        then
                test_fail=1
        fi

        if [ $test_fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY completed test_acl_mgrs()"
		tet_result PASS
        else
                tet_infoline "ERROR: in test_acl_mgrs()"
                tet_result DCE_ERROR
        fi

}	# end test_acl_mgrs
#==============================================================================
# Testing permissions to delete account
#==============================================================================

del_act ()
{
	fail=0
        tet_infoline "Begin testing to delete account in del_act()"

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to delete account without permissions
        delete_neg_account $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "mau" permissions for sec/principal/name_of_principal
        tet_infoline "Attempting to assign \"mau\" permission in sec/prin/$PRIN$ID"prin" for $PRIN$ID1"
        acl_edit /.:/sec/principal/$PRIN$ID"prin" -m user:$PRIN$ID1:rmau 
	check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
			"$PRIN$ID1 now HAS \"mau\" permission in sec/prin/$PRIN$ID"prin""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to delete account with permissions
        delete_account $PRIN$ID"prin" $PRIN$ID"group" $PRIN$ID"org"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Delete "mau" permissions for sec/principal/name_of_principal
        tet_infoline "Attempting to delete \"mau\" permission from sec/prin/$PRIN$ID"prin" for $PRIN$ID1"
        acl_edit /.:/sec/principal/$PRIN$ID"prin" -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to assign permission for $PRIN$ID1" \
			"$PRIN$ID1 now DOESN'T HAVE \"mau\" permission in sec/prin/$PRIN$ID"prin""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to delete account without permissions
        delete_neg_account $ADMIN_PRIN $PRIN"g" $PRIN"o"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY deleted account... complete del_act()"
		tet_result PASS
        else
                tet_infoline "ERROR: in deleting account... end del_act()"
		tet_result DCE_ERROR
        fi

}       # end del_act

if [ $USE_ERA = yes ]; then
#==============================================================================
# Testing permissions to delete schema
#   Deleteing schema deletes all attribute instances 
#==============================================================================
del_schema () {
	tet_infoline "Starting del_schema ()" 	
	fail=0
        # Make sure test account doesn't have permissions to the schema
        # Authenticate the cell by cell_admin
        dce_auth $PARENT_ACCOUNT $PARENT_PASSWD

        DCECP_CMD="acl modify /.:/sec/xattrschema -remove {user $PRIN$ID1}"
        dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1

        # Authenticate the cell by the test account
        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        del_neg_schema /.:/sec/xattrschema/$PRIN$ID"attr"
        del_neg_schema $A_ATTR_NAME

        # Authenticate the cell by  the special account
        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Add delete permission and this time the delete should succeed
        DCECP_CMD="acl modify /.:/sec/xattrschema -add {user $PRIN$ID1 rd}"
        dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to add rd permission to /.:/sec/xattrschema for $PRIN$ID1" \
				"Able to add rd permission to /.:/sec/xattrschema for $PRIN$ID1"

        # Authenticate the cell by the test account
        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        delete_schema /.:/sec/xattrschema/$PRIN$ID"attr"

        # Authenticate the cell by cell_admin
        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PARENT_ACCOUNT $PARENT_PASSWD

#NOTE added for debug:
echo "dcecp -c acl show /.:/sec/xattrschema" > ${DCECP_OUTPUT}
dcecp -c acl show /.:/sec/xattrschema >> ${DCECP_OUTPUT}
file_to_journal ${DCECP_OUTPUT}
#end NOTE added for debug:

	# Take the permissions away, shouldn't be able to delete anymore
        DCECP_CMD="acl modify /.:/sec/xattrschema -remove {user $PRIN$ID1}"
        dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to delete permission to /.:/sec/xattrschema for $PRIN$ID1" \
				"Able to delete permission to /.:/sec/xattrschema for $PRIN$ID1"

        # Authenticate the cell by the test account
        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        del_neg_schema $A_ATTR_NAME

        # Authenticate the cell by  the special account
        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Restore delete permission and this time the other delete should succeed
        DCECP_CMD="acl modify /.:/sec/xattrschema -add {user $PRIN$ID1 rd}"
        dcecp -c ${DCECP_CMD} > ${DCECP_OUTPUT} 2>&1
	check_return "$?" "ERROR: Unable to add rd permission to /.:/sec/xattrschema for $PRIN$ID1" \
				"Able to add rd permission to /.:/sec/xattrschema for $PRIN$ID1"


        # Authenticate the cell by the test account
        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi; dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        delete_schema $A_ATTR_NAME

        # Remove authenticated tickets
        if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY deleted attribute schema in del_schema()"
                tet_result PASS
        else
                tet_infoline "ERROR: in deleting attribute schema in del_schema()"
                tet_result DCE_ERROR
        fi

}
fi #ERA

#==============================================================================
# Testing permissions to delete principal, group, or organization
#==============================================================================

del_pgo ()
{
#set -x
	fail=0
        tet_infoline "Begin testing delete prin, group, org in del_pgo()"

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to delete principal without permission
        delete_neg_person $PRIN$ID"prin" 

        # Attempting to delete group without permission
        delete_neg_group $PRIN$ID"group"

        # Attempting to delete organization without permission
        delete_neg_org $PRIN$ID"org" 

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "d" permission for directory principal
        tet_infoline "Attempting to assign \"d\" permission in sec/prin for $PRIN$ID1"
        acl_edit /.:/sec/principal -m user:$PRIN$ID1:rd
        check_return "$?" "ERROR: Unable to assign permission to $PRIN$ID1" \
			"$PRIN$ID1 now HAS \"d\" permission in sec/prin"

        # Assign "d" permission for directory group
        tet_infoline "Attempting to assign \"d\" permission in sec/group for $PRIN$ID1"
        acl_edit /.:/sec/group -m user:$PRIN$ID1:rd
        check_return "$?" "ERROR: Unable to assign permission to $PRIN$ID1" \
			"$PRIN$ID1 now HAS \"d\" permission in sec/group"

        # Assign "d" permission for directory organization
        tet_infoline "Attempting to assign \"d\" permission in sec/org for $PRIN$ID1"
        acl_edit /.:/sec/org -m user:$PRIN$ID1:rd
        check_return "$?" "ERROR: Unable to assign permission to $PRIN$ID1" \
			"$PRIN$ID1 now HAS \"d\" permission in sec/org"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to delete principal without permission
        delete_neg_person $PRIN$ID"prin" 

        # Attempting to delete group without permission
        delete_neg_group $PRIN$ID"group"

        # Attempting to delete organization without permission
        delete_neg_org $PRIN$ID"org" 

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Assign "D" permission for sec/principal/prin_name
        tet_infoline "Attempting to assign \"D\" permission in sec/prin for $PRIN$ID1"
        acl_edit /.:/sec/principal/$PRIN$ID"prin" -m user:$PRIN$ID1:rD
        check_return "$?" "ERROR: Unable to assign permission to $PRIN$ID1" \
			"$PRIN$ID1 now HAS \"D\" permission in sec/prin/$PRIN$ID"prin""

        # Assign "D" permission for sec/group/group_name
        tet_infoline "Attempting to assign \"D\" permission in sec/group for $PRIN$ID1"
        acl_edit /.:/sec/group/$PRIN$ID"group" -m user:$PRIN$ID1:rD
        check_return "$?" "ERROR: Unable to assign permission to $PRIN$ID1" \
			"$PRIN$ID1 now HAS \"D\" permission in sec/group/$PRIN$ID"group""

        # Assign "D" permission for sec/organization/org_name
        tet_infoline "Attempting to assign \"D\" permission in sec/org for $PRIN$ID1"
        acl_edit /.:/sec/org/$PRIN$ID"org" -m user:$PRIN$ID1:rD
        check_return "$?" "ERROR: Unable to assign permission to $PRIN$ID1" \
			"$PRIN$ID1 now HAS \"D\" permission in sec/org/$PRIN$ID"org""

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to delete principal with permission
        delete_person $PRIN$ID"prin"

        # Attempting to delete group with permission
        delete_group $PRIN$ID"group"

        # Attempting to delete organization with permission
        delete_org $PRIN$ID"org"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell by  the special account
        dce_auth $ADMIN_PRIN $SEC_LOGIN_PASSWD

        # Remove "d" permission for directory principal
        tet_infoline "Attempting to remove \"d\" permission from sec/prin for $PRIN$ID1"
        acl_edit /.:/sec/principal -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to assign permission to $PRIN$ID1" \
			"$PRIN$ID1 now DOESN'T HAVE \"d\" permission in sec/prin/$PRIN$ID"prin""

        # Remove "d" permission for directory group
        tet_infoline "Attempting to remove \"d\" permission from sec/group for $PRIN$ID1"
        acl_edit /.:/sec/group -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to assign permission to $PRIN$ID1" \
			"$PRIN$ID1 now DOESN'T HAVE \"d\" permission in sec/group/$PRIN$ID"group""

        # Remove "d" permission for directory organization
        tet_infoline "Attempting to remove \"d\" permission from sec/org for $PRIN$ID1"
        acl_edit /.:/sec/org -d user:$PRIN$ID1
        check_return "$?" "ERROR: Unable to assign permission to $PRIN$ID1" \
			"$PRIN$ID1 now DOESN'T HAVE \"d\" permission in sec/org/$PRIN$ID"org""

        # Assign "D" permission for sec/principal/prin_name
        tet_infoline "Attempting to assign \"D\" permission in sec/prin for $PRIN$ID1"
        acl_edit /.:/sec/principal/$PRIN$ID -m user:$PRIN$ID1:rD
        check_return "$?" "ERROR: Unable to assign permission to $PRIN$ID1" \
			"$PRIN$ID1 now HAS \"D\" permission in sec/prin/$PRIN$ID"

        # Assign "D" permission for sec/group/group_name
        tet_infoline "Attempting to assign \"D\" permission in sec/group for $PRIN$ID1"
        acl_edit /.:/sec/group/$SEC_GROUP -m user:$PRIN$ID1:rD
        check_return "$?" "ERROR: Unable to assign permission to $PRIN$ID1" \
			"$PRIN$ID1 now HAS \"D\" permission in sec/group/$SEC_GROUP"

        # Assign "D" permission for sec/organization/org_name
        tet_infoline "Attempting to assign \"D\" permission in sec/org for $PRIN$ID1"
        acl_edit /.:/sec/org/$SEC_ORG -m user:$PRIN$ID1:rD
        check_return "$?" "ERROR: Unable to assign permission to $PRIN$ID1" \
			"$PRIN$ID1 now HAS \"D\" permission in sec/org/$SEC_ORG"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        # Authenticate the cell
        dce_auth $PRIN$ID1 $SEC_LOGIN_PASSWD

        # Attempting to delete principal without permission
        delete_neg_person $PRIN$ID

        # Attempting to delete group without permission
        delete_neg_group $PRIN"g"

        # Attempting to delete organization without permission
        delete_neg_org $PRIN"o"

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

	# Authenticate the cell by cell_admin
	dce_auth $PARENT_ACCOUNT $PARENT_PASSWD

        # Remove permissions to change ACLs on Registry Objects for the special account
        tet_infoline "Removing permissions to change ACLs for $ADMIN_PRIN"
        acl_edit /.:/sec/principal -d user:$ADMIN_PRIN
        check_return "$?" "ERROR: Unable to remove permission for /sec/principal" \
			"Able to remove permission for /sec/principal"

        acl_edit /.:/sec/group -d user:$ADMIN_PRIN
        check_return "$?" "ERROR: Unable to remove permission for /sec/group" \
			"Able to remove permission for /sec/group"

        acl_edit /.:/sec/org -d user:$ADMIN_PRIN
        check_return "$?" "ERROR: Unable to remove permission for /sec/org" \
			"Able to remove permission for /sec/org"

        acl_edit /.:/sec/policy -d user:$ADMIN_PRIN
        check_return "$?" "ERROR: Unable to remove permission for /sec/policy" \
			"Able to remove permission for /sec/policy"

if [ $USE_ERA = yes ]; then
	acl_edit /.:/sec/xattrschema -d user:$ADMIN_PRIN
	check_return "$?" "ERROR: Unable to remove permission for /sec/xattrschema" \
			"Able to remove permission for /sec/xattrschema"
fi

	# Attemting to remove all created objects
	delete_acl_obj -p $ADMIN_PRIN -g $SEC_GROUP -o $SEC_ORG\
			-l $PRIN -n $SEC_NUM_USERS

        # Remove authenticated tickets
	if [ -n "$KRB5CCNAME" ]; then kdestroy; fi

        if [ $fail -eq 0 ]
        then
                tet_infoline "SUCCESSFULLY deleted principal, group and org... completed del_pgo()"
		tet_result PASS
        else
                tet_infoline "ERROR: in deleting principal, group and org... end del_pgo()"
                test_fail=1
                tet_result DCE_ERROR
        fi

}       # end del_pgo

# tcc will fail if these files don't exist and get sourced
# so there is no need to check that this happens
. $TET_ROOT/profile.dcest
. ./dceseacl.data
. $TET_ROOT/security/ts/sec.functions
if [ $USE_ERA = yes ]; then
. $TET_ROOT/security/ts/era.data
. $TET_ROOT/security/ts/era.functions
fi 
. $TET_ROOT/lib/ksh/tcm.ksh

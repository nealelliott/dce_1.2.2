#
# ID: $Id: restoredisk-1.1.2b,v 1.6 1996/01/21 09:47:28 hyer Exp $
#
# COMPONENT_NAME: bak
#
# The following functions list may not be complete.
# Functions defined by/via macros may not be included.
#
# FUNCTIONS:
#
#
# ORIGINS: Transarc Corp.
#
# (C) COPYRIGHT Transarc Corp. 1993
# All Rights Reserved
# Licensed Materials - Property of Transarc
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with Transarc Corp
#
# HISTORY
# $TALog: restoredisk-1.1.2b,v $
# Revision 1.6  1996/01/21  09:47:28  hyer
# Changes to make the backup test scripts with the callout routines for
# mount and unmount in DCE 1.2.
#
# Added cm checkfilesets and cleaned up test to run with callout routines
# [from r1.5 by delta hyer-7265-backup-test-mods-for-callout-routines, r1.1]
#
# Revision 1.5  1995/12/06  15:24:28  hyer
# The backup test scripts were not working. Most of the tests either
# failed or never ran. Made significant changes to all scripts to make
# them work:
#
# Added function CATCHEXEC that does the same thing as catch "exec ..."
# but also displays each command and the response as well as any error codes
# that are returned from the exec.
#
# Added a loop in is_butc_ready to wait up to 200 seconds for the butc
# process to start, sleeping 10 seconds between checks.
#
# Changed the expected command output to match the messages generated
# by the current version of the code.
#
# Added sleeps around some of the tape I/O commands to keep them from
# failing because the device wasn't ready.
#
# Added chmod ogu+rwx commands after each fts crmount to give the test
# scripts access to the test filesets
#
#
# [from r1.3 by delta hyer-7109-backup-test-changes, r1.1]
#
# Revision 1.4  1995/11/29  17:13:11  hyer
# Delta for changes made to the backup scripts to get the backup tests running.
# Several changes were made to get the tests to run:
#
# 1. A loop was added to is_butc_ready to retry the status command
#    every 10 seconds, and time out after 200 seconds. The tests were
#    not being run because it can take over 1 minute for butc to start.
#
# 2. The directory permissions needed to be changed to allow R/W access
#    on the test filesets after they were created with fts crmount.
#
# 3. The error checking code in restore_disk and restore_ft, and dump
#    was reworked to make sure that the success or failure of the
#    operation was detected during the test.
#
# 4. The calls to "fts dump" and "fts restore" were returing error status
#    even though the operation succeeded. Changed the script to read the
#    response from the command to decide whether or not the command worked.
#
# 5. Added a EXEC routine that calls exec, but prints out each command and
#    the response.
#
# 6. Several other minor changes were made to address verious problems
#    with how the scripts were checking the success or failure of the
#    tests. The tests have run successfully start to finish on
#    Solaris with the changes reflected in this delta.
#
# see above
# [from r1.3 by delta hyer_7109_fixes_to_backup_test_scripts, r1.1]
#
# Revision 1.3  1994/02/21  16:30:46  davecarr
# Upgraded tests to work with expect-5.1.3.  Also moved some configuration
# dependencies from restoredisk-cmd to generic.exp.  In the process, some
# variables had "dkr_" prepended to them to indicate that they are used only
# for the restoredisk tests.
#
# Upgraded test to work with expect-5.1.3.  Some variables had "dkr_"
# prepended to them to indicate that they are used only for the restoredisk
# tests.
# [from r1.2 by delta davecarr-db3672-bak-restoredisk-tests-I, r1.3]
#
# Revision 1.2  1993/11/24  17:54:24  davecarr
#    Minor modifications of tests after merging automated backup tests with
# Vijay's work.  These tests work with expect-4.3.  Changes will need to be
# made when updating to expect, version 5.
#
# Minor modifications.  This test works with expect-4.3.
# [from r1.1 by delta davecarr-db3672-bak-restoredisk-tests-I, r1.2]
#
# Revision 1.1  1993/06/10  18:31:56  davecarr
#    This delta adds the first set of expect-based tests for bak restoredisk.
# [added by delta davecarr-db3672-bak-restoredisk-tests-I, r1.1]
#
#

# defined in restoredisk-cmd or generic.exp:
#     dkr_server, dkr_aggr, dkr_fileset, dkr_butc_tcid0, bak_id, butc_id
#     sum_one, sum_two, sum_three
#
# The simplest scenario: Whole aggr dumped on one tape, restore to same
# machine and same aggr.


TEST-SETUP

    CATCHEXEC "cm checkfilesets"

    # If the fileset exists, zap it but leave the fldb entry for it.
    if ![CATCHEXEC "/opt/dcelocal/bin/fts lsft -f $dkr_fileset" fts_out] {
        set tmp_server [get_server_from_lsft $fts_out]
        set tmp_aggr [get_aggr_from_lsft $fts_out]
        CATCHEXEC "/opt/dcelocal/bin/fts zap $zap_id $tmp_server $tmp_aggr"
    }

TEST-PRE
    if ![expr [verifydb_p $bak_id]&&[is_butc_ready_p $bak_id $dkr_butc_tcid0]] {
        send_user "Test preconditions failed.\n"
        unset run
    }
    # The fileset entry should exist in the fldb but the fileset should 
    # not exist.
    if [info exists run] {
        if "[CATCHEXEC "/opt/dcelocal/bin/fts lsfldb $dkr_fileset"] ||\
            ![CATCHEXEC "/opt/dcelocal/bin/fts lsft -f $dkr_fileset"]" {
            send_user "Test preconditions failed.\n"
            unset run
        }
    }

TEST-EXEC
    set restoredisk_output \
        [Restore_disk $bak_id $butc_id $dkr_server $dkr_aggr "" "" "" ""]

TEST-POST


TEST-EVAL
    if ![string match "0" $restoredisk_output] {
	send_user "\nrestoredisk failed\n"
	unset pass
    }
    # Need to check that the fldb is correct.
    if ![check_fldb_p $dkr_fileset $dkr_server $dkr_aggr] {
        send_user "\ncheck_fldb_p failed\n"
        unset pass
    }
    if [info exists pass] {
        if [CATCHEXEC "/bin/sum /:/$dkr_fileset/one" new_sum_one] {
            send_user "/:/$dkr_fileset/one not restored.\n"
            unset pass
        }
        if [CATCHEXEC "/bin/sum /:/$dkr_fileset/two" new_sum_two] {
            send_user "/:/$dkr_fileset/two not restored.\n"
            unset pass
        }
        if [CATCHEXEC "/bin/sum /:/$dkr_fileset/three" new_sum_three] {
            send_user "/:/$dkr_fileset/three not restored.\n"
            unset pass
        }
    }
    if [info exists pass] {
        if "[string compare $sum_one $new_sum_one]||\
            [string compare $sum_two $new_sum_two]||\
            [string compare $sum_three $new_sum_three]" {
            unset pass
            }
    }

TEST-CLEANUP

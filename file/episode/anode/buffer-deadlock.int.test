# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# 
# HISTORY
# $Log: buffer-deadlock.int.test,v $
# Revision 1.1.10.1  1996/10/02  17:16:49  damon
# 	Newest DFS from Transarc
# 	[1996/10/01  18:26:46  damon]
#
# Revision 1.1.4.1  1994/06/09  13:57:03  annie
# 	fixed copyright in src/file
# 	[1994/06/08  21:31:59  annie]
# 
# Revision 1.1.2.4  1993/01/18  22:02:05  cjd
# 	embedded copyright notice
# 	[1993/01/18  21:41:31  cjd]
# 
# Revision 1.1.2.3  1992/11/09  21:33:29  jaffe
# 	Transarc delta: ota-ot3804-new-block-security 1.1
# 	  Selected comments:
# 	    This is a super-delta comprising changes necessary to accomplish both
# 	    deltas which are a very tough import and are really intertwined anyway.
# 	    Transarc delta: ota-new-block-security-2467 1.9
# 	    Selected comments:
# 	    Changes to strategy.c for VM support.  This involves significant rewrite
# 	    of the handling of async I/O events.  The test_anode code was fixed to
# 	    start the async daemon by default.
# 	    While I tried to maintain the SunOS specific code, it is likely that
# 	    this has broken.
# 	    Status:
# 	    All logbuf module calls for undo zero transactions continue to be stubs.
# 	    Otherwise, changes to anode level seem to work in all user space tests.
# 	    Can be tried in the kernel (the logbuf stubs should be okay) but hasn't
# 	    been.
# 	    Several bug fixes and a better test_anode script to test them.
# 	    Added conditional support for malloc plumber.  Use "build PLUMBER=".
# 	    Status: Now runs w/o Tony's part in AIX 3.2.  Successfully copies 10M
# 	    files and ran AimIII test to 30 users.
# 	    Several cleanups necessary after merging with Tony's deltas an upgrading
# 	    to epi-102 1.17.
# 	    The logbuf code is still stubbed out for the VM paths.
# 	    Fix up buffer-deadlock script which requires more space that all_tests
# 	    allows.
# 	    Part of the problem is that the script doesn't really do what Tony
# 	    thought it did since all the threads really end up executing in the 64K
# 	    aggregate.  Fixed this.
# 	    Change to create different COW filesets for each thread.  This allows
# 	    each to run independently in each aggreaget.
# 	    Still gets intermittent aggregate full conditions.
# 	    Fix a couple of bugs in logbuf code.
# 	    Status: Tony's nbs_tests script which calls all the variants of
# 	    new-block-security.{,rcvr.}test now runs successfully.
# 	    Next:	Unstub the VM calls.
# 	    Now passes all_tests in user space.
# 	    One bug just fixed found on power7 should be fixed, but untested as yet.
# 	    Minor OSF/1 compilation fix for Tony.
# 	[1992/11/09  17:50:59  jaffe]
# 
# Revision 1.1.2.2  1992/09/15  17:30:41  jaffe
# 	Transarc delta: mason-ot2548-buffer-reservation 1.8
# 	  Selected comments:
# 	    This delta is used to implement the new buffer reservation scheme for users
# 	    of multiple buffers.  This delta is done.
# 	    Must snapshot so I can work on a different bug.  This code DOES NOT COMPILE.
# 	    This is a checkpoint.  Not functional yet.
# 	    Another checkpoint.
# 	    Another checkpoint.  Basic code done, need to finish debugging.
# 	    Test code for checking out buffer reservation code.
# 	    This is it.  Delta now works correctly, including multiple-aggregate
# 	    bashing of buffer reservation.
# 	[1992/09/14  19:19:30  jaffe]
# 
# $EndLog$
# /* Copyright (C) 1992 Transarc Corporation - All rights reserved */
# $Header: /u0/rcs_trees/dce/rcs/file/episode/anode/buffer-deadlock.int.test,v 1.1.10.1 1996/10/02 17:16:49 damon Exp $

buffer-deadlock.int 1

create_file a				# in vol foo.<num>
write_file 1234567890 10

create_vol = bar.root 0,,0 4000
create_file cow_a "" "" a

write_file 1234567890 10
reclone

write_file 1234567890 10
reclone

write_file 1234567890 10
reclone

write_file 1234567890 10
reclone

write_file 1234567890 10
reclone

write_file 1234567890 10
reclone

write_file 1234567890 10
reclone

write_file 1234567890 10
reclone

write_file 1234567890 10
reclone

write_file 1234567890 10
reclone

write_file 1234567890 10
reclone

write_file 1234567890 10
reclone

end

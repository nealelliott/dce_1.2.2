/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: smpl.idl,v $
 * Revision 1.1.6.2  1996/03/11  02:28:45  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  20:00:26  marty]
 *
 * Revision 1.1.6.1  1995/12/11  20:14:44  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:47:35  root]
 * 
 * Revision 1.1.4.2  1993/01/13  19:55:41  bbelch
 * 	Embedding copyright notice
 * 	[1993/01/06  18:23:22  bbelch]
 * 
 * Revision 1.1.2.2  1992/05/01  13:49:30  rsalz
 * 	Added as part of rpc6 drop.
 * 	[1992/04/30  23:23:38  rsalz]
 * 
 * Revision 1.2  1992/01/19  22:14:15  devrcs
 * 	Dropping DCE1.0 OSF1_misc port archive
 * 
 * $EndLog$
 */
/*
 */
/*
 *  OSF DCE Version 1.0 
 */
/*
 * Some simple operations to establish a baseline of functionality...
 *  check basic arg passing
 *  check basic exception and non-[{comm,fault}_status] handling
 *  check basic [fault_status] exception handling
 *  check basic [comm_status] exception handling
 */

[uuid(464f2b48-aee7-11c9-b1a1-08001e021b34), version(1)]

interface ncstest_simple
{

    const char *ncstest_simple_name = "misc simple calls";

    /*
     * Just a random struct with a few common types (intentionally
     * ordered to make certain things aren't naturally aligned).
     */
    const long T1_C_LEN = 11;
    typedef struct {
        boolean     b;
        long        i32;
        small       i8;
        char        c[T1_C_LEN];
        short       i16;
    } ncstest_simple_t1;

    /*
     *  n c s t e s t _ s i m p l e _ o p 1
     *
     *  return a mutation of input arg:
     *      invert the boolean
     *      negate the various size ints
     *      case convert the char array
     *  the function return value is the sum of the integers in the input.
     */
    long ncstest_simple_op1
    (
        [in] handle_t h,
        [in] ncstest_simple_t1   *t1_in,
        [out] ncstest_simple_t1  *t1_out
    );

    /*
     *  n c s t e s t _ s i m p l e _ o p 2
     *
     * Raise an exception as indicated by the flag.
     * There is no ACF spec for this operation so a remote exception
     * should be reraised locally.
     */
    error_status_t ncstest_simple_op2
    (
        [in] handle_t h,
        [in] boolean    raise_exception
    );

    /*
     *  n c s t e s t _ s i m p l e _ o p 3
     *
     * Raise an exception as indicated by the flag.
     * The ACF declares the function return to have [comm_status, fault_status].
     */
    error_status_t ncstest_simple_op3
    (
        [in] handle_t h,
        [in] boolean    raise_exception
    );
}

#
#  Copyright 1990 Open Software Foundation (OSF)
#  Copyright 1990 Unix International (UI)
#  Copyright 1990 X/Open Company Limited (X/Open)
# 
#  Permission to use, copy, modify, and distribute this software and its
#  documentation for any purpose and without fee is hereby granted, provided
#  that the above copyright notice appear in all copies and that both that
#  copyright notice and this permission notice appear in supporting
#  documentation, and that the name of OSF, UI or X/Open not be used in 
#  advertising or publicity pertaining to distribution of the software 
#  without specific, written prior permission.  OSF, UI and X/Open make 
#  no representations about the suitability of this software for any purpose.  
#  It is provided "as is" without express or implied warranty.
# 
#  OSF, UI and X/Open DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
#  INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO 
#  EVENT SHALL OSF, UI or X/Open BE LIABLE FOR ANY SPECIAL, INDIRECT OR 
#  CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF 
#  USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR 
#  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR 
#  PERFORMANCE OF THIS SOFTWARE.
# 
##########################################################################
#
#    SCCS:            @(#)makefile	1.10 06/23/92
#    NAME:            TET Top Level Makefile
#    PRODUCT:         TET (Test Environment Toolkit)
#    AUTHOR:          OSF Validation & SQA
#    DATE CREATED:    14 May 1991
#    TARGETS:         tcc & api
#    MODIFICATIONS:
#                     "TET Rework"
#                     UniSoft Ltd, August 1991.
#
##########################################################################
 

# Full pathname of the TET root directory, to be compiled into the TCC
TET_ROOT =	/your/tet/root

# C compiler command
CC =		cc

# Compiler options: these need to be changed to enable NSIG to be defined.
# Either add another feature test macro which will make it visible in
# <signal.h>, or add -DNSIG=<value>.  NSIG should be 1 greater than
# the highest supported signal number on the system.
COPTS =	
DEFINES =	-D_POSIX_SOURCE

#DEFINES =	-D_POSIX_SOURCE -DNSIG=33

# Comma-separated list of signal numbers to be ignored by the TCC
SIG_IGNORE =

# Comma-separated list of signal numbers to be left alone by the TCC.
# Usually includes number for SIGCLD, if supported separately from SIGCHLD.
# Include job control signals if you want to use job control on the TCC.
SIG_LEAVE =

# Library building commands: if $(AR) adds symbol tables itself, or the
# system has ranlib, set LORDER=echo and TSORT=cat.  If ranlib is not
# required, set RANLIB=echo.
AR =		ar cr
RANLIB =	echo
LORDER =	echo
TSORT =		cat

all:	tcc api

tcc:	nofile
	cd tcc ; $(MAKE) TET_ROOT="$(TET_ROOT)" CC="$(CC)" COPTS="$(COPTS)" \
		DEFINES="$(DEFINES)" SIG_IGNORE="$(SIG_IGNORE)" \
		SIG_LEAVE="$(SIG_LEAVE)"

api:	nofile
	cd api ; $(MAKE) CC="$(CC)" COPTS="$(COPTS)" DEFINES="$(DEFINES)" \
		AR="$(AR)" RANLIB="$(RANLIB)" LORDER="$(LORDER)" \
		TSORT="$(TSORT)"

clean:
	cd tcc ; $(MAKE) clean
	cd api ; $(MAKE) clean

CLOBBER:
	cd tcc ; $(MAKE) CLOBBER
	cd api ; $(MAKE) CLOBBER

nofile:


/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: twr.idl,v $
 * Revision 1.1.4.2  1996/03/09  23:26:56  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:42:28  marty]
 *
 * Revision 1.1.4.1  1995/12/08  00:23:49  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/08  00:01:23  root]
 * 
 * Revision 1.1.2.3  1993/01/04  00:10:40  bbelch
 * 	Embedding copyright notice
 * 	[1993/01/03  20:16:22  bbelch]
 * 
 * Revision 1.1.2.2  1992/12/23  21:21:30  zeliff
 * 	Embedding copyright notice
 * 	[1992/12/23  15:48:05  zeliff]
 * 
 * Revision 1.1  1992/01/19  03:13:56  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/*
**  Copyright (c) 1989 by
**      Hewlett-Packard Company, Palo Alto, Ca. & 
**      Digital Equipment Corporation, Maynard, Mass.
**
**
**  NAME:
**
**      twr.idl
**
**  FACILITY:
**
**      twr
**
**  ABSTRACT:
**
**      twr Interface Definition
**
**      NOTE WELL: This file contains various things marked "*** NON-API ***".
**      The existence, signature, and semantics of anything so marked
**      is subject to change without notice and should thus not be depended
**      on by application writers.
**
**
*/

[local] interface twr
{
import  "dce/lbase.idl";

/*************************************************************************/
/*************************  Common definitions  **************************/
/*************************************************************************/

/* none */

/*************************************************************************/
/****************************  Status Codes  *****************************/
/*************************************************************************/

const long      twr_s_ok               = error_status_ok;

/* T W R _ I P _ L O W E R _ F L R S _ F R O M _ S A  
 *
 *                   *** NON-API ***
 *
 * Create the canonical representation of an Internet protocol tower from an 
 * Internet sockaddr
 */
void twr_ip_lower_flrs_from_sa
    (
        [in]    unsigned32        transport_layer_protocol,
        [in]    sockaddr_p_t      sa,
        [out]   twr_p_t           *tower,
        [out]   unsigned32        *status
    );

/*
 * T W R _ D N E T _ L O W E R _ F L R S _ F R O M _ S A
 *
 *                   *** NON-API ***
 *
 * Create the canonical representation of a DECnet protocol tower from a 
 * DECnet sockaddr
 */
void twr_dnet_lower_flrs_from_sa
    (
        [in]    sockaddr_p_t      sa,
        [out]   twr_p_t           *tower,
        [out]   unsigned32        *status
    );

/*
 * T W R _ O S I _ L O W E R _ F L R S _ F R O M _ S A
 *
 *                   *** NON-API ***
 *
 * Create the canonical representation of an OSI protocol tower from an
 * OSI sockaddr
 */
void twr_osi_lower_flrs_from_sa
    (
        [in]    sockaddr_p_t      sa,
        [out]   twr_p_t           *tower,
        [out]   unsigned32        *status
    );

/*
 * T W R _ D D S _ L O W E R _ F L R S _ F R O M _ S A
 *
 *                   *** NON-API ***
 *
 * Create the canonical representation of an DDS protocol tower from an
 * DDS sockaddr
 */
void twr_dds_lower_flrs_from_sa
    (
        [in]    unsigned32        transport_layer_protocol,
        [in]    sockaddr_p_t      sa,
        [out]   twr_p_t           *tower,
        [out]   unsigned32        *status
    );

/*
 * T W R _ I P _ L O W E R _ F L R S _ T O _ S A
 *
 *                   *** NON-API ***
 *
 * Create an Internet sockaddr from the canonical representation of 
 * an Internet protocol tower.
 */
void twr_ip_lower_flrs_to_sa 
    (
        [in]    byte_p_t         tower_octet_string,
        [out]   sockaddr_p_t     *sa,
        [out]   unsigned32       *sa_len,
        [out]   unsigned32       *status
    );

/*
 * T W R _ D N E T _ L O W E R _ F L R S _ T O _ S A
 *
 *                   *** NON-API ***
 *
 * Create a DECnet sockaddr from the canonical representation of 
 * a DECnet protocol tower.
 */
void twr_dnet_lower_flrs_to_sa 
    (
        [in]    byte_p_t         tower_octet_string,
        [out]   sockaddr_p_t     *sa,
        [out]   unsigned32       *sa_len,
        [out]   unsigned32       *status
    );

/*
 * T W R _ O S I _ L O W E R _ F L R S _ T O _ S A
 *
 *                   *** NON-API ***
 *
 * Create an OSI sockaddr from the canonical representation of 
 * an OSI protocol tower.
 */
void twr_osi_lower_flrs_to_sa 
    (
        [in]    byte_p_t         tower_octet_string,
        [out]   sockaddr_p_t     *sa,
        [out]   unsigned32       *sa_len,
        [out]   unsigned32       *status
    );

/*
 * T W R _ D D S _ L O W E R _ F L R S _ T O _ S A
 *
 *                   *** NON-API ***
 *
 * Create an DDS sockaddr from the canonical representation of 
 * an DDS protocol tower.
 */
void twr_dds_lower_flrs_to_sa 
    (
        [in]    byte_p_t         tower_octet_string,
        [out]   sockaddr_p_t     *sa,
        [out]   unsigned32       *sa_len,
        [out]   unsigned32       *status
    );
}

#!/bin/ksh
#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
#
# HISTORY
# $Log: xx_examine,v $
# Revision 1.1.14.2  1996/03/11  02:49:39  marty
# 	Update OSF copyright years
# 	[1996/03/10  20:10:17  marty]
#
# Revision 1.1.14.1  1995/12/11  22:51:52  root
# 	Submit OSF/DCE 1.2.1
# 	[1995/12/11  22:23:54  root]
# 
# Revision 1.1.11.2  1993/07/28  19:40:38  cmckeen
# 	HP's TET'ized version of the system tests
# 	[1993/07/27  13:56:07  cmckeen]
# 
# Revision 1.1.7.3  1993/05/27  19:03:08  eheller
# 	*** empty log message ***
# 
# Revision 1.1.7.2  1993/05/27  14:23:10  eheller
# 	*** empty log message ***
# 	[1993/05/26  18:47:05  eheller]
# 
# Revision 1.1.5.2  1993/04/23  16:20:16  sekhar
# 	Merged Hp_dce1_0_1 changes
# 	[1993/04/16  15:03:21  sekhar]
# 
# Revision 1.1.1.7  1993/03/11  22:16:59  osfrcs
# 	    Loading drop DCE1_0_2B18
# 
# Revision 1.1.5.3  1993/02/12  20:39:22  pellis
# 	Changed to have testcase check for warning too.
# 	[1993/02/12  20:34:31  pellis]
# 
# Revision 1.1.5.2  1993/02/05  15:29:50  cjd
# 	Embedded copyright notice
# 	[1993/02/05  14:50:32  cjd]
# 
# Revision 1.1.3.2  1992/05/21  16:42:02  gmd
# 	Remove warnings from failure scan (they're currently generated
# 	only twice in the system tests, for rpc retries)
# 	[1992/05/15  20:19:01  gmd]
# 
# $EndLog$
#
#
#   FILE_NAME: xx_examine
#
#   COMPONENT_NAME: dce.systest
#
#   FUNCTIONS: parseCmdLine
#              scanForMsg
#              showUsage
#
#   ORIGINS: 27
#
#
#   (C) COPYRIGHT International Business Machines Corp. 1991
#   All Rights Reserved
#
#
#   FOR_TEST: Any
#
#   USAGE:
#
#	xx_examine [ -d | -t ] [filename] ...
#
#	where:
#	   -d       Check the status of the overall driver
#	            (fail messages).  This is the default.
#	   -t       Check for testcase failures (error and severe messages.)
#	  filename  The name of a journal file to check.  If
#	            no filename is given, $JOURNAL is checked.
#
#   DESCRIPTION:
#      This utility can be used to check whether testcases or
#      drivers have logged any error or failure messages
#      in a journal file.  It searches for messages entered by
#      the DCE System Test logging tools (xx_*).
#
#   HISTORY: 
#      11/15/90   Ken Walker     Initial code
#      12/10/90   Ken Walker     Added testcase mode, ability to
#                                specify input files
#

################################################################
# Default values for global variables
################################################################
CMD=`basename $0`	# Name of this program
MODE=driver		# Assume user is checking a driver
RC=0			# Return code to hand back to user

################################################################
# showUsage
#	Display the usage for this command, then exit with
#	an error code.
################################################################
showUsage() {
	cat <<-EOF

	Usage: $CMD [ -w | -t ] [filename] ...
	where:
	   -d       Check the status of the overall driver
	            (fail messages).  This is the default.
	   -t       Check for testcase failures (error and severe messages).
	  filename  The name of a journal file to check.  If
	            no filename is given, \$JOURNAL is checked.

	EOF
	exit 2
}

################################################################
# parseCmdLine
#	Parse the command line and set up the appropriate
#	options.
# Input parameters:
#	$1	Command line to parse
################################################################
parseCmdLine() {

	# Check for flags
	set -- `getopt dt $*`
	if [ "$?" != "0" ] ; then	# Check for invalid syntax
#		echo "$CMD: Invalid flag given"
		showUsage
	fi
	while : ; do
		case $1 in
		    -d)
			MODE=driver
			shift
			;;
		    -t)
			MODE=testcase
			shift
			;;
		    --)
			shift
			break
			;;
		esac
	done

	# Check for filenames.  If no filenames, leave the
	# JOURNAL variable as the user set it.
	if [ "$*" != "" ] ; then
		JOURNAL=$*
	fi
}

################################################################
# scanForMsg
#	Check the files being examined for the specific
#	message passed in.
# Input parameters:
#	$1	Character string to scan for
################################################################
scanForMsg() {
	fgrep -e"$1" $JOURNAL >/dev/null	# Look for offending message
	if [ "$?" = "0" ] ; then
		RC=1				# If found, this program fails
	fi
}

################################################################
#  Main Program
################################################################

parseCmdLine $*

if [ "$MODE" = driver ] ; then		# Checking driver
	scanForMsg "-fail----:"
else					# Checking testcase
	scanForMsg "-error---:"
	scanForMsg "-severe--:"
	scanForMsg "-warning-:"
fi

exit $RC

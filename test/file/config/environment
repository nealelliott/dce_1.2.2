# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
# 
# HISTORY
# $Log: environment,v $
# Revision 1.1.619.1  1996/10/17  18:18:42  damon
# 	Submitting on behalf of Transarc
# 	[1996/10/17  16:50:11  damon]
#
# Revision 1.1.5.2  1993/01/11  18:26:22  htf
# 	Embedded copyright notice
# 	[1993/01/11  16:59:05  htf]
# 
# Revision 1.1.2.2  1992/05/21  12:37:23  jaffe
# 	Transarc delta: fred-merge-tests 1.1
# 	  Files modified:
# 	    Makefile
# 	    bos: Makefile, READ_ME, init_dce, kills, runc, runtests
# 	    bos: setup, shows
# 	    bos/tests: Makefile, test0, test1, test10, test11, test12
# 	    bos/tests: test2, test3, test4, test5, test6, test7, test8
# 	    bos/tests: test9; bos/tests/procs: Makefile
# 	    cm: Makefile, runtests, test0, test1, test2, test3, test4
# 	    cm: test5, test6; config: chk_errnr, echeck, environment
# 	    fs: Makefile, READ_ME, err1, err2, longalpha, longfox
# 	    fs: longmix, prog1.c, rtest1, shortalpha, shortfox, shortmix
# 	    fs: test1, test10, test2, test2b, test2s, test3, test4
# 	    fs: test5, test6, test7, test8, test9
# 	    fts: Makefile, check, etest.sed, etest1, etest2, etest3
# 	    fts: etest4, etest5, etest6, rtest1, rtest2, runrtests
# 	    fts: runtests, test1, test10, test11, test12, test13, test2
# 	    fts: test3, test4, test5, test6, test7, test8, test9
# 	    low: Makefile, ctrl.asc, prog11.c, prog12.c, prog14.c
# 	    low: prog3a.c, prog8.c, prog9.c, rtest1, rtest2, styl.asc
# 	    low: test1, test10, test11, test12, test13, test14, test2
# 	    low: test3, test4, test5, test6, test7, test8, test9
# 	    naming: Makefile, bostest, fstest, ftstest
# 	    scout: Makefile, test1, test2; setup: Makefile, environment
# 	    ubik: Makefile, READ_ME, init, kills, runc, setup, shows
# 	    ubik: udbg; util: Makefile, sys.c
# 	  Selected comments:
# 	    Created this delta to merge Phil Hirsch's final DFS test code changes with
# 	    the test code that the OSF had.  Hopefully, this means we and the OSF
# 	    should be looking at the same test code.
# 	    Changes to facilitate merge of local DFS test code with the OSF's.
# 	[1992/05/20  18:17:33  jaffe]
# 
# $EndLog$

#
# These variables may have to be changed to match a particular test environment.
# In the test scripts, they will be set to default values only if they are not
# already set, so you can override the settings in the test scripts "from the
# outside" (i.e., by setting environment variables before running the tests,
# not by modifying the tests themselves). Modifying and then sourcing this
# file (the one you're currently reading) is an easy way to set all these
# variables to match your local test environment. This script is intended to
# be sourced by a C-shell, so /bin/csh should be your login shell.
#
# The test scripts use Bourne-shell syntax like this to set these variables:
#          : ${foo=bar}
# The line above sets the variable $foo to "bar" if and only if $foo is not
# currently set. If $foo *is* currently set, its value is not changed by the
# above line.
#

setenv AUTH_ARG ""           # Authentication argument to commands like bos
                             # and fts. Sensible choices: "", "-noauth", and
                             # "-localauth".
setenv CACHE_SIZE 10000      # Size (in 1K blocks) of the DFS disk cache.
setenv CELL_NAME foo.com     # The name of the test cell; this variable is
                             # obtained from /opt/dcelocal/dce_cf.db in all
                             # of the test scripts.
setenv CELL_ARG ""           # Cellname argument to commands like bos and fts;
                             # sensible choices include "" and things like
                             # "-cell $CELL_NAME".
setenv EPI_AGGRID_1 10       # First Episode aggregate ID.
setenv EPI_AGGRID_2 11       # Second Episode aggregate ID.
setenv EPI_AGGRNAME_1 epi1   # First Episode aggregate name.
setenv EPI_AGGRNAME_2 epi2   # Second Episode aggregate name.
setenv EPI_BS_1 8192         # Block size on $EPI_AGGRNAME_1.
setenv EPI_BS_2 4096         # Block size on $EPI_AGGRNAME_2.
setenv EPI_FS_1 1024         # Fragment size on $EPI_AGGRNAME_1.
setenv EPI_FS_2 1024         # Fragment size on $EPI_AGGRNAME_2.
setenv EPI_FSNAME_1 root.dfs # First Episode fileset name (this fileset should
                             # live on $EPI_AGGRNAME_1).
setenv EPI_FSNAME_2 fileset.epi        # Second Episode fileset name (on
                                       # $EPI_AGGRNAME_2).
setenv EPI_MOUNT_1 /efs1     # Local mount point for $EPI_FSNAME_1.
setenv EPI_MOUNT_2 /efs2     # Local mount point for $EPI_FSNAME_2.
setenv EPI_MP_NAME_1 .       # First Episode mount point (for $EPI_FSNAME_1;
                             # this name is relative to $export_root).
setenv EPI_MP_NAME_2 epifs2  # Second Episode mount point (for $EPI_FSNAME_2).
setenv EPI_PART_1 /dev/epi1  # Partition on which $EPI_AGGRNAME_1 lives.
setenv EPI_PART_2 /dev/epi2  # Partition on which $EPI_AGGRNAME_2 lives.
setenv OTHER_CELL ""         # Other cell to communicate with.
setenv RAM_CACHE_SIZE 1000   # Size (in 1K blocks) of the DFS memory cache.
setenv SERVER_1 gemini       # The name of a DFS server machine.
setenv SERVER_2 gemini       # The name of another DFS server machine.
setenv TESTTOP /afs/tr/de/qatest/tests # Home of DFS test directories.
setenv UFS_AGGID_1 3         # First exported UFS aggregate ID.
setenv UFS_AGGID_2 4         # Second exported UFS aggregate ID.
setenv UFS_FSNAME_1 usr.ufs  # First exported UFS fileset name.
setenv UFS_FSNAME_2 tmp.ufs  # First exported UFS fileset name.
setenv UFS_MP_NAME_1 usr.ufs # Mount point to $UFS_FSNAME_1 (relative to
                             # $export_root).
setenv UFS_MP_NAME_2 tmp.ufs # Mount point to $UFS_FSNAME_2.
setenv UFS_PART_1 /dev/hd2   # Partition on which $UFS_ROOT_1 lives.
setenv UFS_PART_2 /dev/hd3   # Partition on which $UFS_ROOT_2 lives.
setenv UFS_ROOT_1 /usr       # First exported UFS filesystem.
setenv UFS_ROOT_2 /tmp       # First exported UFS filesystem.
setenv VERB_ARG ""           # Verbosity argument to commands like bos and fts.
                             # Sensible choices: "", "-verbose".



#
# These variables will probably not need to be changed. However, they can be
# changed as easily as the first set of variables can be - "from the outside",
# by setting their values before running the tests.
#

setenv dfs_admin_group subsys/dce/dfs-admin      # DFS administrative group
                                                 # (named in all admin lists,
                                                 # and when fxd is invoked).
setenv bin_dir /opt/dcelocal/bin       # Location of most DCE DFS binaries.
setenv sbin_dir /opt/dceshared/bin     # Location of other DCE DFS binaries.
setenv dfs_admin cell_admin            # A member of $dfs_admin_group.
setenv dns_cell_name /.../$CELL_NAME   # Official DNS cell name, to be used
                                       # in commands like bos and fts.
setenv dns_server_prefix /.:/hosts/    # String to prepend to the output of
                                       # the hostname command in order to
                                       # construct a DNS host name.
setenv export_root /.../$CELL_NAME/fs  # The DFS root directory.



#
# These variables are set and used internally in many test scripts.
# The 'setenv' tokens below appear so that the echeck environment-variable
# name-correctness script will recognize them as legal.
#

#setenv PATH                 # Most scripts prepend $bin_dir.
#setenv status               # csh exit status.

#setenv d                    # Directory from which the test was started (set
                             # via d=`pwd`).
#setenv hn                   # Hostname where the test is running (set via
                             # hn=`hostname`).
#setenv lf                   # Log file name (set via lf=$ty.$p.log).
#setenv p                    # The name of the test (set via p=`basename $0`).
#setenv p1                   # $p":", for use in error messages in csh scripts
#setenv rc                   # Return code (exit status). Zero means the
                             # test passed.
#setenv systype              # System type (set via systype=`sys`).
#setenv testhome             # Set to $TESTTOP/$ty.
#setenv bos_testhome         # Set to $TESTTOP/$ty/tests/procs for bos tests.
#setenv ty                   # Test suite name.



#
# Any other variables used in the test scripts are for internal use only; they
# should always have lower-case names. Some common variable names appear below.
#

#setenv a                    # A command-line argument
#setenv av_arg               # Set to "$AUTH_ARG $VERB_ARG", for convenience
#setenv ca_arg               # Set to "$CELL_ARG $AUTH_ARG"
#setenv cav_arg              # Set to "$CELL_ARG $AUTH_ARG $VERB_ARG"
#setenv sav_arg              # Set to "-server $dns_server_prefix$SERVER_1 \
                               $AUTH_ARG $VERB_ARG"
#setenv sv_arg               # Set to "-server $dns_server_prefix$SERVER_1 \
                               $VERB_ARG"
#setenv base_name            # Common prefix for fileset names in a given test
#setenv cp                   # C program to be run by a test script
#setenv id                   # A fileset ID number
#setenv mount_base           # Common prefix for mount points in a given test
#setenv np                   # number of concurrent test processes to run
#setenv npf                  # flag to help parse the -np argument
#setenv nt                   # number of times to run a test
#setenv ntf                  # flag to help parse the -nt argument
#setenv outfile              # Where stdout of bos exed-ed commands goes.
#setenv proc                 # process number (runs from 1 to $np)
#setenv rf                   # return code from a command that the script runs
#setenv t                    # iteration number (runs from 1 to $nt)
#setenv u                    # test directory


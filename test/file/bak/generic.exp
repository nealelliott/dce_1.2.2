#
# ID: $Id: generic.exp,v 1.11 1995/12/06 15:24:21 hyer Exp $
#
# COMPONENT_NAME: bak tests
#
# The following functions list may not be complete.
# Functions defined by/via macros may not be included.
#
# FUNCTIONS:
#	generic file used to configure the bak tests. Contains a set of 
# user definable variables whose values would pertain to the user's 
# DFS environment. 
#
# ORIGINS: Transarc Corp.
#
# (C) COPYRIGHT Transarc Corp. 1993
# All Rights Reserved
# Licensed Materials - Property of Transarc
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with Transarc Corp
#
# HISTORY
# $TALog: generic.exp,v $
# Revision 1.11  1995/12/06  15:24:21  hyer
# The backup test scripts were not working. Most of the tests either
# failed or never ran. Made significant changes to all scripts to make
# them work:
#
# Added function CATCHEXEC that does the same thing as catch "exec ..."
# but also displays each command and the response as well as any error codes
# that are returned from the exec.
#
# Added a loop in is_butc_ready to wait up to 200 seconds for the butc
# process to start, sleeping 10 seconds between checks.
#
# Changed the expected command output to match the messages generated
# by the current version of the code.
#
# Added sleeps around some of the tape I/O commands to keep them from
# failing because the device wasn't ready.
#
# Added chmod ogu+rwx commands after each fts crmount to give the test
# scripts access to the test filesets
#
#
# [from r1.9 by delta hyer-7109-backup-test-changes, r1.1]
#
# Revision 1.10  1995/11/29  17:13:05  hyer
# Delta for changes made to the backup scripts to get the backup tests running.
# Several changes were made to get the tests to run:
#
# 1. A loop was added to is_butc_ready to retry the status command
#    every 10 seconds, and time out after 200 seconds. The tests were
#    not being run because it can take over 1 minute for butc to start.
#
# 2. The directory permissions needed to be changed to allow R/W access
#    on the test filesets after they were created with fts crmount.
#
# 3. The error checking code in restore_disk and restore_ft, and dump
#    was reworked to make sure that the success or failure of the
#    operation was detected during the test.
#
# 4. The calls to "fts dump" and "fts restore" were returing error status
#    even though the operation succeeded. Changed the script to read the
#    response from the command to decide whether or not the command worked.
#
# 5. Added a EXEC routine that calls exec, but prints out each command and
#    the response.
#
# 6. Several other minor changes were made to address verious problems
#    with how the scripts were checking the success or failure of the
#    tests. The tests have run successfully start to finish on
#    Solaris with the changes reflected in this delta.
#
# see above
# [from r1.9 by delta hyer_7109_fixes_to_backup_test_scripts, r1.1]
#
# Revision 1.9  1994/05/05  17:46:19  khale
# To fix problems with some bak tests
#
# Removed incorrect hardcoded references to the places where the bakserver
# file is kept.
# [from r1.8 by delta khale-sb5433-problems-in-bak-tests, r1.1]
#
# Revision 1.8  1994/02/25  15:23:11  andi
# [merge of changes from 1.1 to 1.7 into 1.3]
#
# [*** log entries omitted ***]
#
# Revision 1.3  1993/11/18  19:55:04  vijay
# fixes to bugs introduced while merging and enhancing util.exp
# [from r1.2 by delta vijay-db3516-add-bak-test-driver, r1.3]
#
# Revision 1.2  1993/11/15  21:20:07  vijay
# This revision checks in a working set of scripts to test the DFS backup
# system. The files checked in for this delta are high level scripts to
# configure and run the test suite. Separate deltas would export the scripts
# to test individual bak commands.
#
# The README file provides a description on how to configure and run these tests.
#
# file contains a bunch of variables useful in configuring the bak tests to the
# local DFS system setup
# [added by delta vijay-db3516-add-bak-test-driver, r1.2]
#

GENERIC-SETUP

    send_user "\ngeneric-setup\n"

    # location of the different binaries
    set KLOG /usr/afsws/bin/klog
    set DCE_LOGIN dce_login
    set BAK  "/opt/dcelocal/bin/bak"
    set BUTC "/opt/dcelocal/bin/butc"
    set FTS  /opt/dcelocal/bin/fts

    set RPCGROUP /.:/subsys/dce/dfs/bak
    set TAPECONFIG /opt/dcelocal/var/dfs/backup/TapeConfig
    set BAKSERVER bakserver
    
    # should the tests be verbose; use "-verbose" as value if desired
    set bak_verbose ""

    # directory (in DFS) where the tests create fileset mount points
    set bak_test_directory "/.:/fs/bak_test"

    # Remote Configuration
    # shell to be used when logging in remote to run bak, butc
    set remote_shell "/bin/csh"

    # command to be used in the above given shell to get command result status
    set remote_shell_status_cmd {echo $status}

    # shell prompt when using above shell
    set remote_prompt "##TEST## "

    # shell command to set shell prompt when using above shell
    set remote_prompt_cmd "set prompt"

    # host on which to run the bak program
    set bak_host  ""

    # host on which to run the butc program
    set butc_host ""

    # host on which filesets created by the test would be located
    set ftserver_host testlab-7-207.transarc.com

    # host used to restore filesets dumped to tape
    set alternate_ftserver_host testlab-7-207.transarc.com

    # aggregate on ftserver_host on which filesets would be created by the test
    set fileset_aggr epi0

    # device name of the fileset_aggr aggregate
    set fileset_aggr_device /dev/epi0

    # aggregate (on alternate_ftserver_host) on which filesets are restored
    set alternate_fileset_aggr epi1

    # device name of alternate_fileset_aggr aggregate
    set alternate_fileset_aggr_device /dev/epi1

    # should the -verbose option for fts command be used? If not use ""
    set fts_verbose "-verbose"

    # Butc Configuration
    # TCID to be used for butc. You don't have to edit TapeConfig file
    set butc_tcid 1

    # device corresponding to the above TCID
    set butc_device /dev/rmt0

    # tape size corresponding to the above TCID
    set butc_tape_size 140M

    # file mark size corresponding to above TCID
    set butc_file_mark_size 200K

    # location of the TapeConfig file; this will be saved before reuse
    set tapeconfig_file "/opt/dcelocal/var/dfs/backup/TapeConfig"

    # Login Information 
    # used for remote logins and authentication purposes. Has to be entered
    # if bak_host or butc_host is something other than "".
    set unix_user "rootl"
    set unix_password "./.cshrc"
    set dce_user  cell_admin
    set dce_password "-dce-"
    set afs_user  ""
    set afs_password ""

    # prompt used by the bak program; usually this is "bak>". No change 
    set prompt "bak> "

    # value of expect timeout if a match fails. No change
    set bak_timeout 400
    set timeout $bak_timeout

    # telnetting may cause a problem because we don't know what prompt to
    # expect when first logging in.  Because of this we assume success
    # if nothing 'bad' is seen.  However we may not want to wait our default
    # timeout time ($bak_timeout) so the following variable is typically
    # set lower.  If telnet is not succeeding, one thing to try is to
    # increase the value of the following variable.
    set telnet_timeout 30

    # variables used in savedb and restoredb tests for saving, deleting and
    # later restoring the database files.
    set backup_dir /opt/dcelocal/var/dfs/backup
    set bkdb_file1 bkdb.DB0
    set bkdb_file2 bkdb.DBSYS1


   # restoredb specific variables

    # tcid's to use
    set dbr_butc_tcid0 0
    set dbr_butc_tcid1 1
    set dbr_butc_tcid2 1023

    # Default server to use.
    set dbr_server /.../dce1.1/hosts/testlab-7-207

    # Aggregate to use to build a fileset family entry - i.e. it
    # justs needs to be a valid aggregate, we aren't going to use it.
    set dbr_aggr epi0

    # Name of test fileset to be created and mounted in /:/
    set dbr_fileset restoredb_test

   # savedb specific variables

    # tcid's to use
    set sa_butc_tcid0 0
    set sa_butc_tcid1 1
    set sa_butc_tcid2 1023

    # Device name of the tape drive associated with sa_butc_tcid.
    # Used in test savedb-1.4b to remove (write over) the tape label.
    set sa_tape_device /dev/rmt0

    # Default server to use.
    set sa_server /.../dce1.1/hosts/testlab-7-207

    # Aggregate to use to build a fileset family entry - i.e. it
    # justs needs to be a valid aggregate, we aren't going to use it.
    set sa_aggr epi0

    # Fileset to use to build a fileset family entry and some dump levels.
    # It doesn't have to exist.  Should not need to be changed.
    set sa_fileset savedb_test

   # restoredisk specific variables

    # tcid's to use
    set dkr_butc_tcid0 0
    set dkr_butc_tcid1 1
    set dkr_butc_tcid2 1023

    # Default server to use.
    set dkr_server /.../dce1.1/hosts/testlab-7-207

    # Second server needed to test restoring to another server.
    set dkr_server2 /.../dce1.1/hosts/testlab-7-207

    # Default aggregate to use.
    set dkr_aggr epi1

    # Second aggregate needed to test restoring to another aggregate.
    set dkr_aggr2 epi2

    # Device name associated with dkr_aggr
    set dkr_device /dev/epi1

    # Device name associated with dkr_aggr2
    set dkr_device2 /dev/epi2

    # Name of test fileset to be created and mounted in /:/
    set dkr_fileset restoredisk_test

GENERIC-PRE
    send_user "\ngeneric-pre\n"

GENERIC-POST
    send_user "\ngeneric-post\n"

GENERIC-CLEANUP
    send_user "\ngeneric-cleanup\n"


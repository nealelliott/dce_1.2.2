# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994, 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# 
# 
# HISTORY
# $Log: if.test,v $
# Revision 1.1.4.2  1996/03/11  02:31:47  marty
# 	Update OSF copyright years
# 	[1996/03/10  19:38:15  marty]
#
# Revision 1.1.4.1  1995/12/11  15:22:06  root
# 	Submit
# 	[1995/12/11  14:34:36  root]
# 
# Revision 1.1.2.1  1994/09/28  21:48:56  melman
# 	moved admin tests to test/functional
# 	[1994/09/28  21:16:27  melman]
# 
# Revision 1.1.4.2  1994/06/10  20:17:22  devsrc
# 	cr10872 - fixed copyright
# 	[1994/06/10  16:57:03  devsrc]
# 
# Revision 1.1.4.1  1994/03/01  21:04:21  rousseau
# 	Moved from source code tree (CR 10039).
# 	[1994/03/01  21:00:06  rousseau]
# 
# Revision 1.1.2.1  1993/12/12  01:31:38  rousseau
# 	Initial 7.3 version.
# 	[1993/12/12  01:29:03  rousseau]
# 
# $EndLog$
# Commands covered:  if
#
# This file contains a collection of tests for one or more of the Tcl
# built-in commands.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 1991-1993 The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in
# all copies of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
# DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT
# OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF
# CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
# ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATION TO
# PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
#
# $Header: /u0/rcs_trees/dce/rcs/test/functional/admin/tcl_dce/if.test,v 1.1.4.2 1996/03/11 02:31:47 marty Exp $ (Berkeley)

if {[string compare test [info procs test]] == 1} then {source defs}

test if-1.1 {taking proper branch} {
    set a {}
    if 0 {set a 1} else {set a 2}
    set a
} 2
test if-1.2 {taking proper branch} {
    set a {}
    if 1 {set a 1} else {set a 2}
    set a
} 1
test if-1.3 {taking proper branch} {
    set a {}
    if 1<2 {set a 1}
    set a
} 1
test if-1.4 {taking proper branch} {
    set a {}
    if 1>2 {set a 1}
    set a
} {}
test if-1.5 {taking proper branch} {
    set a {}
    if 0 {set a 1} else {}
    set a
} {}
test if-1.5 {taking proper branch} {
    set a {}
    if 0 {set a 1} elseif 1 {set a 2} elseif 1 {set a 3} else {set a 4}
    set a
} {2}
test if-1.6 {taking proper branch} {
    set a {}
    if 0 {set a 1} elseif 0 {set a 2} elseif 1 {set a 3} else {set a 4}
    set a
} {3}
test if-1.7 {taking proper branch} {
    set a {}
    if 0 {set a 1} elseif 0 {set a 2} elseif 0 {set a 3} else {set a 4}
    set a
} {4}


test if-2.1 {optional then-else args} {
    set a 44
    if 0 then {set a 1} elseif 0 then {set a 3} else {set a 2}
    set a
} 2
test if-2.2 {optional then-else args} {
    set a 44
    if 1 then {set a 1} else {set a 2}
    set a
} 1
test if-2.3 {optional then-else args} {
    set a 44
    if 0 {set a 1} else {set a 2}
    set a
} 2
test if-2.4 {optional then-else args} {
    set a 44
    if 1 {set a 1} else {set a 2}
    set a
} 1
test if-2.5 {optional then-else args} {
    set a 44
    if 0 then {set a 1} {set a 2}
    set a
} 2
test if-2.6 {optional then-else args} {
    set a 44
    if 1 then {set a 1} {set a 2}
    set a
} 1
test if-2.7 {optional then-else args} {
    set a 44
    if 0 then {set a 1} else {set a 2}
    set a
} 2
test if-2.8 {optional then-else args} {
    set a 44
    if 0 then {set a 1} elseif 0 {set a 2} elseif 0 {set a 3} {set a 4}
    set a
} 4

test if-3.1 {return value} {
    if 1 then {set a 22; concat abc}
} abc
test if-3.2 {return value} {
    if 0 then {set a 22; concat abc} elseif 1 {concat def} {concat ghi}
} def
test if-3.3 {return value} {
    if 0 then {set a 22; concat abc} else {concat def}
} def
test if-3.4 {return value} {
    if 0 then {set a 22; concat abc}
} {}
test if-3.5 {return value} {
    if 0 then {set a 22; concat abc} elseif 0 {concat def}
} {}

test if-4.1 {error conditions} {
    list [catch {if} msg] $msg
} {1 {wrong # args: no expression after "if" argument}}
test if-4.2 {error conditions} {
    list [catch {if {[error "error in condition"]}} msg] $msg
} {1 {error in condition}}
test if-4.3 {error conditions} {
    list [catch {if 2} msg] $msg
} {1 {wrong # args: no script following "2" argument}}
test if-4.4 {error conditions} {
    list [catch {if 2 then} msg] $msg
} {1 {wrong # args: no script following "then" argument}}
test if-4.5 {error conditions} {
    list [catch {if 2 the} msg] $msg
} {1 {invalid command name: "the"}}
test if-4.6 {error conditions} {
    list [catch {if 2 then {[error "error in then clause"]}} msg] $msg
} {1 {error in then clause}}
test if-4.7 {error conditions} {
    list [catch {if 0 then foo elseif} msg] $msg
} {1 {wrong # args: no expression after "elseif" argument}}
test if-4.8 {error conditions} {
    list [catch {if 0 then foo elsei} msg] $msg
} {1 {invalid command name: "elsei"}}
test if-4.9 {error conditions} {
    list [catch {if 0 then foo elseif 0 bar else} msg] $msg
} {1 {wrong # args: no script following "else" argument}}
test if-4.10 {error conditions} {
    list [catch {if 0 then foo elseif 0 bar els} msg] $msg
} {1 {invalid command name: "els"}}
test if-4.11 {error conditions} {
    list [catch {if 0 then foo elseif 0 bar else {[error "error in else clause"]}} msg] $msg
} {1 {error in else clause}}

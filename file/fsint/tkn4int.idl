/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 */
/*
 * HISTORY
 * $Log: tkn4int.idl,v $
 * Revision 1.1.60.1  1996/10/02  17:47:11  damon
 * 	Newest DFS from Transarc
 * 	[1996/10/01  18:37:38  damon]
 *
 * Revision 1.1.55.2  1994/06/09  14:08:04  annie
 * 	fixed copyright in src/file
 * 	[1994/06/09  13:22:59  annie]
 * 
 * Revision 1.1.55.1  1994/02/04  20:18:52  devsrc
 * 	Merged from 1.0.3a to 1.1
 * 	[1994/02/04  15:13:08  devsrc]
 * 
 * Revision 1.1.53.1  1993/12/07  17:24:25  jaffe
 * 	1.0.3a update from Transarc
 * 	[1993/12/03  15:23:52  jaffe]
 * 
 * Revision 1.1.4.6  1993/01/21  19:36:20  zeliff
 * 	Embedding copyright notices
 * 	[1993/01/19  19:50:05  zeliff]
 * 
 * Revision 1.1.4.5  1993/01/13  17:49:46  shl
 * 	Transarc delta: cfe-ot4029-catch-more-unportable-types 1.1
 * 	  Selected comments:
 * 	    Convert even the debugging interface to more obviously portable types.
 * 	    Use unsigned32 rather than unsigned long in the .idl file.
 * 	[1993/01/12  20:59:03  shl]
 * 
 * Revision 1.1.4.4  1992/11/24  17:48:28  bolinger
 * 	Change include file install directory from .../afs to .../dcedfs.
 * 	[1992/11/22  17:59:36  bolinger]
 * 
 * Revision 1.1.4.3  1992/09/25  18:14:06  jaffe
 * 	Transarc delta: kazar-ot4474-sys-v-locking-async-grant 1.2
 * 	  Selected comments:
 * 	    start work on async grant
 * 	    add new call to revoke API
 * 	    finish work on async grant
 * 	[1992/09/23  19:11:07  jaffe]
 * 
 * Revision 1.1.4.2  1992/08/31  19:46:10  jaffe
 * 	Transarc delta: cfe-ot4029-portable-rpc-data-types 1.2
 * 	  Selected comments:
 * 	    If ``long'' could possibly mean ``64 bits'' any time soon, we need to keep
 * 	    our RPC interfaces from breaking.
 * 	    see above
 * 	    More of the same.  Forgot a couple of .idl files, and needed to change
 * 	    a couple of procedure signatures to match.
 * 	[1992/08/30  02:27:18  jaffe]
 * 
 * Revision 1.1.2.2  1992/05/20  19:53:12  mason
 * 	Transarc delta: cfe-ot2605-tsr-i-f-changes 1.5
 * 	  Files modified:
 * 	    cm: cm_scache.h
 * 	    config: common_data.acf, common_data.idl, common_def.h
 * 	    fshost: fshs_errs.et
 * 	    fsint: afs4int.acf, afs4int.idl, tkn4int.acf, tkn4int.idl
 * 	    host: hs_errs.et; px: px_repops.c; rep: rep_main.c, repser.h
 * 	    userInt/fts: volc_tokens.c; xvolume: volume.h
 * 	  Selected comments:
 * 	    This delta should encompass the interface changes associated with token
 * 	    state recovery (over server crashes, network partitions, fileset moves,
 * 	    and other things).
 * 	    This delta now captures the interface changes for real.  It includes RPC interface
 * 	    changes, new error codes, and new status bits.  It also includes incomplete changes
 * 	    to fts to support the new interface.
 * 	    Specify the new RPC procedure and the changed args to TKN_InitTokenState,
 * 	    and some TKN_FLAG_xxx flags.
 * 	    More TSR interface fallout, mostly to the new model.
 * 	    Fix a merge error.
 * 	    Fixing more merge and syntax errors
 * 	[1992/05/20  11:32:03  mason]
 * 
 * Revision 1.1  1992/01/19  02:51:20  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/*
*/
/*
 *      Copyright (C) 1996, 1990 Transarc Corporation
 *      All rights reserved.
 */
/* $Header: /u0/rcs_trees/dce/rcs/file/fsint/tkn4int.idl,v 1.1.60.1 1996/10/02 17:47:11 damon Exp $ */

/*
 *
 * Declaration of all structures/rpc calls required for the AFS (4.0) 
 * Token Manager Interface
 *
 */

[
uuid(4d37f2dd-ed96-0000-02c0-37cf1e000000),
version(4.0)
/* provider_version(1) */
]

interface TKN4Int
{

import "dcedfs/common_data.idl";


error_status_t TKN_Probe		/* May be defined as "idempotent"  */
(/* provider_version(1) */
	[in]    handle_t	h
);

/* Definitions for the Flags field. */
const unsigned32 TKN_FLAG_BACK_UP = 0x001;
	/* this is an unannounced TKN_InitTokenState call from a recovering server */

const unsigned32 TKN_FLAG_CRASHED = 0x002;
	/* the file exporter is currently in a post-crash token-recovery phase */

const unsigned32 TKN_FLAG_DISALLOW_SAME = 0x004;
	/* this recovery cannot accept AFS_FLAG_TOKENID AFS_GetToken calls */

const unsigned32 TKN_FLAG_NEW_IF = 0x008;
	/* this call is made to set the timer values; the tokens are OK */

error_status_t TKN_InitTokenState	
(/* provider_version(1) */
	[in]    handle_t	h,
	[in]	unsigned32	Flags,
	[in]	unsigned32	hostLifeGuarantee,
	[in]	unsigned32	hostRPCGuarantee,
	[in]	unsigned32	deadServerTimeout,
	[in]	unsigned32	serverRestartEpoch,
	[in]	unsigned32	serverSizesAttrs,
	[in]	unsigned32	spare2,
	[in]	unsigned32	spare3,
	[out]	unsigned32	*spare4,
	[out]	unsigned32	*spare5,
	[out]	unsigned32	*spare6
);

error_status_t TKN_TokenRevoke
(/* provider_version(1) */
	[in]    handle_t	h,
	[in, out] afsRevokes 	*revokeDescp
);

error_status_t TKN_GetCellName
(/* provider_version(1) */
	[in]    handle_t	h,
	[in]	afsHyper	*Cellp,
	[out]	NameString_t 	CellNamep
);

/*
 * This are really debugging routines conveniently residing in the
 * token interface...
 */

error_status_t TKN_GetLock
(/* provider_version(1) */
	[in]    handle_t	h,
	[in] 	unsigned32	index,
	[out]	afsDBLock 	*lock
);

error_status_t TKN_GetCE
(/* provider_version(1) */
	[in]    handle_t	h,
	[in] 	unsigned32	index,
	[out]	afsDBCacheEntry *ce
);

error_status_t TKN_GetServerInterfaces
(/* provider_version(1) */
	[in]    handle_t	h,
	[in, out] dfs_interfaceList *serverInterfacesP
);

error_status_t TKN_SetParams
(/* provider_version(1) */
	[in]		handle_t	h,
	[in]		unsigned32 Flags,
	[in, out]		afsConnParams *paramsP
);

error_status_t TKN_AsyncGrant
(/* provider_version(1) */
	[in]		handle_t	h,
	[in]		afsFid		*grantedFileIDp,
	[in]		afsToken	*grantedTokenP,
	[in]		long		grantedRequestID
);

}

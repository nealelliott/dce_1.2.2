/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: vrec.idl,v $
 * Revision 1.1.4.2  1996/03/11  02:27:58  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  19:59:59  marty]
 *
 * Revision 1.1.4.1  1995/12/11  20:13:03  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:46:20  root]
 * 
 * Revision 1.1.2.4  1993/01/25  19:30:31  bbelch
 * 	Fix duplicate log
 * 	[1993/01/25  17:47:46  bbelch]
 * 
 * Revision 1.1.2.3  1993/01/13  19:50:56  bbelch
 * 	Embedding copyright notice
 * 	[1993/01/06  18:17:58  bbelch]
 * 
 * Revision 1.1.2.2  1992/10/12  17:53:30  cuti
 * 	Remove hardcoded protocol seq and endpoint instead using all_protoseq.
 * 	[1992/10/09  21:28:08  cuti]
 * 
 * Revision 1.1  1992/01/19  03:38:10  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/*
#
#
# Copyright (c) 1991 by
#    Hewlett-Packard Company, Palo Alto, Ca.
#
# Permission to use, copy, modify, and distribute this
# software and its documentation for any purpose and without
# fee is hereby granted, provided that the above copyright
# notice appear in all copies and that both that copyright
# notice and this permission notice appear in supporting
# documentation, and that the name of Hewlett-Packard Company not
# be used in advertising or publicity pertaining to distribution
# of the software without specific, written prior permission.
# Hewlett-Packard Company makes no representations about the
# suitability of this software for any purpose.  It is provided
# "as is" without express or implied warranty.
#
#
# DCE API Test
#
*/



[uuid(41248a5e-b000-0000-0d00-00c366000000),
 version(2)
]

/*
 * v a r r e c t e s t
 *
 * Interface to test nidl's handling of union (variant record) types.
 */

interface varrectest {

const long int varrectest_c1 = 20;

typedef union switch (short tag) {
    case 0:
    case 2:
        struct {
                long int a, b;
        } case_0;
    case 1:
        struct {
                float x, y;
        } case_1;
    case 3:
        [v1_array] char s[varrectest_c1];
} varrectest_t1;

typedef union switch (short tag) tu {
    case 0:
    case 2:
        struct {
            long int a, b;
        } c0;
    case 1:
        struct {
            float x, y;
        } c1;
    case 3:
        [v1_array] char s[20];
} varrectest_t2;

void varrectest_op1(
    [in] handle_t h,
    [in] varrectest_t1 i,
    [out] varrectest_t1 *o
);

void varrectest_op2(
    [in] handle_t h,
    [in] varrectest_t2 i,
    [out] varrectest_t2 *o
);

void varrectest_op3(
    [in] handle_t h,
    [in] varrectest_t1 i
);

void varrectest_op4(
    [in] handle_t h,
    [in] short tag_to_use,
    [out] varrectest_t1 *o
);

}

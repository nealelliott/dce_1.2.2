/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: cover_array_ool.idl,v $
 * Revision 1.1.4.2  1996/03/11  02:11:53  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  19:52:31  marty]
 *
 * Revision 1.1.4.1  1995/12/11  20:01:47  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:29:58  root]
 * 
 * Revision 1.1.2.2  1993/01/07  19:52:19  bbelch
 * 	Embedding copyright notice
 * 	[1993/01/06  13:31:29  bbelch]
 * 
 * Revision 1.1  1992/01/19  03:32:10  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/*
*/
[pointer_default(ptr), uuid(d6d0b980-6769-11c9-81cd-08002b0ecef1)]
interface cover_array_ool
/*
 * Test to fill in some of the coverage gaps around arrays.
 */
{
const long NUM_DOUBLE       = 3174;
const long NUM_BYTE         = 256;

const long NUM_ARRAY        = 10;
const long SIZE_ARRAY_IN    = 7;
const long SIZE_ARRAY_OUT   = 4;

const long NUM_UNION        = 50;
const long SIZE_UNION       = 30;
const long DATA_LIM_UNION   = 23;

typedef byte array_t[NUM_BYTE];

typedef enum {char_k, long_k, double_k} sw_kind_t;

typedef union switch(sw_kind_t sw)
{
case char_k:    char c;
case long_k:    long l;
case double_k:  double d;
} union_t;

long io_double_op       /* in,out array of double */
(
    [in] handle_t h,
    [in,out] double a[NUM_DOUBLE]
);

long io_array_op        /* in,out conformant array of arrays */
(
    [in] handle_t h,
    [in,out,size_is(*s)] array_t a[],
    [in,out] long *s
);

long i_c_union_op       /* in conformant array of unions */
(
    [in] handle_t h,
    [in,size_is(s)] union_t a[],
    [in] long s
);

long o_cv_union_op      /* out conformant varying array of unions */
(
    [in] handle_t h,
    [out,size_is(s),length_is(*l)] union_t a[],
    [in] long s,
    [out] long *l
);
}

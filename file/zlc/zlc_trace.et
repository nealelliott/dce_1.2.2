#
# (C) Copyright Transarc Corporation 1995, 1994.  ALL RIGHTS RESERVED.
#

error_table 2 zzl
	ec ZLC_TRACE_RCSID,
	"$Header: /afs/tr/project/fs/dev/dfs-dev/src/file/zlc/RCS/zlc_trace.et,v 1.2 1995/10/24 14:32:23 moyer Exp $"

	ec ZLC_TRACE_ENTER_TRYREMOVE,
	"zlc_TryRemove(%#lx, %x.%x.%x.%x, %ld, %ld) entered"
	ec ZLC_TRACE_TRYREMOVE_ITEM,
	"zlc_TryRemove: tokenID=%u,,%u, flags=%#lx, refCount=%ld, wait=%ld"
	ec ZLC_TRACE_EXIT_TRYREMOVE,
	"zlc_TryRemove returning"

	ec ZLC_TRACE_ENTER_GETDELETETOKEN,
	"zlc_GetDeleteToken(tokenID=%u,,%u, flags=%#lx, refCount=%ld, wait=%ld) entered"
	ec ZLC_TRACE_GETDELETETOKEN_NOVOL,
	"zlc_GetDeleteToken: volreg_Lookup failed, code=%ld"
	ec ZLC_TRACE_GETDELETETOKEN_MOVE,
	"zlc_GetDeleteToken: volume being moved, volstates=%#lx"
	ec ZLC_TRACE_GETDELETETOKEN_WAIT_REMMOVE,
	"zlc_GetDeleteToken: volume being moved, volstates=%#lx, wait=%ld"
	ec ZLC_TRACE_GETDELETETOKEN_WAIT_LCLMOVE,
	"zlc_GetDeleteToken: volume being moved locally, wait=%ld"
	ec ZLC_TRACE_GETDELETETOKEN_REMOVE_GRANTED,
	"zlc_GetDeleteToken: remove granted"
	ec ZLC_TRACE_GETDELETETOKEN_REQUEST_QUEUED,
	"zlc_GetDeleteToken: request queued"
	ec ZLC_TRACE_EXIT_GETDELETETOKEN,
	"zlc_GetDeleteToken returning"

	ec ZLC_TRACE_ENTER_CLEANVOLUME,
	"zlc_CleanVolume(%u,,%u) entered"
	ec ZLC_TRACE_EXIT_CLEANVOLUME,
	"zlc_CleanVolume returning"

	ec ZLC_TRACE_MGR_PRUNING,
	"zlc_Mgr: pruning remove queue"
	ec ZLC_TRACE_MGR_WAITING,
	"zlc_Mgr: waiting for %ld seconds"

	ec ZLC_TRACE_ENTER_PRUNEQUEUE,
	"zlc_PruneQueue() entered"
	ec ZLC_TRACE_PRUNEQUEUE_GRANTED,
	"zlc_PruneQueue: %x.%x.%x.%x: token granted--returning token"
	ec ZLC_TRACE_PRUNEQUEUE_CLEAN,
	"zlc_PruneQueue: %x.%x.%x.%x: freeing clean trp"
	ec ZLC_TRACE_PRUNEQUEUE_WAIT_TRYTOKEN,
	"zlc_PruneQueue: %x.%x.%x.%x: trying for delete token"
	ec ZLC_TRACE_PRUNEQUEUE_WAIT,
	"zlc_PruneQueue: %x.%x.%x.%x: waiting until %ld"
	ec ZLC_TRACE_PRUNEQUEUE_TSRREPWAIT,
	"zlc_PruneQueue: %x.%x.%x.%x: waiting until %ld for tsr on replicated ft"
	ec ZLC_TRACE_PRUNEQUEUE_TSRWAIT,
	"zlc_PruneQueue: %x.%x.%x.%x: waiting until %ld"
	ec ZLC_TRACE_PRUNEQUEUE_TSR_TRYTOKEN,
	"zlc_PruneQueue: %x.%x.%x.%x: trying for delete token"
	ec ZLC_TRACE_EXIT_PRUNEQUEUE,
	"zlc_PruneQueue returning %ld"

	ec ZLC_TRACE_ENTER_WAKEUPMGR,
	"zlc_WakeupMgr() entered"

	ec ZLC_TRACE_ENTER_FREEDOWNTOQUOTA,
	"[zlc]FreeDownToQuota() entered, list size=%ld"
	ec ZLC_TRACE_FD2Q_MORIBUND,
	"[zlc]FreeDownToQuota: %x.%x.%x.%x: moribund"
	ec ZLC_TRACE_FD2Q_ASYNC,
	"[zlc]FreeDownToQuota: adding entry to async list: tokenID=%u,,%u, flags=%#lx, refCount=%ld, wait=%ld"
	ec ZLC_TRACE_FD2Q_DALLY,
	"[zlc]FreeDownToQuota: adding entry to dally list: tokenID=%u,,%u, flags=%#lx, refCount=%ld, wait=%ld"
	ec ZLC_TRACE_FD2Q_WAIT,
	"[zlc]FreeDownToQuota: adding entry to wait list: tokenID=%u,,%u, flags=%#lx, refCount=%ld, wait=%ld"
	ec ZLC_TRACE_FD2Q_SKIP,
	"[zlc]FreeDownToQuota: skipping entry: tokenID=%u,,%u, flags=%#lx, refCount=%ld, wait=%ld"
	ec ZLC_TRACE_EXIT_FREEDOWNTOQUOTA,
	"[zlc]FreeDownToQuota returning, vnodes held=%ld"

	ec ZLC_TRACE_ENTER_SETRESTARTSTATE,
	"zlc_SetRestartState(%ld) entered"
	ec ZLC_TRACE_EXIT_SETRESTARTSTATE,
	"zlc_SetRestartState returning"

	ec ZLC_TRACE_ENTER_ASYNCGRANT,
	"zlc_AsyncGrant(%#lx, %#lx, %#lx) entered"
	ec ZLC_TRACE_ASYNCGRANT_FOUND,
	"zlc_AsyncGrant: found entry: tokenID=%u,,%u, flags=%#lx, refCount=%ld, wait=%ld"
	ec ZLC_TRACE_ASYNCGRANT_NOVOL,
	"zlc_AsyncGrant: volreg_Lookup failed, code=%ld"
	ec ZLC_TRACE_ASYNCGRANT_MOVE,
	"zlc_AsyncGrant: volume being moved, volstates=%#lx"
	ec ZLC_TRACE_ASYNCGRANT_WAIT_REMMOVE,
	"zlc_AsyncGrant: volume being moved, volstates=%#lx, wait=%ld"
	ec ZLC_TRACE_ASYNCGRANT_GRANTED,
	"zlc_AsyncGrant: %x.%x.%x.%x: token granted"
	ec ZLC_TRACE_ASYNCGRANT_NOTFOUND,
	"zlc_AsyncGrant: entry not found"

	ec ZLC_TRACE_ENTER_REVOKETOKEN,
	"zlc_RevokeToken(list-len=%ld, first-fid=%x.%x.%x.%x) entered"

	ec ZLC_TRACE_ASYNCGRANT_ENTRY_FOUND,
	"zlc_AsyncGrant: found entry: fid=%x.%x.%x.%x, state=%ld"
	ec ZLC_TRACE_ASYNCGRANT_STATETRANS,
	"zlc_AsyncGrant: fid=%x.%x.%x.%x, from-state=%ld, to-state=%ld"
	ec ZLC_TRACE_EXIT_ASYNCGRANT,
	"zlc_AsyncGrant returning"

	ec ZLC_TRACE_CLEANVOLUME_STATETRANS,
	"zlc_CleanVolume: fid=%x.%x.%x.%x, from-state=%ld, to-state=%ld"

	ec ZLC_TRACE_ENTER_GETDELETETOKEN_2,
	"zlc_GetDeleteToken(fid=%x.%x.%x.%x) entered"
	ec ZLC_TRACE_GETDELETETOKEN_OFD_GRANTED,
	"zlc_GetDeleteToken: fid=%x.%x.%x.%x, OFD granted"
	ec ZLC_TRACE_GETDELETETOKEN_OFD_QUEUED,
	"zlc_GetDeleteToken: fid=%x.%x.%x.%x, OFD queued"
	ec ZLC_TRACE_GETDELETETOKEN_TKMGETERR,
	"zlc_GetDeleteToken: fid=%x.%x.%x.%x, tkm_GetToken error, code=%ld"
	ec ZLC_TRACE_GETDELETETOKEN_TKMRETURNERR,
	"zlc_GetDeleteToken: fid=%x.%x.%x.%x, tkm_ReturnToken error, code=%ld"
	ec ZLC_TRACE_GETDELETETOKEN_STATETRANS,
	"zlc_GetDeleteToken: fid=%x.%x.%x.%x, from-state=%ld, to-state=%ld"

	ec ZLC_TRACE_ENTER_TRYREMOVE_2,
	"zlc_TryRemove(%#lx, %x.%x.%x.%x) entered"
	ec ZLC_TRACE_TRYREMOVE_INITSTATE,
	"zlc_TryRemove: fid=%x.%x.%x.%x, init-state=%ld"

	ec ZLC_TRACE_GOTONEXTSTATE_NOVOL,
	"zlc_GotoNextState: fid=%x.%x.%x.%x, volreg_Lookup failed, code=%ld"

	ec ZLC_TRACE_ENTER_FD2T,
	"[zlc]FreeDownToTarget(vnodes-held=%ld) entered"
	ec ZLC_TRACE_FD2T_STATETRANS,
	"[zlc]FreeDownToTarget: fid=%x.%x.%x.%x, from-state=%ld, to-state=%ld"
	ec ZLC_TRACE_EXIT_FD2T,
	"[zlc]FreeDownToTarget(vnodes-held=%ld) returning"

	ec ZLC_TRACE_ENTER_PRUNEQUEUE_2,
	"[zlc]PruneQueue() entered"
	ec ZLC_TRACE_PRUNEQUEUE_STATETRANS,
	"[zlc]PruneQueue: fid=%x.%x.%x.%x, from-state=%ld, to-state=%ld"
	ec ZLC_TRACE_EXIT_PRUNEQUEUE_2,
	"[zlc]PruneQueue() returning %lu"

	ec ZLC_TRACE_ENTER_WAKEUPMGR_2,
	"zlc_WakeupMgr(%lu) entered"

	ec ZLC_TRACE_MGR_WAKETIME,
	"[zlc]MgrThread: sleeping until time %lu"

	ec ZLC_TRACE_EXIT_INIT,
	"zlc_Init() returning %ld"
end

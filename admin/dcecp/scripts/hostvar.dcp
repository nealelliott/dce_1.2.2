# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# 
# 
# @HP_COPYRIGHT@
# 
# HISTORY
# $Log: hostvar.dcp,v $
# Revision 1.1.4.3  1996/10/03  17:50:24  arvind
# 	Merge changes.
# 	[1996/09/03  17:09 UTC  truitt  /main/DCE_1.2.2/truitt_dcecp_pk3/1]
#
# 	CHFts19924: Fix syntax error in 'if' statement.
# 	[1996/07/08  16:16 UTC  truitt  /main/DCE_1.2.2/2]
#
# 	Merge changes.
# 	[1996/07/01  15:00 UTC  truitt  /main/DCE_1.2.2/truitt_dcecp_pk/1]
#
# 	Minor changes for update to latest HP changes and enhancements.
# 	[1996/05/30  21:15 UTC  mullan_s  /main/DCE_1.2.2/1]
#
# 	Merge krb5 work to DCE1.2.2 mainline
# 	[1996/05/29  20:31 UTC  mullan_s  /main/mullan_dce1.2.2_krb5_drop/1]
#
# 	Update binary compat status for new krb5ccachevno (3).
# 	[1996/05/16  17:03 UTC  mullan_s  /main/DCE_1.2/mullan_dce_k5_bsd44_rutils/2]
#
# 	Code review comments:
# 	1) Remove underscores & numerals from variable names
# 	2) Truncate help message to less than 65 chars
# 	[1996/05/03  15:49 UTC  mullan_s  /main/DCE_1.2/mullan_dce_k5_bsd44_rutils/1]
#
# 	Add support for setting and displaying kerberos keytab and ccache
# 	version numbers to the hostvar command.
# 	[1996/01/03  21:16 UTC  psn  /main/DCE_1.2/1]
#
# Revision 1.1.4.2  1996/08/09  11:52:20  arvind
# 	Merge changes.
# 	[1996/07/01  15:00 UTC  truitt  /main/DCE_1.2.2/truitt_dcecp_pk/1]
# 
# 	Minor changes for update to latest HP changes and enhancements.
# 	[1996/05/30  21:15 UTC  mullan_s  /main/DCE_1.2.2/1]
# 
# 	Merge krb5 work to DCE1.2.2 mainline
# 	[1996/05/29  20:31 UTC  mullan_s  /main/mullan_dce1.2.2_krb5_drop/1]
# 
# 	Update binary compat status for new krb5ccachevno (3).
# 	[1996/05/16  17:03 UTC  mullan_s  /main/DCE_1.2/mullan_dce_k5_bsd44_rutils/2]
# 
# 	Code review comments:
# 	1) Remove underscores & numerals from variable names
# 	2) Truncate help message to less than 65 chars
# 	[1996/05/03  15:49 UTC  mullan_s  /main/DCE_1.2/mullan_dce_k5_bsd44_rutils/1]
# 
# 	Add support for setting and displaying kerberos keytab and ccache
# 	version numbers to the hostvar command.
# 	[1996/01/03  21:16 UTC  psn  /main/DCE_1.2/1]
# 
# Revision 1.1.4.1  1996/06/04  21:43:04  arvind
# 	Merge krb5 work to DCE1.2.2 mainline
# 	[1996/05/29  20:31 UTC  mullan_s  /main/mullan_dce1.2.2_krb5_drop/1]
# 
# 	Update binary compat status for new krb5ccachevno (3).
# 	[1996/05/16  17:03 UTC  mullan_s  /main/DCE_1.2/mullan_dce_k5_bsd44_rutils/2]
# 
# 	Truitt code review comments:
# 	1) Remove underscores & numerals from variable names
# 	2) Truncate help message to less than 65 chars
# 	[1996/05/03  15:49 UTC  mullan_s  /main/DCE_1.2/mullan_dce_k5_bsd44_rutils/1]
# 
# 	Add support for setting and displaying kerberos keytab and ccache
# 	version numbers to the hostvar command.
# 	[1996/01/03  21:16 UTC  psn  /main/DCE_1.2/1]
# 
# 	Merge chfts15887 into HPDCE02
# 	[1995/10/17  15:18 UTC  kevins  /main/HPDCE02/8]
# 
# 	Need to modify the method for setting script debuging variable.
# 	[1995/10/17  15:03 UTC  kevins  /main/HPDCE02/kevins_chfts15887/1]
# 
# 	Merge message changes.
# 	[1995/10/10  14:54 UTC  truitt  /main/HPDCE02/7]
# 
# 	CHFts16537: Make sure all help messages fit in the eighty character limit.
# 	[1995/10/06  13:50 UTC  truitt  /main/HPDCE02/truitt_dcecp_chfts49/1]
# 
# 	Merge.
# 	[1995/05/01  18:45 UTC  truitt  /main/HPDCE02/6]
# 
# 	CHFts14653: Add new variable for binary compat.
# 	[1995/05/01  18:44 UTC  truitt  /main/HPDCE02/truitt_dcecp_chfts26/1]
# 
# 	Merge message and option work.
# 	[1995/03/31  18:48 UTC  truitt  /main/HPDCE02/5]
# 
# 	CHFts14799: Change one of the options so it no longer
# 	contains an underscore character.
# 	CHFts14890: Change the operations message.
# 	[1995/03/31  18:47 UTC  truitt  /main/HPDCE02/truitt_mothra_chfts24/1]
# 
# 	Set another internal variable when binary compat is set.
# 	[1995/03/09  15:55 UTC  truitt  /main/HPDCE02/4]
# 
# 	Add another internal variable when the sec_binary_compat
# 	flag is toggled.
# 	[1995/03/09  15:52 UTC  truitt  /main/HPDCE02/truitt_dcecp_chfts19/1]
# 
# 	Fix copyright.
# 	[1995/02/02  16:56 UTC  truitt  /main/HPDCE02/3]
# 
# 	Fix copyright.
# 	[1995/02/02  16:55 UTC  truitt  /main/HPDCE02/truitt_dcecp_chfts10/1]
# 
# 	Merge initial hostvar file.
# 	[1995/02/02  15:51 UTC  truitt  /main/HPDCE02/1]
# 
# 	CHFts14262: Add hostvar command.
# 	[1995/02/02  15:49 UTC  truitt  /main/truitt_dcecp_chfts08/1]
# 
# Revision 1.1.2.2  1996/03/09  20:43:51  marty
# 	Add OSF copyright
# 	[1996/03/09  20:23:49  marty]
# 
# Revision 1.1.2.1  1995/12/08  21:24:18  root
# 	Submit OSF/DCE 1.2.1
# 
# 	HP revision /main/HPDCE02/8  1995/10/17  15:18 UTC  kevins
# 	Merge chfts15887 into HPDCE02
# 
# 	HP revision /main/HPDCE02/kevins_chfts15887/1  1995/10/17  15:03 UTC  kevins
# 	Need to modify the method for setting script debuging variable.
# 
# 	HP revision /main/HPDCE02/7  1995/10/10  14:54 UTC  truitt
# 	Merge message changes.
# 
# 	HP revision /main/HPDCE02/truitt_dcecp_chfts49/1  1995/10/06  13:50 UTC  truitt
# 	CHFts16537: Make sure all help messages fit in the eighty character limit.
# 
# 	HP revision /main/HPDCE02/6  1995/05/01  18:45 UTC  truitt
# 	Merge.
# 
# 	HP revision /main/HPDCE02/truitt_dcecp_chfts26/1  1995/05/01  18:44 UTC  truitt
# 	CHFts14653: Add new variable for binary compat.
# 
# 	HP revision /main/HPDCE02/5  1995/03/31  18:48 UTC  truitt
# 	Merge message and option work.
# 
# 	HP revision /main/HPDCE02/truitt_mothra_chfts24/1  1995/03/31  18:47 UTC  truitt
# 	CHFts14799: Change one of the options so it no longer
# 	contains an underscore character.
# 	CHFts14890: Change the operations message.
# 
# 	HP revision /main/HPDCE02/4  1995/03/09  15:55 UTC  truitt
# 	Set another internal variable when binary compat is set.
# 
# 	HP revision /main/HPDCE02/truitt_dcecp_chfts19/1  1995/03/09  15:52 UTC  truitt
# 	Add another internal variable when the sec_binary_compat
# 	flag is toggled.
# 
# 	HP revision /main/HPDCE02/3  1995/02/02  16:56 UTC  truitt
# 	Fix copyright.
# 
# 	HP revision /main/HPDCE02/truitt_dcecp_chfts10/1  1995/02/02  16:55 UTC  truitt
# 	Fix copyright.
# 
# 	HP revision /main/HPDCE02/1  1995/02/02  15:51 UTC  truitt
# 	Merge initial hostvar file.
# 
# 	HP revision /main/truitt_dcecp_chfts08/1  1995/02/02  15:49 UTC  truitt
# 	CHFts14262: Add hostvar command.
# 	[1995/12/08  17:57:54  root]
# 
# $EndLog$

#
# The 'hostvar' task script.
#
# This script will allow the user to set some and view all
# the host variables that lives in the dce_cf.db file.
#

# Globals
if { [ info globals HOSTVAR_DEBUG ] == "" } {
    set HOSTVAR_DEBUG 0
}

#
# hostvar --
#     This is the entry point for all of the 'hostvar' task script functions.
#
proc hostvar {args} {

    set arg_table {
        {set command function_call _dcp_hostvar_set
            "Sets the value of the specified host variable."}
	{show command function_call _dcp_hostvar_show
            "Returns the value of the specified host variable."}
        {help help help_list        
            "Prints a summary of command-line options."}
        {operations operations operation_list 
            "Returns a list of the valid operations for this command."}
    }

    set verbose_prose \
"This object allows some user control over the legal host variables
that exist for this installation of DCE.  The user can use the show
option to return the value for the cell name, the host name, and the
current security binary compatibility and kerberos values.  The set
option can be used to set the security binary compatibility value.
The legal values for this variable are 'on' and 'off'."

    _dcp_hostvar_debug "args is '$args'"

    set local_args $args

    parseargs $arg_table local_args -found_one

    if {[info local help_prose] > 0} {
        return $help_prose
    }

    if {[info local function_call] > 0} {
        _dcp_hostvar_debug "Calling $function_call"
        return [$function_call local_args]
    } else {
        error "The \"hostvar\" object requires a verb to form a command."
    }
}


#
# _dcp_hostvar_show --
#     Return the value of the indicated host variable.
#
proc _dcp_hostvar_show {local_args} {

    upvar local_args cargs
    set local_args $cargs

    _dcp_hostvar_debug "Received args '$local_args'"

    set arg_table {
        {-all boolean all_flag
            "Returns the values of all available variables."}
        {-cellname boolean cell_flag
            "Returns the value of the cellname variable."}
        {-hostname boolean host_flag
            "Returns the value of the hostname variable."}
        {-secbinarycompat boolean sec_flag
            "Returns the value of the binary compatibility variable."}
	{-krbccachevno boolean kcv_flag
	    "Returns the value of the krb5 cred. cache version no. variable."}
	{-krbktvno boolean kkv_flag
	    "Returns the value of the krb5 keytab version number variable."}
    }

    set all_flag 0
    set cell_flag 0
    set host_flag 0
    set sec_flag 0
    set kkv_flag 0
    set kcv_flag 0

    # Parse the argument list.
    parseargs $arg_table local_args -no_leftovers

    # Check for help.
    if {[info local help_prose] > 0} {
        return $help_prose
    }

    # Check for extra arguments.
    if {[llength $local_args] > 0 } {
        error "Unrecognized argument [lindex $local_args 0]."  
    }

    # Check that at least one variable is being looked at.
    if {$all_flag == 0 && $cell_flag == 0 && $host_flag == 0 && 
	$sec_flag == 0 && $kcv_flag == 0 && $kkv_flag == 0} {
        error "No option specified."
    }

    # Check that the all option is not allowed with the other options.
    if {$cell_flag == 1 || $host_flag == 1 || $sec_flag == 1 ||
	$kcv_flag == 1 || $kkv_flag == 1} {
        if {$all_flag == 1} {
            error "Mutually exclusive options entered."
        }
    }

    if {$all_flag == 1} {
        set cell_flag 1
        set host_flag 1
        set sec_flag 1
	set kcv_flag 1
	set kkv_flag 1
    }

    _dcp_hostvar_debug "Do the hostdata show command on the proper object"

    # Get the output from the hostdata command.
    set return_list ""
    set hostvar_output [hostdata show dce_cf.db]

    # Search for the required information.
    set cell_val ""
    set host_val ""
    set genpac_val ""
    set kcv_val ""
    set kkv_val ""
    set hd_found 0
    foreach output_line $hostvar_output {
        if [string match *hostdata/data* $output_line] {
            set hd_found 1
            _dcp_hostvar_debug "Found the hostdata/data line."
            set first 0
            if {$cell_flag != 0} {
                set cell_val [attrlist getvalues $output_line -type cellname]
                if {$cell_val != ""} {
                    if {$first != 1} {
                        set return_list [format "{cellname %s}" $cell_val]
                        set first 1
                    } else {
                        set return_list [format "%s\n{cellname %s}" $return_list $cell_val]
                    }
                } else {
                    error "Unable to find value for cellname."
                }
            }
            if {$host_flag != 0} {
                set host_val [attrlist getvalues $output_line -type hostname]
                if {$host_val != ""} {
                    if {$first != 1} {
                        set return_list [format "{hostname %s}" $host_val]
                        set first 1
                    } else {
                        set return_list [format "%s\n{hostname %s}" $return_list $host_val]
                    }
                } else {
                    error "Unable to find value for hostname."
                }
            }
            if {$sec_flag != 0} {
                set kcv_val [attrlist getvalues $output_line -type krb5_ccache_vno]
                set kkv_val [attrlist getvalues $output_line -type krb5_kt_vno]
                set genpac_val [attrlist getvalues $output_line -type gen_v1_pac]
                if {$kcv_val == "1" && $kkv_val == "1" && $genpac_val == "true"} {
                    set compat "on"
                } else if {$kcv_val >= "2" && $kkv_val >= "2" && $genpac_val == "false"} {
                    set compat "off"
                } else {
                    error "Value for secbinarycompat is undefined."
                }
                if {$first != 1} {
                    set return_list [format "{secbinarycompat %s}" $compat]
                    set first 1
                } else {
                    set return_list [format "%s\n{secbinarycompat %s}" $return_list $compat]
                }
            }
	    if {$kcv_flag != 0} {
                set kcv_val [attrlist getvalues $output_line -type krb5_ccache_vno]
                if {$kcv_val != ""} {
                    if {$first != 1} {
                        set return_list [format "{krb5_ccache_vno %d}" $kcv_val]
                        set first 1
                    } else {
                        set return_list [format "%s\n{krb5_ccache_vno %d}" $return_list $kcv_val]
                    }
                } else {
                    error "Unable to find value for krb5_ccache_vno."
                }
	    }
	    if {$kkv_flag != 0} {
                set kkv_val [attrlist getvalues $output_line -type krb5_kt_vno]
                if {$kkv_val != ""} {
                    if {$first != 1} {
                        set return_list [format "{krb5_kt_vno %d}" $kkv_val]
                        set first 1
                    } else {
                        set return_list [format "%s\n{krb5_kt_vno %d}" $return_list $kkv_val]
                    }
                } else {
                    error "Unable to find value for krb5_kt_vno."
                }
	    }
            return $return_list
        }
    }
    if {$hd_found == 0} {
        error "Unable to locate hostdata information."
    }
    return $return_list
}


#
# _dcp_hostvar_set --
#     Return the value of the indicated host variable.
#
proc _dcp_hostvar_set {local_args} {

    upvar local_args cargs
    set local_args $cargs

    _dcp_hostvar_debug "Received args '$local_args'"

    set arg_table {
        {-secbinarycompat string sec_val
            "Sets the security binary compatibility variable."}
	{-krbccachevno integer kcv_val
	    "Sets the krb5 credential cache version number variable."}
	{-krbktvno integer kkv_val
	    "Sets the krb5 keytab version number variable."}
    }

    set sec_val ""
    set kcv_val ""
    set kkv_val ""
    set genpac_val ""

    # Parse the argument list.
    parseargs $arg_table local_args -no_leftovers

    # Check for help.
    if {[info local help_prose] > 0} {
        return $help_prose
    }

    # Check for extra arguments.
    if {[llength $local_args] > 0 } {
        error "Unrecognized argument [lindex $local_args 0]."  
    }

    # Check that at least one variable is being set.
    if {$sec_val == "" && $kcv_val == "" && $kkv_val == ""} {
        error "No option specified."
    }

    # Check that the secbinarycompat option is not allowed with the other options.
    if {$kcv_val != "" || $kkv_val != ""} {
        if {$sec_val != ""} {
            error "Mutually exclusive options entered."
        }
    }

    # Check that the value entered for the variable is legal.
    if {$sec_val != "" && $sec_val != "on" && $sec_val != "off"} {
        error "Incorrect value specified for variable."
    }

    _dcp_hostvar_debug "Do the hostdata set command on the proper object"

    # Get the current value of the variable.
    set return_list ""
    set hostvar_output [hostdata show dce_cf.db]

    # Build the new input list.  We must copy all information
    # from the data fields that we are not using, then put in
    # the new value just entered.
    set new_input ""
    set cell_val ""
    set host_val ""
    set hd_found 0
    foreach output_line $hostvar_output {
        if [string match *hostdata/data* $output_line] {
            set hd_found 1
            _dcp_hostvar_debug "Found the hostdata/data line"

            # Get the cell name info.
            set cell_val [attrlist getvalues $output_line -type cellname]
            if {$cell_val == ""} {
                error "Unable to find value for cell_name."
            }

            # Get the host name info.
            set host_val [attrlist getvalues $output_line -type hostname]
            if {$host_val == ""} {
                error "Unable to find value for host_name."
            }

            # Compute the value of the security flag.
	    # These override the values for krb5_ccache_vno & krb5_kt_vno
	    # specified on the command line.
	    if {$sec_val != ""} {
            	switch $sec_val {
                    "on" {
                        set kcv_val 1
                        set kkv_val 1
                        set genpac_val "true"
                    }
                    "off" {
                        set kcv_val 2
                        set kkv_val 2
                        set genpac_val "false"
                    }
                    default {
                        error "Value for secbinarycompat is undefined."
                    }
                }
	    }

	    if {$kcv_val == ""} {
                set kcv_val [attrlist getvalues $output_line -type krb5_ccache_vno]
                if {$kcv_val == ""} {
                    error "Unable to find value for krb5_ccache_vno."
		}
            }

	    if {$kkv_val == ""} {
                set kkv_val [attrlist getvalues $output_line -type krb5_kt_vno]
                if {$kkv_val == ""} {
                    error "Unable to find value for krb5_kt_vno."
		}
            }

	    if {$genpac_val == ""} {
                set genpac_val [attrlist getvalues $output_line -type gen_v1_pac]
                if {$genpac_val == ""} {
                    error "Unable to find value for gen_v1_pac."
		}
            }

            # Build the input variable list.
            set new_input [format "{cellname %s} {hostname %s} {krb5_ccache_vno %s} {krb5_kt_vno %s} {gen_v1_pac %s}" $cell_val $host_val $kcv_val $kkv_val $genpac_val]
            _dcp_hostvar_debug "input line is $new_input"
            # Make the hostdata call to load the new information.
            if {[catch {hostdata modify dce_cf.db -data $new_input} msg] != 0} {
                error "hostdata modify failed: $msg"
            }
        }
    }
    if {$hd_found == 0} {
        error "Unable to locate hostdata information."
    }
}


#
# _dcp_hostvar_debug
#     Output text passed as an argument to stderr if DEBUG is
# turned on.
#
proc _dcp_hostvar_debug {args} {
    global HOSTVAR_DEBUG

    if {$HOSTVAR_DEBUG != 0} {
        puts stderr "DEBUG: [lindex [info level [expr [info level] - 1]] 0]:\
                            [string range $args 1 \
                            [expr [string length $args] - 2]]"
    }
}

#!/bin/sh
#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
#
# HISTORY
# $Log: test5,v $
# Revision 1.1.134.1  1996/10/17  18:17:17  damon
# 	Submitting on behalf of Transarc
# 	[1996/10/17  16:49:37  damon]
#
# Revision 1.1.129.1  1994/02/04  20:39:43  devsrc
# 	Merged from 1.0.3a to 1.1
# 	[1994/02/04  15:22:12  devsrc]
# 
# Revision 1.1.127.1  1993/12/07  17:41:10  jaffe
# 	1.0.3a update from Transarc
# 	[1993/12/03  18:38:04  jaffe]
# 
# Revision 1.1.4.6  1993/01/11  17:38:52  htf
# 	Embedded copyright notice
# 	[1993/01/11  16:55:48  htf]
# 
# Revision 1.1.4.5  1992/12/09  21:02:26  jaffe
# 	Transarc delta: comer-ot6087-make-tests-stop-AND-wait 1.1
# 	  Selected comments:
# 	    The bos stop command does not wait for the bosserver-controlled
# 	    process to die before it returns unless the -wait option is specified.
# 	    The change is to add -wait to all the stops.
# 	    See above.
# 	[1992/12/04  20:24:03  jaffe]
# 
# Revision 1.1.4.4  1992/11/10  18:39:32  jaffe
# 	Added /bin/sh line
# 	[1992/11/10  16:08:10  jaffe]
# 
# Revision 1.1.4.3  1992/10/28  16:00:28  jaffe
# 	Transarc delta: comer-ot4849-misc-bos-command-test-cleanup 1.3
# 	  Selected comments:
# 	    Miscellaneous clean-up of the bos command test suite.
# 	    More cleanup of the bos test suite
# 	    Installed a working version.
# 	    Change Makefiles to install files into the export tree.  This should
# 	    later be changed to install into the install tree as soon as we decide
# 	    on the correct tree layout.  In the meantime, put the files under
# 	    export/<machine>/test/bos.
# 	[1992/10/27  16:52:12  jaffe]
# 
# Revision 1.1.4.2  1992/09/25  17:01:33  jaffe
# 	Transarc delta: rajesh-ot5142-convert-bos-tests-from-csh-to-sh 1.3
# 	  Selected comments:
# 	    Convert bos tests 4,5,6,8,9 and 10 from csh to sh.
# 	    Convert test from csh to sh.
# 	    Addition of a utility function to determine if a dfs-server principal
# 	    exists for a machne. And more of csh-to-sh conversions.
# 	    More of csh-to-sh conversions.
# 	    More to csh-to-sh conversion. This version has been tested.
# 	    See above.
# 	[1992/09/23  20:44:17  jaffe]
# 
# Revision 1.1.2.2  1992/05/21  12:35:22  jaffe
# 	Transarc delta: fred-merge-tests 1.1
# 	  Files modified:
# 	    Makefile
# 	    bos: Makefile, READ_ME, init_dce, kills, runc, runtests
# 	    bos: setup, shows
# 	    bos/tests: Makefile, test0, test1, test10, test11, test12
# 	    bos/tests: test2, test3, test4, test5, test6, test7, test8
# 	    bos/tests: test9; bos/tests/procs: Makefile
# 	    cm: Makefile, runtests, test0, test1, test2, test3, test4
# 	    cm: test5, test6; config: chk_errnr, echeck, environment
# 	    fs: Makefile, READ_ME, err1, err2, longalpha, longfox
# 	    fs: longmix, prog1.c, rtest1, shortalpha, shortfox, shortmix
# 	    fs: test1, test10, test2, test2b, test2s, test3, test4
# 	    fs: test5, test6, test7, test8, test9
# 	    fts: Makefile, check, etest.sed, etest1, etest2, etest3
# 	    fts: etest4, etest5, etest6, rtest1, rtest2, runrtests
# 	    fts: runtests, test1, test10, test11, test12, test13, test2
# 	    fts: test3, test4, test5, test6, test7, test8, test9
# 	    low: Makefile, ctrl.asc, prog11.c, prog12.c, prog14.c
# 	    low: prog3a.c, prog8.c, prog9.c, rtest1, rtest2, styl.asc
# 	    low: test1, test10, test11, test12, test13, test14, test2
# 	    low: test3, test4, test5, test6, test7, test8, test9
# 	    naming: Makefile, bostest, fstest, ftstest
# 	    scout: Makefile, test1, test2; setup: Makefile, environment
# 	    ubik: Makefile, READ_ME, init, kills, runc, setup, shows
# 	    ubik: udbg; util: Makefile, sys.c
# 	  Selected comments:
# 	    Created this delta to merge Phil Hirsch's final DFS test code changes with
# 	    the test code that the OSF had.  Hopefully, this means we and the OSF
# 	    should be looking at the same test code.
# 	    Changes to facilitate merge of local DFS test code with the OSF's.
# 
# 	$TALog: test5,v $
# 	Revision 4.16  1994/11/01  22:21:28  cfe
# 	Bring over the changes that the OSF made in going from their DCE 1.0.3
# 	release to their DCE 1.1 release.
# 	[from r4.15 by delta cfe-db6109-merge-1.0.3-to-1.1-diffs, r1.1]
# 
# 	Revision 4.15  1993/11/15  23:01:36  andi
# 	[merge of changes from 4.12 to 4.14 into 4.13]
# 
# Revision 4.14  1993/11/11  21:19:08  comer
# 	A few more places where $(pwd) was being used.  Changed to `pwd`.
# 	[from r4.12 by delta comer-db4664-fix-minor-bos-test-problems, r1.2]
# 
# Revision 4.13  1993/08/24  15:17:49  bwl
# 	More changes for HP port.  Milestone:  got the low tests built;
# 	can run cthon on DFS.  (But not on glued UFS.)
# 
# 	Changes for HP port.
# 	[from r4.12 by delta bwl-o-db3961-port-103-to-HP, r1.11]
# 
# Revision 4.12  1993/01/14  17:33:12  jaffe
# 	revdrop of latest OSF copyright changes to these files
# 	[from r4.11 by delta osf-revdrop-01-12-92, r1.1]
# 
# 	Revision 4.9  1992/11/11  20:16:32  jaffe
# 	Picked up the final changes.
# 	[from revision 4.8 by delta osf-revdrop-11-09-92, r1.2]
# 
# 	[1992/05/20  17:25:03  jaffe]
# 
# $EndLog$
#

###############################################################################
#    Copyright (C) 1991, 1992 Transarc Corporation - All rights reserved      #
###############################################################################

# This test is applicable to DFS running bosserver.
# The script tests the bos process-management subcommands, using processes
# that repeatedly kill each other. It uses proc2.1 and proc2.2.

###############################################################################

# Usage:                test5

# Typically run via:    test5 >& test5.out
# or via the bos/runtests script.

###############################################################################

# Test environment:
# This test requires DFS server $SERVER_1 to be running bosserver.

# Privilege required:
# You must be authenticated to DCE as someone who's in admin.bos, and
# you must be logged into Unix as local root.

# Highest error number is: 9.

###############################################################################

d=`pwd`
hn=`hostname`
p=`basename $0`
p1="$p:"
rc=0
ty=bos

: ${AUTH_ARG=""}
: ${CELL_NAME=`sed -n '/cellname/s/cellname[         ]*\/\.\.\.\///p' /opt/dcelocal/dce_cf.db`}
: ${CELL_ARG=""}
: ${VERB_ARG=""}
: ${SERVER_1=$hn}
: ${TESTTOP=`pwd`}

: ${bin_dir=/opt/dcelocal/bin}
: ${dns_cell_name=/.../$CELL_NAME}
: ${dns_server_prefix=/.:/hosts/}

PATH=":"$bin_dir":"$PATH
sav_arg="-server $dns_server_prefix$SERVER_1 $AUTH_ARG $VERB_ARG"
bos_testhome=$TESTTOP/$ty/tests/procs

###############################################################################

echo ""
echo "RUNNING bos COMMANDS on SERVER $SERVER_1 in CELL $CELL_NAME."
echo "========================================================================"
date
echo ""

if [ "$CELL_NAME" = "" ] 
then
   	echo "Can't find cellname in /opt/dcelocal/dce_cf.db - aborting."
   	exit 2
fi

###############################################################################

echo ""; echo "removing the lock file"
rm -f /tmp/bossvr_test_lockfile

echo ""; echo "Initial status:"
echo bos status $sav_arg -long
bos status $sav_arg -long
if [ $? -ne 0 ] 
then
  	echo "- failed ($p1 E1)"
  	rc=`expr $rc + 1`
fi

echo
echo "Creating processes tp10 and tp11..."

echo bos create -process tp10 -type simple -cmd proc2.1 $sav_arg
bos create -process tp10 -type simple $sav_arg -cmd $bos_testhome/proc2.1 
if [ $? -ne 0 ] 
then
  	echo "- failed ($p1 E2)"
  	rc=`expr $rc + 1`
fi

echo bos create -process tp11 -type simple -cmd proc2.2 $sav_arg
bos create -process tp11 -type simple $sav_arg -cmd $bos_testhome/proc2.2
if [ $? -ne 0 ] 
then
  	echo "- failed ($p1 E3)"
  	rc=`expr $rc + 1`
fi

########################################

echo ""
echo "Sleeping..."
sleep 30

echo ""; echo "Current status:"
echo bos status $sav_arg -long
bos status $sav_arg -long
if [ $? -ne 0 ] 
then
  	echo "- failed ($p1 E4)"
  	rc=`expr $rc + 1`
fi

########################################

echo 
echo "Stopping and deleting processes tp10 and tp11..."

echo bos stop $sav_arg -process tp10 -wait
bos stop $sav_arg -process tp10 -wait
if [ $? -ne 0 ] 
then
  	echo "- failed ($p1 E5)"
  	rc=`expr $rc + 1`
fi

echo bos stop $sav_arg -process tp11 -wait
bos stop $sav_arg -process tp11 -wait
if [ $? -ne 0 ] 
then
  	echo "- failed ($p1 E6v)"
  	rc=`expr $rc + 1`
fi

echo bos delete $sav_arg -process tp10
bos delete $sav_arg -process tp10
if [ $? -ne 0 ] 
then
  	echo "- failed ($p1 E7)"
  	rc=`expr $rc + 1`
fi

echo bos delete $sav_arg -process tp11
bos delete $sav_arg -process tp11
if [ $? -ne 0 ] 
then
  	echo "- failed ($p1 E8)"
  	rc=`expr $rc + 1`
fi

echo ""
echo "Final status:"
echo bos status $sav_arg -long
bos status $sav_arg -long
if [ $? -ne 0 ] 
then
  	echo "- failed ($p1 E9)"
  	rc=`expr $rc + 1`
fi

###############################################################################

sync
sync
sleep 2

echo ""
echo "Done at `date`."; echo ""
if [  $rc -eq 0 ] 
then
   echo "$ty/$p PASSED"
else
   echo "$ty/$p FAILED ($rc errors)"
fi
exit $rc

###############################################################################

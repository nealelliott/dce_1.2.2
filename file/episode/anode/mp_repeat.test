# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# 
# HISTORY
# $Log: mp_repeat.test,v $
# Revision 1.1.12.1  1996/10/02  17:18:13  damon
# 	Newest DFS from Transarc
# 	[1996/10/01  18:28:18  damon]
#
# Revision 1.1.6.1  1994/06/09  13:58:19  annie
# 	fixed copyright in src/file
# 	[1994/06/08  21:33:32  annie]
# 
# Revision 1.1.4.6  1993/03/31  17:48:52  jaffe
# 	Transarc delta: ota-ot7570-measure-mp.int.test-quota-usage
# 	  Selected comments:
# 	    Increase quota on volume bar, just to be safe.
# 	[1993/03/31  16:27:59  jaffe]
# 
# Revision 1.1.4.5  1993/03/09  18:30:05  jaffe
# 	Transarc delta: ota-ot7298-StartTran-must-wait-more 1.1
# 	  Selected comments:
# 	    In a non-preemptive environment we must be very careful to sleep
# 	    whenever we can not satisfy our caller's requirements directly.
# 	    Spinning until the right thing happens is not good enough.  This type of
# 	    problem has caused trouble before.
# 	    In this case elbt_StartTran is having trouble because the log is full
# 	    because of a running transaction.  It can't wait for the transaction to
# 	    end because it is an undo-zero transaction.  The reason it can't wait
# 	    for an undo-zero transaction is that some are started by VM daemons and
# 	    some are started by the buffer, and if it waits for one of the latter it
# 	    can deadlock because only its caller can end these transactions.
# 	    The problem was that it was returning but the transaction it needed to
# 	    wait for was a VM undo-zero, so the buffer undo-zero ending code found
# 	    nothing to do.  The result was that it looped not doing anything and
# 	    never waiting on any condition.
# 	    The fix is to wait on undo-zero transactions carefully so that we can't
# 	    deadlock waiting for our own undo-zeros.
# 	    Increase quota.
# 	[1993/03/09  16:57:03  jaffe]
# 
# Revision 1.1.4.4  1993/01/18  22:06:15  cjd
# 	embedded copyright notice
# 	[1993/01/18  21:45:55  cjd]
# 
# Revision 1.1.4.3  1992/11/09  21:34:00  jaffe
# 	Transarc delta: ota-ot3804-new-block-security 1.1
# 	  Selected comments:
# 	    This is a super-delta comprising changes necessary to accomplish both
# 	    deltas which are a very tough import and are really intertwined anyway.
# 	    Transarc delta: mason-ot5508-wrong-comparison-in-WaitForTranFree 1.4
# 	    Selected comments:
# 	    WARNING: THIS DELTA HAS HAD ITS SCOPTE MASSIVELY EXTENDED
# 	    See revision 1.2 below.
# 	    An earlier change to the transaction activity test in elbt_TranForce
# 	    resulted in an incorrect test.
# 	    This resulted in aimIII test looping in the kernel trying to commit the
# 	    transaction in a vnode being deleted.
# 	    A long chain of complications associated with the fix for this problem
# 	    gradually lead to more and more expansive repairs.  At some point the
# 	    effort devolved into a new complete rewrite of most of the functions in
# 	    the tran module and a similar fraction of the tran related functions in
# 	    the log module.  As a side-effect other OT bugs were addressed.  Here is
# 	    a list of the major changes made.
# 	    o This delta effective completes implementation of new block security.
# 	    This affects OT 3804 and OT 1020.
# 	    o Handling of ended transactions is completely revised.  Rules of
# 	    responsibility for trans in various states between tran and log
# 	    modules are clarified.  This addresses the concerns raised in OT 5249.
# 	    o The locking strategy in the tran module was extensively revised.  The
# 	    logbuf-locking document was updated.
# 	    o Changes in waiting and sleeping, especially when starting
# 	    transactions, follow from the above two changes.  Deadlocks removed
# 	    from GCTran.
# 	    o Equivalence Class handling improved, eliminating at least one latent
# 	    bug in when a pending transaction can be discarded.  Locking changes
# 	    should also improve concurrency.
# 	    o Significant enhancement of the test scripts in the stress level they
# 	    impose on the transaction system.
# 	    o Reimplemented FsyncForce to use unified buffer/event set handling.
# 	    This fixes OT 5316.
# 	    o The Quiesce operation is improved, internally to serialize, commit
# 	    metadata and commit userdata.  It still needs an interface change when
# 	    volops requirements are ready.
# 	    o Now tran and log module track three reservation sizes for
# 	    transactions: full size, undo-zero size, and end size.  This only
# 	    partially addresses the concerns of OT 4548.
# 	    o Macros for comparing log positions where improved and bullet proofed.
# 	    They now replace many suspect by-hand comparisons throughout the code.
# 	    o New test repeatedly shuts down a device when other devices with the
# 	    same block size(s) are still active.
# 	    o Added passno test to expose OT 5527.  Added to all_tests.
# 	    o Improved comments throughout.
# 	    o Added growaggr script to all_tests.  Affects OT 3216, TR 2570.
# 	    o Added vm1.test to all_tests.
# 	    o Move nbs_tests into all_tests.
# 	    o Upgraded copyrights.
# 	    Increased aggregate and log sizes and volume quota.
# 	    After upgrading to epi 1.22 (dfs 1.53) the shutdown script stopped working.
# 	    A few more problems noticed after upgrading to epi-1.22.
# 	    A real bug in RecycleLogBufs was discovered, which resulted in reporting
# 	    a more recent value for activeLogBlock than was correct if the members
# 	    of the inTransit list were within 5 blocks of the end of the log.
# 	    A real bug in recover was discovered, which resulted in discarding the
# 	    last page of the log on the first pass (after log create).
# 	[1992/11/09  17:53:26  jaffe]
# 
# Revision 1.1.4.2  1992/09/15  17:32:37  jaffe
# 	Transarc delta: mason-ot2930-logbuf-parts-of-nbs 1.14
# 	  Selected comments:
# 	    This is the logbuf portion of new block security (making sure someone
# 	    else's data does not appear in your file across a system crash.)  For
# 	    details, see the OT report, the postings to transarc.afs.episode, and
# 	    the white paper on this subject.  Not done yet.  SNAPSHOT ONLY.
# 	    Just wanted to fix a small nit in test_res.
# 	    More work on NBS.  This is only a snapshot.
# 	    Another snapshot; this time we make the interfaces between anode & buffer
# 	    uniform (each was using a different convention).  Clean up names at the same
# 	    time.  SNAPSHOT ONLY.
# 	    Another snapshot.  NBS now works in the forward direction for basic.test!
# 	    This part of this delta was removed and added to delta
# 	    mason-ot5070-gc-tran-in-logfull-avoidance
# 	    Snapshot of code working in the forward path in mp.test.
# 	    Removed the contents of revision 1.6
# 	    Checkpoint.  No work done here, just made sure that the other new
# 	    delta works OK (mason-ot5070-gc-tran-in-logfull-avoidance).
# 	    Make all_tests work again.
# 	    Finish making all the tests run now.
# 	    Log size increase.
# 	    Cleanup compilation on OSF/1.
# 	    Continue work to get new block security going.
# 	    Add a script for the nbs tests.
# 	[1992/09/14  19:39:42  jaffe]
# 
# Revision 1.1.2.2  1992/05/06  14:11:34  jdp
# 	Initial revision.
# 	[1992/05/05  23:36:22  jdp]
# 
# $EndLog$
# /* Copyright (C) 1993, 1990 Transarc Corporation - All rights reserved */
# $Header: /u0/rcs_trees/dce/rcs/file/episode/anode/mp_repeat.test,v 1.1.12.1 1996/10/02 17:18:13 damon Exp $

mp_repeat 1
modify_afsdb anode on 31		# turn on code block counting
modify_afsdb anode on 29		# turn on preempts

open_device 0 1024 1024 1000
create_aggregate 250			# 74 blks / thread
open_device 1 4096 1024 1000
create_aggregate 100			# 21 blks / thread

create_vol bar 0,,0 2600		# 251*10 = 2510
create_file a
write_file 0 10000 314159
read_file 0 10000 314159
check_device

fork mp.int.test
fork mp.int.test

create_file b
write_file 0 10000 26535
read_file 0 10000 26535
delete_file

wait
check_device
vol_info

fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test

wait
check_device
vol_info

fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test

wait
check_device
vol_info

fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test

wait
check_device
vol_info

fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test
fork mp.int.test

wait
check_device
vol_info

coverage
save /tmp/mp.fn
end

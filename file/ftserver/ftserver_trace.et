#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# HISTORY
# $Log: ftserver_trace.et,v $
# $EndLog$
#
# (C) Copyright Transarc Corporation 1996, 1993.  ALL RIGHTS RESERVED.
#

error_table 2 ftt
	ec FTSERVER_TRACE_RCSID,
	"$Header: /afs/tr/project/fs/dev/dfs-dev/src/file/ftserver/RCS/ftserver_trace.et,v 1.20 1996/05/01 18:51:35 hyer Exp $"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_CREATE_TRANS,
	"SFTSERVER_CreateTrans(%#lx, %lu,,%lu, %lu, %#lx, OUT <transIdp>) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_CREATE_TRANS,
	"SFTSERVER_CreateTrans(#%ld) returns %ld, *transId = %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_ABORT_TRANS,
	"SFTSERVER_AbortTrans(%#lx, %lu) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_ABORT_TRANS,
	"SFTSERVER_AbortTrans returns %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_DELETE_TRANS,
	"SFTSERVER_DeleteTrans(%#lx, %lu) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_DELETE_TRANS,
	"SFTSERVER_DeleteTrans returns %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_CREATE_VOLUME,
	"SFTSERVER_CreateVolume(%#lx, %lu, %s, %#lx,"
	ec FTSERVER_TRACE_ENTER_SFTSERVER_CREATE_VOLUME2,
	"\t%#lx, %lu,,%lu, %lu,,%lu, OUT <transIdP>) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_CREATE_VOLUME,
	"SFTSERVER_CreateVolume(#%ld) returns %ld, *transId = %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_DELETE_VOLUME,
	"SFTSERVER_DeleteVolume(%#lx, %ld) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_DELETE_VOLUME,
	"SFTSERVER_DeleteVolume(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_DUMP,
	"SFTSERVER_Dump(%#lx, %ld,"
	ec FTSERVER_TRACE_ENTER_SFTSERVER_DUMP2,
	"\t{%#lx, {%lu, %lu}, %lu,,%lu},"
	ec FTSERVER_TRACE_ENTER_SFTSERVER_DUMP3,
	"\t%#lx) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_DUMP,
	"SFTSERVER_Dump returns %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_RESTORE,
	"SFTSERVER_Restore(%#lx, %lu, %#lx, %#lx) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_RESTORE,
	"SFTSERVER_Restore returns %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_FORWARD,
	"SFTSERVER_Forward(%#lx, %lu,"
	ec FTSERVER_TRACE_ENTER_SFTSERVER_FORWARD2,
	"\t{%#lx, {%lu, %lu}, %lu,,%lu},"
	ec FTSERVER_TRACE_ENTER_SFTSERVER_FORWARD3,
	"\t%#lx, %#lx, %lu) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_FORWARD,
	"SFTSERVER_Forward returns %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_CLONE,
	"SFTSERVER_Clone(%#lx, %lu, %#lx, %s,"
	ec FTSERVER_TRACE_ENTER_SFTSERVER_CLONE2,
	"\t%lu,,%lu) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_CLONE,
	"SFTSERVER_Clone(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_RECLONE,
	"SFTSERVER_ReClone(%#lx, %lu, %lu,,%lu) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_RECLONE,
	"SFTSERVER_ReClone(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_GET_FLAGS,
	"SFTSERVER_GetFlags(%#lx, %lu, OUT <OutFlagsp>) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_GET_FLAGS,
	"SFTSERVER_GetFlags(#%ld) returns %ld, *OutFlagsp = %#lx"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_SET_FLAGS,
	"SFTSERVER_SetFlags(%#lx, %lu, %#lx) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_SET_FLAGS,
	"SFTSERVER_SetFlags(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_GET_STATUS,
	"SFTSERVER_GetStatus(%#lx, %lu, OUT %#lx) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_GET_STATUS,
	"SFTSERVER_GetStatus(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_SET_STATUS,
	"SFTSERVER_SetStatus(%#lx, %lu, %#lx, %#lx) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_SET_STATUS,
	"SFTSERVER_SetStatus(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_LIST_VOLUMES,
	"SFTSERVER_ListVolumes(%#lx, %lu, {%lu, <uuid>}, OUT <outCookieP>, OUT <statEntries>) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_LIST_VOLUMES,
	"SFTSERVER_ListVolumes returns %ld, *outCookieP = {%lu, <uuid>}, *statEntries = {%lu, <ftserver_status_val[]>}"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_LIST_AGGREGATES,
	"SFTSERVER_ListAggregates(%#lx, {%lu, <uuid>}, OUT <outCookieP>, OUT <aggrList>) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_LIST_AGGREGATES,
	"SFTSERVER_ListAggregates returns %ld, *outCookieP = {%lu, <uuid>}, *aggrList = {%lu, <ftserver_aggrEntries_val[]>}"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_AGGREGATE_INFO,
	"SFTSERVER_AggregateInfo(%#lx, %lu, OUT <aggrInfop>) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_AGGREGATE_INFO,
	"SFTSERVER_AggregateInfo returns %ld, *aggrInfop = {%s, %s, %lu,"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_AGGREGATE_INFO2,
	"\t%lu, %lu, %lu}"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_MONITOR,
	"SFTSERVER_Monitor(%#lx, OUT <entriesp>) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_MONITOR,
	"SFTSERVER_Monitor returns %ld, *entriesp = {%lu, ftserver_transStatus_val[]}"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_GET_ONE_VOL_STATUS,
	"SFTSERVER_GetOneVolStatus(%#lx, %lu,,%lu, %lu, <spare1>, OUT %#lx) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_GET_ONE_VOL_STATUS,
	"SFTSERVER_GetOneVolStatus(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_GET_SERVER_INTERFACES,
	"SFTSERVER_GetServerInterfaces(%#lx, OUT <serverInterfacesP>) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_GET_SERVER_INTERFACES,
	"SFTSERVER_GetServerInterfaces returns %lu, *serverInterfacesP = {%lu, <dfs_interfaceList_val[]>}"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_SWAP_IDS,
	"SFTSERVER_SwapIDs(%#lx, %lu, %lu) entered"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_SWAP_IDS,
	"SFTSERVER_SwapIDs(#%ld) returns %ld"


	ec FTSERVER_TRACE_ENTER_GET_ORIG_STATUS,
	"getOrigStatus({..., %ld, %ld, %lu,,%lu, %ld, ...}) entered"
	ec FTSERVER_TRACE_EXIT_GET_ORIG_STATUS,
	"getOrigStatus(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_DELETE_TRANS,
	"DeleteTrans(%#lx, %lu, %ld) entered"
	ec FTSERVER_TRACE_EXIT_DELETE_TRANS,
	"DeleteTrans(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_FTSERVER_DELETE_VOLUME,
	"ftserver_DeleteVolume({..., %ld, %ld, %lu,,%lu, %ld, ...}) entered"
	ec FTSERVER_TRACE_EXIT_FTSERVER_DELETE_VOLUME,
	"ftserver_DeleteVolume(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_FORWARD_PULL,
	"forwardPull(%#lx, %#lx, %lu, OUT <outSizeP>) entered"
	ec FTSERVER_TRACE_EXIT_FORWARD_PULL,
	"forwardPull returns void, *outSizeP = %lu"

	ec FTSERVER_TRACE_ENTER_FORWARD_WRITER,
	"forwardWriter(%#lx,"
	ec FTSERVER_TRACE_ENTER_FORWARD_WRITER2,
	"\t{%#lx, {%lu, %lu}, %lu,,%lu},"
	ec FTSERVER_TRACE_ENTER_FORWARD_WRITER3,
	"\t{..., %ld, %ld, %lu,,%lu, %ld, ...}) entered"
	ec FTSERVER_TRACE_EXIT_FORWARD_WRITER,
	"forwardWriter(#%ld) exits with %ld"

	ec FTSERVER_TRACE_ENTER_VOLS_FORWARD,
	"vols_Forward({..., %ld, %ld, %lu,,%lu, %ld, ...},"
	ec FTSERVER_TRACE_ENTER_VOLS_FORWARD2,
	"\t%#lx, %lu,"
	ec FTSERVER_TRACE_ENTER_VOLS_FORWARD3,
	"\t{%#lx, {%lu, %lu}, %lu,,%lu},"
	ec FTSERVER_TRACE_ENTER_VOLS_FORWARD4,
	"\t%#lx, %#lx, %lu) entered"
	ec FTSERVER_TRACE_EXIT_VOLS_FORWARD,
	"vols_Forward(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_FTSERVER_CLONE,
	"ftserver_Clone({..., %ld, %ld, %lu,,%lu, %ld, ...},"
	ec FTSERVER_TRACE_ENTER_FTSERVER_CLONE2,
	"\t%lu,,%lu, %s, %#lx) entered"
	ec FTSERVER_TRACE_EXIT_FTSERVER_CLONE,
	"ftserver_Clone(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_VOLS_RECLONE,
	"vols_ReClone({..., %ld, %ld, %lu,,%lu, %ld, ...},"
	ec FTSERVER_TRACE_ENTER_VOLS_RECLONE2,
	"\t{..., %ld, %ld, %lu,,%lu, %ld, ...}) entered"
	ec FTSERVER_TRACE_EXIT_VOLS_RECLONE,
	"vols_ReClone(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_FTSERVER_UNCLONE,
	"ftserver_UnClone({..., %ld, %ld, %lu,,%lu, %ld, ...},"
	ec FTSERVER_TRACE_ENTER_FTSERVER_UNCLONE2,
	"\t{..., %ld, %ld, %lu,,%lu, %ld, ...}) entered"
	ec FTSERVER_TRACE_EXIT_FTSERVER_UNCLONE,
	"ftserver_UnClone(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_VOLS_FILL_BASE_TYPE,
	"vols_FillBaseType({..., %ld, %ld, %lu,,%lu, %ld, ...}) entered"
	ec FTSERVER_TRACE_EXIT_VOLS_FILL_BASE_TYPE,
	"vols_FillBaseType(#%ld) returns %ld"


	ec FTSERVER_TRACE_ENTER_VOL_SYSCALL,
	"vol_syscall(%ld, %#lx, %#lx, %#lx,"
	ec FTSERVER_TRACE_ENTER_VOL_SYSCALL2,
	"\t%#lx) entered"
	ec FTSERVER_TRACE_EXIT_VOL_SYSCALL,
	"vol_syscall returns %ld"

	ec FTSERVER_TRACE_ENTER_AG_SYSCALL,
	"ag_syscall(%ld, %#lx, %#lx, %#lx,"
	ec FTSERVER_TRACE_ENTER_AG_SYSCALL2,
	"\t%#lx) entered"
	ec FTSERVER_TRACE_EXIT_AG_SYSCALL,
	"ag_syscall returns %ld"


	ec FTSERVER_TRACE_ENTER_FTSERVER_NEW_TRANS,
	"ftserver_NewTrans(%lu,,%lu, %lu, OUT <codep>)"
	ec FTSERVER_TRACE_EXIT_FTSERVER_NEW_TRANS,
	"ftserver_NewTrans(#%ld) returns %#lx (t_transId = %lu), *codep = %ld"

	ec FTSERVER_TRACE_ENTER_FTSERVER_FIND_TRANS,
	"ftserver_FindTrans(%ld) entered"
	ec FTSERVER_TRACE_EXIT_FTSERVER_FIND_TRANS,
	"ftserver_FindTrans(#%ld) returns %#lx (t_aggrId = %lu, t_volId = %lu,,%lu)"

	ec FTSERVER_TRACE_ENTER_FTSERVER_DELETE_TRANS,
	"ftserver_DeleteTrans({..., %ld, %ld, %lu,,%lu, %ld, ...},"
	ec FTSERVER_TRACE_ENTER_FTSERVER_DELETE_TRANS2,
	"\t%ld) entered"
	ec FTSERVER_TRACE_EXIT_FTSERVER_DELETE_TRANS,
	"ftserver_DeleteTrans(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_FTSERVER_PUT_TRANS,
	"ftserver_PutTrans({..., %ld, %ld, %lu,,%lu, %ld, ...}"
	ec FTSERVER_TRACE_EXIT_FTSERVER_PUT_TRANS,
	"ftserver_PutTrans(#%ld) returns %ld"

	ec FTSERVER_TRACE_ENTER_FTSERVER_GC_TRANS,
	"ftserver_GCTrans(void) entered"
	ec FTSERVER_TRACE_EXIT_FTSERVER_GC_TRANS,
	"ftserver_GCTrans returns %ld"

	ec FTSERVER_TRACE_ENTER_FTSERVER_SWAP_TRANS_STATES,
	"ftserver_SwapTransStates({..., %ld, %ld, %lu,,%lu, %ld, ...},"
	ec FTSERVER_TRACE_ENTER_FTSERVER_SWAP_TRANS_STATES2,
	"\t{..., %ld, %ld, %lu,,%lu, %ld, ...}) entered"
	ec FTSERVER_TRACE_EXIT_FTSERVER_SWAP_TRANS_STATES,
	"ftserver_SwapTransStates returns %ld"

	ec FTSERVER_TRACE_ENTER_LOCK,
	"vols_Lock(%s) called"
	ec FTSERVER_TRACE_ENTER_LOCK_2,
	"vols_Lock(%s) disables cancels: old state=%ld, cancelCode=%ld"

	ec FTSERVER_TRACE_ENTER_UNLOCK,
	"vols_Unlock(%s) called: old state=%ld"
	ec FTSERVER_TRACE_ENTER_UNLOCK_2,
	"vols_Unlock(%s) has re-enabled cancels (code %ld)"

	ec FTSERVER_TRACE_AUTHFAIL,
	"%s: Authorization failure, code %ld"

	ec FTSERVER_TRACE_EXCEPTION,
	"%s: caught exception (code %ld): %s"

	ec FTSERVER_TRACE_NEED_DRAIN,
	"%s: Need to drain the input pipe; code so far = %lu"
	ec FTSERVER_TRACE_DRAIN_DONE,
	"%s: Draining done, %ld bytes in %ld calls"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_CONNECT_SOCK,
	"SFTSERVER_ConnectSock(%#lx, %ld, %#lx, %#lx)"
	ec FTSERVER_TRACE_ENTER_SFTSERVER_CONNECT_TCP,
	"SFTSERVER_ConnectSock TCP clntAddr(%ld, %ld, %#lx)"
	ec FTSERVER_TRACE_ENTER_SFTSERVER_CONNECT_UNIX,
	"SFTSERVER_ConnectSock UNIX clntAddr(%ld, %s)"
	ec FTSERVER_TRACE_ENTER_SFTSERVER_CONNECT_UNSPEC,
	"SFTSERVER_ConnectSock Unsupported protocol(%ld)"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_CONNECT_TCP,
	"SFTSERVER_ConnectSock TCP srvrAddr(%ld, %ld, %#lx)"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_CONNECT_UNIX,
	"SFTSERVER_ConnectSock UNIX srvrAddr(%ld, %s)"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_CONNECT_SOCK,
	"SFTSERVER_ConnectSock returns %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_DISCONNECT_SOCK,
	"SFTSERVER_DisconnectSock(%#lx, %ld)"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_DISCONNECT_SOCK,
	"SFTSERVER_DisconnectSock returns %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_LISTEN_SOCK,
	"SFTSERVER_ListenSock(%#lx, %ld, %#lx)"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_LISTEN_TCP,
	"SFTSERVER_ListenSock TCP srvrAddr(%ld, %ld, %#lx)"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_LISTEN_SOCK,
	"SFTSERVER_ListenSock returns %ld"

	ec FTSERVER_TRACE_ENTER_SFTSERVER_ACCEPT_SOCK,
	"SFTSERVER_AcceptSock(%#lx, %ld, %#lx)"
	ec FTSERVER_TRACE_ENTER_SFTSERVER_ACCEPT_TCP,
	"SFTSERVER_AcceptSock TCP srvrAddr(%ld, %ld, %#lx)"
	ec FTSERVER_TRACE_EXIT_SFTSERVER_ACCEPT_SOCK,
	"SFTSERVER_AcceptSock returns %ld"
end

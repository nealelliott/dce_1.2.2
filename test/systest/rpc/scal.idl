/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 */
/*
 * HISTORY
 * $Log: scal.idl,v $
 * Revision 1.1.8.2  1996/03/09  20:51:30  marty
 * 	Add OSF copyright
 * 	[1996/03/09  20:29:16  marty]
 *
 * Revision 1.1.8.1  1995/12/13  21:55:50  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/13  21:45:20  root]
 * 
 * Revision 1.1.6.2  1993/07/09  13:14:30  root
 * 	Initial King Kong branch
 * 	[1993/07/09  13:14:03  root]
 * 
 * Revision 1.1.4.2  1993/03/31  12:35:12  mgm
 * 	Initial GAMERA branch
 * 
 * Revision 1.1.3.2  1992/06/11  19:57:48  mcfarland
 * 	changed files from test_latest
 * 	[1992/06/09  13:04:55  mcfarland]
 * 
 * Revision 1.1.1.2  1992/05/28  15:14:28  root
 * 	    Loading drop Dce1_0_1b15
 * 
 * Revision 1.1  1992/01/19  14:36:58  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/*
*/
/*
 * 
 * Copyright 1989 by Apollo Computer, Inc.
 * 
 * Permission to use, copy, modify, and distribute this
 * software and its documentation for any purpose and without
 * fee is hereby granted, provided that the above copyright
 * notice appear in all copies and that both that copyright
 * notice and this permission notice appear in supporting
 * documentation, and that the name of Apollo Computer, Inc not
 * be used in advertising or publicity pertaining to distribution
 * of the software without specific, written prior permission.
 * Apollo Computer, Inc. makes no representations about the
 * suitability of this software for any purpose.  It is provided
 * "as is" without express or implied warranty.
 * 
 */
/* @(#)scal.idl	1.1
 *  NIDL TEST 
 *	Extracted	1/31/91 16:32:59
 *	from delta on	1/31/91 16:30:56
 */

[uuid(3fb4f09c-b000-0000-0d00-018ed9000000),
 version(2),
 endpoint("ncadg_ip_udp:[6678]", "ncacn_ip_tcp:[6678]")]
interface scalartest {

/*
 * s c a l a r t e s t
 *
 * Interface for testing correctness of a nidl compiler's marshalling,
 * unmarshalling, and conversion of scalar types.
 */

/*
 * s c a l a r t e s t _ o p 1
 * send a small integer; receive it back incremented by 1
 */
void scalartest_op1(
    [in] handle_t h,
    [in] small int i,
    [out] small int *o
    );

/*
 * s c a l a r t e s t _ o p 2
 * send an unsigned small integer; receive it back incremented by 1
 */
void scalartest_op2(
    [in] handle_t h,
    [in] unsigned small int i,
    [out] unsigned small int *o
    );

/*
 * s c a l a r t e s t _ o p 3
 * send a short integer; receive it back incremented by 1
 */
void scalartest_op3(
    [in] handle_t h,
    [in] short int i,
    [out] short int *o
    );

/*
 * s c a l a r t e s t _ o p 4
 * send an unsigned short integer; receive it back incremented by 1
 */
void scalartest_op4(
    [in] handle_t h,
    [in] unsigned short i,
    [out] unsigned short int *o
    );

/*
 * s c a l a r t e s t _ o p 5
 * send a long integer; receive it back incremented by 1
 */
void scalartest_op5(
    [in] handle_t h,
    [in] long int i,
    [out] long int *o
    );

/*
 * s c a l a r t e s t _ o p 6
 * send an unsigned long integer; receive it back incremented by 1
 */
void scalartest_op6(
    [in] handle_t h,
    [in] unsigned long int i,
    [out] unsigned long int *o
    );

/*
 * s c a l a r t e s t _ o p 7
 * send a hyper integer; receive it back incremented by 1
 */
void scalartest_op7(
    [in] handle_t h,
    [in] hyper int i,
    [out] hyper int *o
    );

/*
 * s c a l a r t e s t _ o p 8
 * send an unsigned hyper integer; receive it back incremented by 1
 */
void scalartest_op8(
    [in] handle_t h,
    [in] unsigned hyper int i,
    [out] unsigned hyper int *o
    );

/*
 * s c a l a r t e s t _ o p 9
 * send a boolean; receive it back negated
 */
void scalartest_op9(
    [in] handle_t h,
    [in] boolean i,
    [out] boolean *o
    );

/*
 * s c a l a r t e s t _ o p 1 0
 * send a byte; receive it back inverted
 */
void scalartest_op10(
    [in] handle_t h,
    [in] byte i,
    [out] byte *o
    );

/*
 * s c a l a r t e s t _ o p 1 1
 * send a float; receive it back squared
 */
void scalartest_op11(
    [in] handle_t h,
    [in] float i,
    [out] float *o
    );

/*
 * s c a l a r t e s t _ o p 1 2
 * send a double; receive it back squared
 */
void scalartest_op12(
    [in] handle_t h,
    [in] double i,
    [out] double *o
    );

/*
 * s c a l a r t e s t _ o p 1 3
 * send an char;
 * receive it back case reversed if alphabetic, unchanged otherwise
 */
void scalartest_op13(
    [in] handle_t h,
    [in] char i,
    [out] char *o
    );

}

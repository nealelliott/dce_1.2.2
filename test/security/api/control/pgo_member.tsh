#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
# 
# HISTORY
# $Log: pgo_member.tsh,v $
# Revision 1.1.4.2  1996/03/11  02:33:18  marty
# 	Update OSF copyright years
# 	[1996/03/10  20:02:46  marty]
#
# Revision 1.1.4.1  1995/12/11  20:18:38  root
# 	Submit OSF/DCE 1.2.1
# 	[1995/12/11  19:50:56  root]
# 
# Revision 1.1.2.2  1992/12/31  19:07:55  htf
# 	Add copyright/history/log leader with embedded copyrights
# 	[1992/12/31  18:51:00  htf]
# 
# $EndLog$
#
# 
# Copyright 1989 by Apollo Computer, Inc.
# 
# Permission to use, copy, modify, and distribute this
# software and its documentation for any purpose and without
# fee is hereby granted, provided that the above copyright
# notice appear in all copies and that both that copyright
# notice and this permission notice appear in supporting
# documentation, and that the name of Apollo Computer, Inc not
# be used in advertising or publicity pertaining to distribution
# of the software without specific, written prior permission.
# Apollo Computer, Inc. makes no representations about the
# suitability of this software for any purpose.  It is provided
# "as is" without express or implied warranty.
#

# PGO_MEMBER.TSH
#
#    Perform the tests for the DCE Passed_etc v2.0 function 
#           sec_rgy_pgo_add_member()
#			sec_rgy_pgo_delete_member()
#			sec_rgy_pgo_is_member()
#			sec_rgy_pgo_get_members()
 
#Add status:
#   name_exists: same name, no matter other data.
# 	object_exists: same id or unix_num, name doesn't matter.
#

echo
echo Begin pgo_member (add_member, delete_member, is_member, get_members) test.
echo 

#
# Import the environment and literal definition files
#  

include tshrc
include pgo.tshrc

set TEST=pgo_test_basic

  
#
# The member test cases
#
# apple, pear - hurray (group)
# kiwi - hat (group) 
# banana, orange - hurray (org)
# grape - hat (org)
#

 
test $TEST \
"M1 pgo_add_member (person on group) test: good test" \
$PGO_ADD_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_group hurray  1 $DONT_CARE apple
 

test $TEST \
"M2 pgo_add_member (person on group) test: good test" \
$PGO_ADD_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_group hurray  2 $DONT_CARE pear
   

test $TEST \
"M3 pgo_add_member (person on group) test: good test" \
$PGO_ADD_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_group hat  3 $DONT_CARE kiwi
 


test $TEST \
"M4 pgo_add_member (person on org) test: good test" \
$PGO_ADD_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_org hurray  4 $DONT_CARE banana
  

test $TEST \
"M5 pgo_add_member (person on org) test: good test" \
$PGO_ADD_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_org hurray 5 $DONT_CARE orange
  

test $TEST \
"M6 pgo_add_member (person on org) test: good test" \
$PGO_ADD_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_org hat 6 $DONT_CARE grape


test $TEST \
"M7 pgo_add_member (person on person) test: bad_domain test" \
$PGO_ADD_MEMBER $sec_rgy_bad_domain \
$sec_rgy_domain_person hurray  1 $DONT_CARE hurray
#  pgo_test_basic -s M7  7 0 1 hurray 1 0 hurray
 
   

test $TEST \
"M8 pgo_add_member (person on group) test: invalid group name" \
$PGO_ADD_MEMBER $sec_rgy_object_not_found \
$sec_rgy_domain_group bala  1 $DONT_CARE hurray
 


test $TEST \
"M9 pgo_add_member (person on org) test: invalid org name" \
$PGO_ADD_MEMBER $sec_rgy_object_not_found \
$sec_rgy_domain_org bala  1 $DONT_CARE hurray



test $TEST \
"M10 pgo_add_member (person on org) test: invalid person name" \
$PGO_ADD_MEMBER $sec_rgy_object_not_found \
$sec_rgy_domain_org hurray  $DONT_CARE $DONT_CARE bala
  
          
#

test $TEST \
"M11 pgo_is_member (person on org) test: good" \
$PGO_IS_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_org hurray  $DONT_CARE $IS_AN_ALIAS orange


test $TEST \
"M12 pgo_is_member (person on org) test: good" \
$PGO_IS_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_org hat  $DONT_CARE $IS_AN_ALIAS grape



test $TEST \
"M13 pgo_is_member (person on group) test: good" \
$PGO_IS_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_group hurray  $DONT_CARE $IS_AN_ALIAS apple


test $TEST \
"M14 pgo_is_member (person on group) test: good" \
$PGO_IS_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_group hurray  $DONT_CARE $IS_AN_ALIAS pear
 

test $TEST \
"M15 pgo_is_member (person on group) test: not member" \
$PGO_IS_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_group hurray  $DONT_CARE $IS_NOT_AN_ALIAS hat
  
 

test $TEST \
"M16 pgo_is_member (person on org) test: not member" \
$PGO_IS_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_org hurray  $DONT_CARE $IS_NOT_AN_ALIAS hat
  


test $TEST \
"M17 pgo_is_member (person on group) test: invalid group name" \
$PGO_IS_MEMBER $sec_rgy_object_not_found \
$sec_rgy_domain_group bala  $DONT_CARE $DONT_CARE hurray
  

test $TEST \
"M18 pgo_is_member (person on org) test: invalid org name" \
$PGO_IS_MEMBER $sec_rgy_object_not_found \
$sec_rgy_domain_org bala  $DONT_CARE $DONT_CARE hurray
                                                        

test $TEST \
"M19 pgo_is_member (person on org) test: invalid person name" \
$PGO_IS_MEMBER $sec_rgy_object_not_found \
$sec_rgy_domain_org hurray  $DONT_CARE $DONT_CARE bala
  
#

test $TEST \
"M20 pgo_get_members ( org) test: good" \
$PGO_GET_MEMBERS $sec_rgy_status_ok \
$sec_rgy_domain_org hurray  $DONT_CARE $DONT_CARE fake
  


test $TEST \
"M21 pgo_get_members ( org) test: good" \
$PGO_GET_MEMBERS $sec_rgy_status_ok \
$sec_rgy_domain_org hat  $DONT_CARE $DONT_CARE fake
  


test $TEST \
"M22 pgo_get_members ( group ) test: good" \
$PGO_GET_MEMBERS $sec_rgy_status_ok \
$sec_rgy_domain_group hurray  $DONT_CARE $DONT_CARE fake
 
 

test $TEST \
"M23 pgo_get_members ( group ) test: good" \
$PGO_GET_MEMBERS $sec_rgy_status_ok \
$sec_rgy_domain_group hat  $DONT_CARE $DONT_CARE fake
 



test $TEST \
"M24 pgo_get_members ( group ) test: invalid group name" \
$PGO_GET_MEMBERS $sec_rgy_object_not_found \
$sec_rgy_domain_group bala  $DONT_CARE $DONT_CARE fake
 


test $TEST \
"M25 pgo_get_members ( org ) test: invalid org name" \
$PGO_GET_MEMBERS $sec_rgy_object_not_found \
$sec_rgy_domain_org bala  $DONT_CARE $DONT_CARE fake  
 
                     
#
  
test $TEST \
"M26 pgo_delete_member ( org) test: invalid org name" \
$PGO_DELETE_MEMBER $sec_rgy_object_not_found \
$sec_rgy_domain_org hurray  $DONT_CARE $DONT_CARE bala
 

test $TEST \
"M27 pgo_delete_member ( org) test: good" \
$PGO_DELETE_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_org hurray  $DONT_CARE $DONT_CARE banana


test $TEST \
"M28 pgo_delete_member ( org) test: good" \
$PGO_DELETE_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_org hurray  $DONT_CARE $DONT_CARE orange
 

test $TEST \
"M29 pgo_delete_member ( org) test: good" \
$PGO_DELETE_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_org hat  $DONT_CARE $DONT_CARE grape


test $TEST \
"M30 pgo_delete_member ( group) test: invalid group name" \
$PGO_DELETE_MEMBER $sec_rgy_object_not_found \
$sec_rgy_domain_group hurray  $DONT_CARE $DONT_CARE bala
                                           

test $TEST \
"M31 pgo_delete_member (group) test: good" \
$PGO_DELETE_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_group hat  $DONT_CARE $DONT_CARE kiwi
 

test $TEST \
"M32 pgo_delete_member ( group) test: person not member" \
$PGO_DELETE_NO_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_group hurray  $DONT_CARE $DONT_CARE hurray

test $TEST \
"M33 pgo_delete_member ( group) test: bad domain" \
$PGO_DELETE_MEMBER $sec_rgy_bad_domain \
$sec_rgy_domain_person hurray  $DONT_CARE $DONT_CARE hurray

test $TEST \
"M34 pgo_delete_member ( group) test: good" \
$PGO_DELETE_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_group hurray  $DONT_CARE $DONT_CARE apple

test $TEST \
"M35 pgo_delete_member ( group) test: good" \
$PGO_DELETE_MEMBER $sec_rgy_status_ok \
$sec_rgy_domain_group hurray  $DONT_CARE $DONT_CARE pear


  


  
#
# Clean up.  For testing, you need to have members (person) hanging
# around for as long as the test last.  Therefore, person PGO was not
# deleted in the code, instead they are deleted here.
#

#
# 
#test $TEST \
#"DP1 pgo_delete person test: good" \
#$PGO_DELETE $sec_rgy_status_ok \
#$sec_rgy_domain_person hurray  9 $DONT_CARE fake
# 
#
#test $TEST \
#"DP2 pgo_delete person test: good" \
#$PGO_DELETE $sec_rgy_status_ok \
#$sec_rgy_domain_person hat 9 $DONT_CARE fake
#
#echo
#
subtotal clear
summary

echo 
echo End pgo_member (add_member, delete_member, is_member, get_members) test.
echo

# End of pgo_member.tsh


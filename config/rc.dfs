#!/bin/sh
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1994, 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
# the full copyright text.
# @HP_COPYRIGHT@
# 
# HISTORY
# $Log: rc.dfs,v $
# Revision 1.1.21.2  1996/03/09  23:10:28  marty
# 	Update OSF copyright year
# 	[1996/03/09  22:28:20  marty]
#
# Revision 1.1.21.1  1995/12/07  21:40:10  root
# 	Submit OSF/DCE 1.2.1
# 	[1995/12/07  20:57:07  root]
# 
# Revision 1.1.18.3  1994/08/10  20:47:00  mckeen
# 	Added support for NFS gateway
# 	[1994/08/10  20:07:17  mckeen]
# 
# Revision 1.1.18.2  1994/07/13  22:31:00  devsrc
# 	merged with bl-10
# 	[1994/06/29  12:14:20  devsrc]
# 
# 	Added a token on end of dfsd line to allow proper uncommenting
# 	by dfs_config script (OT 9564)
# 	[1994/04/28  18:16:39  mckeen]
# 
# Revision 1.1.18.1  1994/06/09  16:05:31  devsrc
# 	cr10892 - fix copyright
# 	[1994/06/09  15:50:11  devsrc]
# 
# Revision 1.1.13.4  1993/11/09  22:38:08  rsarbo
# 	use double # as prefix for lines that may be uncommented
# 	in this file.  Otherwise, inadvertent mention of some
# 	dfs processes in the comments in the history log will cause
# 	those history log lines to be uncommented
# 	[1993/11/09  22:35:57  rsarbo]
# 
# Revision 1.1.13.3  1993/10/25  19:44:34  rsarbo
# 	add support for restarting a dfsd with in-memory cache
# 	[1993/10/25  19:35:07  rsarbo]
# 
# Revision 1.1.13.2  1993/10/13  14:22:12  rsarbo
# 	execute kload out of ext, not bin
# 	[1993/10/13  14:07:19  rsarbo]
# 
# Revision 1.1.13.1  1993/10/05  17:15:21  rsarbo
# 	epidaemon is a kproc on RIOS and it's existence cannot be
# 	verified using ps.  Removed the check for epidaemon which
# 	caused a spurious error message.
# 	[1993/10/05  17:10:43  rsarbo]
# 
# Revision 1.1.11.3  1993/07/22  16:35:52  tom
# 	Set default path for ETC.
# 	[1993/07/22  16:35:23  tom]
# 
# Revision 1.1.11.2  1993/07/19  19:27:35  zeliff
# 	HP port of DFS
# 	[1993/07/19  18:21:05  zeliff]
# 
# Revision 1.1.9.4  1993/07/16  18:59:55  kissel
# 	Fixes to accomodate new dce_config tree
# 	[1993/07/08  20:41:25  jake]
# 
# Revision 1.1.5.2  1993/06/07  15:40:35  kissel
# 	Fix revision comment to have the right number of spaces.
# 	[1993/06/07  15:23:18  kissel]
# 
# 	Initial HPUX RP version.
# 	[1993/06/03  20:26:52  kissel]
# 
# Revision 1.1.5.2  1993/04/01  19:28:24  kissel
# 	Creating GAMERA branch with latest Hp_dce1_0_1 code.
# 	[1993/04/01  19:27:38  kissel]
# 
# Revision 1.1.2.5  1993/03/29  19:11:11  kissel
# 	- Add changes for dynamic kernel extensions on HPUX.
# 	- Add logging calls (like rc.dce).
# 	- Change to use the daemonrunning function  (like rc.dce).
# 	[1993/03/29  18:19:08  kissel]
# 
# Revision 1.1.2.4  1993/03/04  13:41:51  kissel
# 	Make the change specified for Revision 1.1.4.3 from OSF.
# 	[1993/03/04  13:41:21  kissel]
# 
# Revision 1.1.2.3  1993/02/25  16:00:04  kissel
# 	Add the OSF history comments that we could get in there the first 100 times.  But, put them
# 	after the real RCS history since that may have been the problem.
# 	[1993/02/25  15:59:43  kissel]
# 
# Revision 1.1.2.2  1993/02/25  15:30:46  kissel
# 	100th reiinsertion of rc.dfs
# 	[1993/02/25  15:27:55  kissel]
# 
# 	evision 1.1.4.3  1993/03/03  23:17:49  rsarbo
# 	insert space in key word in last comment (also unmentionable in
# 	this comment) that caused dce_config to uncomment that line
# 	in the history log
# 
# 	evision 1.1.2.5  1993/02/24  22:51:27  rsarbo
# 	OT6754: Recover aggregates and retry dfs export if first attempt
# 	fails.  Don't try again if salvage finds inconsistencies on the
# 	aggregate.  Instead, pause and give the user a chance to quit out
# 	of the script to fix the problem.
# 	[1993/02/24  21:26:23  rsarbo]
# 
# 	evision 1.1.2.4  1992/12/31  20:44:14  rsarbo
# 	CR6226: DFS/LFS not properly supported in config.
# 	Salvage Episode aggregate if it doesn't export
# 	successfully the first time.
# 	[1992/12/31  20:43:29  rsarbo]
# 
# 	evision 1.1.2.3  1992/12/06  03:06:27  zeliff
# 	Embedding copyrights
# 	[1992/12/05  22:57:47  zeliff]
# 
# 	evision 1.1.2.2  1992/10/01  19:53:12  rsarbo
# 	Initial revision.  This rc file handled analogous to rc.dce now.
# 	Appropriate entries are uncommented automatically by dce_config
# 	at config time.
# 	[1992/10/01  19:38:31  rsarbo]
# 
# $EndLog$

#------------------------------------------------------------------
# source common utilities
#------------------------------------------------------------------

: ${ETC:=/etc}
export ETC

. ${ETC}/dce_config_utils

err_found=0

daemonrunning()
{
    cmdpath=$1
    cmdleaf=`basename $cmdpath`

    # Handle case of OS's that display only 8 characters of pgm name in ps output.
    cmd8=$cmdleaf
    if   [ $cmdleaf = "epidaemon" ]; then cmd8="epidaemo"
    elif [ $cmdleaf = "bosserver" ]; then cmd8="bosserve"
    fi

    cmdall=$*

    ps $PSARGS | grep -q $cmd8
    if [ $? -ne 0 ]
    then
	# Just return if the daemon doesn't exist.
	[ -x $cmdpath ] || return 0

	log_msg SUMMARY "rc.dfs: Starting daemon \"$cmdleaf\""
	log_msg DETAIL "rc.dfs: Executing: $cmdall"
	$cmdall

	# Test for success.  Epidaemon is a kproc
	# on RIOS and therefore cannot be verified.
	if [ $cmd8 != "epidaemo" ]; then
		ps $PSARGS | grep -q $cmd8
		if [ $? -ne 0 ]; then
		    err_exit "rc.dfs: Failed to start daemon \"$cmdall\""
		    err_found=1
		fi
	fi
    fi
    log_msg VERBOSE "rc.dfs: Daemon is running - \"$cmdleaf\""
}

log_msg DEBUG "rc.dfs: In rc.dfs script."

#
# These lines auto-enabled by dce_config for RIOS 
# platform only.
#
##log_msg SUMMARY "rc.dfs: Loading kernel extensions (export.ext dfscore.ext dfscmfx.ext dcelfs.ext)"
##log_msg DETAIL "rc.dfs: Executing: $DCELOCAL/ext/cfgexport -a $DCELOCAL/ext/export.ext"
##$DCELOCAL/ext/cfgexport -a $DCELOCAL/ext/export.ext
##log_msg DETAIL "rc.dfs: Executing: $DCELOCAL/ext/cfgdfs -a $DCELOCAL/ext/dfscore.ext"
##$DCELOCAL/ext/cfgdfs -a $DCELOCAL/ext/dfscore.ext
##log_msg DETAIL "rc.dfs: Executing: $DCELOCAL/ext/cfgdfs -a $DCELOCAL/ext/dfscmfx.ext"
##$DCELOCAL/ext/cfgdfs -a $DCELOCAL/ext/dfscmfx.ext
##log_msg DETAIL "rc.dfs: Executing: $DCELOCAL/ext/cfglfs -a $DCELOCAL/ext/dcelfs.ext"
##$DCELOCAL/ext/cfglfs -a $DCELOCAL/ext/dcelfs.ext
##daemonrunning $DCELOCAL/bin/epidaemon 1

#
# These lines auto-enabled by dce_config for HPUX
# platform only.
#
##log_msg SUMMARY "rc.dfs: Loading kernel extensions (dce_krpc dfs_core dfs_client dfs_server dfs_episode)"
##log_msg DETAIL "rc.dfs: Executing: $DCELOCAL/ext/kload -N dce_krpc"
##$DCELOCAL/ext/kload -N dce_krpc
##log_msg DETAIL "rc.dfs: Executing: $DCELOCAL/ext/kload -N dfs_core"
##$DCELOCAL/ext/kload -N dfs_core
##log_msg DETAIL "rc.dfs: Executing: $DCELOCAL/ext/kload    dfs_client"
##$DCELOCAL/ext/kload    dfs_client
##log_msg DETAIL "rc.dfs: Executing: $DCELOCAL/ext/kload    dfs_server"
##$DCELOCAL/ext/kload    dfs_server
##log_msg DETAIL "rc.dfs: Executing: $DCELOCAL/ext/kload    dfs_episode"
##$DCELOCAL/ext/kload    dfs_episode

##LFSINIT=$DCELOCAL/bin/epiinit
if [ $LFSINIT ]; then
    log_msg SUMMARY "rc.dfs: Initializing DCE/LFS"
    log_msg DETAIL "rc.dfs: Executing: $LFSINIT"
    $LFSINIT
fi

##DFSEXPORT=$DCELOCAL/bin/dfsexport
# Handle correctly salvaging LFS aggregates; note that this is not run unless
# the above line is uncommented (which it is by dce_config).
if [ $DFSEXPORT ]; then
    log_msg DETAIL "rc.dfs: Executing: rm -f $DCELOCAL/var/dfs/dfsatab"
    rm -f $DCELOCAL/var/dfs/dfsatab
    LFSAGGRS=`awk ' substr($1,1,1) != "#" && \
        $3 == "lfs" { print $1 }' $DCELOCAL/var/dfs/dfstab`
    EXPORTABLE_AGGRS=`awk ' substr($1,1,1) != "#" && \
        $3 != "lfs" { print $1 }' $DCELOCAL/var/dfs/dfstab`
    for lfsaggr in $LFSAGGRS
    do
	log_msg SUMMARY "rc.dfs: Exporting \"$lfsaggr\""
	log_msg DETAIL "rc.dfs: Executing: $DFSEXPORT $lfsaggr 2> /tmp/rc.dfs.$$.err"
        $DFSEXPORT $lfsaggr 2> /tmp/rc.dfs.$$.err
        if [ "$?" -ne 0 ]
        then
            #
            # Obviously, we'd prefer to check the return
            # value rather than grep the error string,
            # but until dfsexport returns meaningful
            # error codes, we've got no choice
            #
	    log_msg DETAIL "rc.dfs: Executing: grep "need to be recovered" /tmp/rc.dfs.$$.err"
            grep -q "need to be recovered" /tmp/rc.dfs.$$.err
            if [ "$?" -eq 0 ]
            then
                log_msg SUMMARY "rc.dfs: Recovering aggregate \"$lfsaggr\"... ";
		log_msg DETAIL "rc.dfs: Executing: $DCELOCAL/bin/salvage -rec -verify $lfsaggr"
                $DCELOCAL/bin/salvage -rec -verify $lfsaggr
                if [ "$?" -eq 0 ]
                then
                    EXPORTABLE_AGGRS="$EXPORTABLE_AGGRS $lfsaggr"
                else
                    err_exit "rc.dfs: WARNING: PROBLEM RECOVERING \"$lfsaggr\""
		    err_found=1
                fi
            else
		log_msg DETAIL "rc.dfs: Executing: cat /tmp/rc.dfs.$$.err"
                cat /tmp/rc.dfs.$$.err
                err_exit "rc.dfs: WARNING: PROBLEM EXPORTING \"$lfsaggr\""
		err_found=1
            fi
        fi
	log_msg DETAIL "rc.dfs: Executing: rm -f /tmp/rc.dfs.$$.err"
        rm -f /tmp/rc.dfs.$$.err
    done
    # now export everything else
    for expaggr in $EXPORTABLE_AGGRS
    do
	log_msg SUMMARY "rc.dfs: Exporting \"$expaggr\""
	log_msg DETAIL "rc.dfs: Executing: $DFSEXPORT $expaggr"
        $DFSEXPORT $expaggr
        if [ "$?" -ne 0 ]
	then
	    err_exit "rc.dfs: WARNING: PROBLEM EXPORTING \"$expaggr\""
	    err_found=1
        fi
    done
fi

# Start the daemons

##daemonrunning $DCELOCAL/bin/bosserver
##daemonrunning $DCELOCAL/bin/dfsbind
##daemonrunning $DCELOCAL/bin/fxd -mainprocs 7 -admingroup subsys/dce/dfs-admin 

# Only one of the following two lines should be enabled
# depending on whether you're using an in-memory on-disk dfs cache.
# dfs_config replaces SIZE with the actual size of the cache.
##daemonrunning $DCELOCAL/bin/dfsd 	# diskcache
##daemonrunning $DCELOCAL/bin/dfsd -memcache -blocks SIZE

##daemonrunning $DCELOCAL/bin/dfsgwd &

# test for success and return status
if [ $err_found = 0 ]
then
    log_msg VERBOSE "rc.dfs: Successfully started daemons."
else
    log_msg VERBOSE "rc.dfs: Failed to start daemons."
fi
exit $err_found

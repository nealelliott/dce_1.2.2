#!/bin/sh
#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
#
# HISTORY
# $Log: runtests,v $
# Revision 1.1.10.1  1996/10/17  18:18:18  damon
# 	Submitting on behalf of Transarc
# 	[1996/10/17  16:50:02  damon]
#
# Revision 1.1.5.3  1993/02/24  18:17:45  delgado
# 	Use "getcellname" rather than looking dce_cf.db for the cellname
# 	so that cm tests will work in a cell whose name is mixed-case
# 	[1993/02/24  18:17:10  delgado]
# 
# Revision 1.1.5.2  1993/01/11  18:25:43  htf
# 	Embedded copyright notice
# 	[1993/01/11  16:58:04  htf]
# 
# Revision 1.1.2.3  1992/05/21  12:36:07  jaffe
# 	Transarc delta: fred-merge-tests 1.1
# 	  Selected comments:
# 	    Created this delta to merge Phil Hirsch's final DFS test code changes with
# 	    the test code that the OSF had.  Hopefully, this means we and the OSF
# 	    should be looking at the same test code.
# 	    Changes to facilitate merge of local DFS test code with the OSF's.
# 	Transarc delta: fred-remove-sys 1.1
# 	  Selected comments:
# 	    To remove dependency on the AFS sys command in the test scripts.
# 
# 	$TALog: runtests,v $
# 	Revision 12.4  1996/03/08  13:36:28  gait
# 	Makes minor repairs to the following tests: fts, rep, acl, fset, cm.
# 	Adds a script to run these tests all at once. The script bullet proofs
# 	the test environment as much as possible and gathers the logs together
# 	in one place.
# 
# 	Fix whoami calculation.
# 	[from r4.6 by delta gait-db7321-repair-rep-tests, r1.1]
# 
# Revision 4.6  1994/11/01  22:22:05  cfe
# 	Bring over the changes that the OSF made in going from their DCE 1.0.3
# 	release to their DCE 1.1 release.
# 	[from r4.5 by delta cfe-db6109-merge-1.0.3-to-1.1-diffs, r1.1]
# 
# 	[1992/05/20  17:58:59  jaffe]
# 
# $EndLog$
#

###############################################################################
#    Copyright (C) 1991, 1992 Transarc Corporation - All rights reserved      #
###############################################################################

# This is a driver script, which runs cm/test*. The tests there are
# applicable to DFS. All cm subcommands are exercised by this test suite.

###############################################################################

# Usage:                runtests

# Typically run via:    runtests

# A test log is produced; the default name is ./cm.runtests.log.

###############################################################################

# Test environment:
# This test requires that DFS be up and running.

# Privilege required:
# Nothing special.

###############################################################################

d=`pwd`
hn=`hostname`
p=`basename $0`
rc=0
ty=cm
cell_path=`getcellname`

: ${AUTH_ARG=""}
: ${CELL_NAME=`basename $cell_path`}
: ${CELL_ARG=""}
: ${TESTTOP="."}
: ${VERB_ARG=""}

: ${bin_dir=/opt/dcelocal/bin}
: ${dns_cell_name=/.../$CELL_NAME}
: ${export_root=/.../$CELL_NAME/fs}
: ${testhome=$TESTTOP/$ty}

PATH=":"$bin_dir":"$PATH

: ${lf=$ty.$p.log}

WHOAMI=`/usr/ucb/whoami`
if test ${WHOAMI} = root; then rootflag=TRUE; else rootflag=FALSE; fi

export AUTH_ARG CELL_NAME CELL_ARG TESTTOP VERB_ARG
export bin_dir dns_cell_name export_root testhome
export PATH lf rootflag

###############################################################################

(
echo ""
echo "$ty/$p running on $hn at `date`"
echo "   in cell $CELL_NAME."
echo "Root flag is $rootflag."
) | tee -a $lf

if test "$CELL_NAME" = ""
   then echo "Can't find cellname in /opt/dcelocal/dce_cf.db - aborting." |
           tee -a $lf
        exit 2
   fi

###############################################################################

outfile=/tmp/$ty.$p.$$
rm -rf $outfile

if test $rootflag = TRUE
   then tests="1 2 3 5 6"
   else tests="1 2 4 5 6"
   fi

for f in $tests
    do
    test=test$f
    (echo ""; echo "Running $test.") | tee -a $lf
    sync; sync
    $testhome/$test > $outfile 2>&1; rf=$?; rc=`expr $rc + $rf`
    sync; sync
    cat $outfile | tee -a $lf
    (echo ""; echo "$test returned $rf.") | tee -a $lf
    sync; sync
    rm -f $outfile
    sync; sync
    done

rm -rf $outfile $ty.test[1-9]*.out

###############################################################################

(echo ""; echo "Tests complete at `date`."; echo "") | tee -a $lf
if test $rc -eq 0
   then echo "$ty/$p PASSED" | tee -a $lf
   else echo "$ty/$p FAILED ($rc total errors)" | tee -a $lf
   fi

exit $rc

###############################################################################

#
# @OSF_COPYRIGHT@
# COPYRIGHT NOTICE
# Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
# ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
# src directory for the full copyright text.
# 
# HISTORY
# $Log: key_mgmt_set_key.tsh,v $
# Revision 1.1.4.2  1996/03/11  02:31:48  marty
# 	Update OSF copyright years
# 	[1996/03/10  20:02:01  marty]
#
# Revision 1.1.4.1  1995/12/11  20:16:59  root
# 	Submit OSF/DCE 1.2.1
# 	[1995/12/11  19:50:06  root]
# 
# Revision 1.1.2.2  1992/12/31  19:06:39  htf
# 	Add copyright/history/log leader with embedded copyrights
# 	[1992/12/31  18:48:16  htf]
# 
# $EndLog$
#
# 
# Copyright 1989 by Apollo Computer, Inc.
# 
# Permission to use, copy, modify, and distribute this
# software and its documentation for any purpose and without
# fee is hereby granted, provided that the above copyright
# notice appear in all copies and that both that copyright
# notice and this permission notice appear in supporting
# documentation, and that the name of Apollo Computer, Inc not
# be used in advertising or publicity pertaining to distribution
# of the software without specific, written prior permission.
# Apollo Computer, Inc. makes no representations about the
# suitability of this software for any purpose.  It is provided
# "as is" without express or implied warranty.
#

#
# Import the environment and literal definition files
#  

include tshrc
include key_mgmt.tshrc

set TEST=key_mgmt
        

echo Begin key_mgmt_set_key tests.

#
# Set up some "version 1" keys
#
test $TEST \
"k1a key_mgmt_set_key: test_key1,vers1,passwd1v1" \
$KEY_MGMT_SET_KEY $sec_rgy_status_ok \
"test_key1" /tmp/key_mgmt_test 1 $RPC_C_AUTHN_DCE_PRIVATE passwd1v1

test $TEST \
"k1b key_mgmt_set_key: test_key2,vers1,passwd2v1" \
$KEY_MGMT_SET_KEY $sec_rgy_status_ok \
"test_key2" /tmp/key_mgmt_test 1 $RPC_C_AUTHN_DCE_PRIVATE passwd2v1

test $TEST \
"k1c key_mgmt_set_key: test_key3,vers1,passwd3v1" \
$KEY_MGMT_SET_KEY $sec_rgy_status_ok \
"test_key3" /tmp/key_mgmt_test 1 $RPC_C_AUTHN_DCE_PRIVATE passwd3v1

test $TEST \
"k1d key_mgmt_set_key: test_key4,vers1,passwd4v1" \
$KEY_MGMT_SET_KEY $sec_rgy_status_ok \
"test_key4" /tmp/key_mgmt_test 1 $RPC_C_AUTHN_DCE_PRIVATE passwd1v4

#
# Now set up multiple versions around "test_key1"
#

test $TEST \
"k1e key_mgmt_set_key: test_key1,vers2,passwd1v2" \
$KEY_MGMT_SET_KEY $sec_rgy_status_ok \
"test_key1" /tmp/key_mgmt_test 2 $RPC_C_AUTHN_DCE_PRIVATE passwd1v2

test $TEST \
"k1f key_mgmt_set_key: test_key1,vers3,passwd1v3" \
$KEY_MGMT_SET_KEY $sec_rgy_status_ok \
"test_key1" /tmp/key_mgmt_test 3 $RPC_C_AUTHN_DCE_PRIVATE passwd1v3


test $TEST \
"k1g key_mgmt_set_key: test_key1,vers4,passwd1v4" \
$KEY_MGMT_SET_KEY $sec_rgy_status_ok \
"test_key1" /tmp/key_mgmt_test 4 $RPC_C_AUTHN_DCE_PRIVATE passwd1v4


#
# Now try to add duplicates
#

test $TEST \
"k1h key_mgmt_set_key: duplicate: test_key1,vers1,passwd1v1" \
$KEY_MGMT_SET_KEY $sec_key_mgmt_e_key_version_ex \
"test_key1" /tmp/key_mgmt_test 1 $RPC_C_AUTHN_DCE_PRIVATE passwd1v1


test $TEST \
"k1i key_mgmt_set_key: duplicate princ,vers: test_key1,vers1,newpasswd1v1" \
$KEY_MGMT_SET_KEY $sec_key_mgmt_e_key_version_ex \
"test_key1" /tmp/key_mgmt_test 1 $RPC_C_AUTHN_DCE_PRIVATE newpasswd1v1
   

#
# Test to make sure that version 0 (latest) works correctly
#

test $TEST \
"k1j key_mgmt_set_key: test_key1,v0 (latest),passwd1v5" \
$KEY_MGMT_SET_KEY $sec_key_mgmt_e_key_unavailable \
"test_key1" /tmp/key_mgmt_test 0 $RPC_C_AUTHN_DCE_PRIVATE passwd1v5




subtotal clear
summary

echo 
echo End key_mgmt_set_key tests.
echo


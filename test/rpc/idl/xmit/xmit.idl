/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: xmit.idl,v $
 * Revision 1.1.4.2  1996/03/11  02:19:53  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  19:56:16  marty]
 *
 * Revision 1.1.4.1  1995/12/11  19:31:47  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:16:47  root]
 * 
 * Revision 1.1.2.2  1993/01/07  23:40:51  bbelch
 * 	Embedding copyright notice
 * 	[1993/01/06  13:46:57  bbelch]
 * 
 * Revision 1.1  1992/01/19  03:30:11  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/*
*/
[
 uuid(31c18600-8393-11c9-ba85-08002b0ecef1),
 pointer_default(ptr)
] interface xmit
{
    typedef long long_t;

    typedef struct foo
    {
        /* This cannot be [ref] because for [out] xmitas objects because the stack surrogate is
        not initialized.  In the [in] direction the net object is really application
        by to_xmit so it is initailiazed.  Cannot be [ptr] because 
        */
        [ptr] long *val;
        [ptr] struct foo *next;
    } struct_t;

    typedef long array_t[10];

    typedef union switch (long discrim)
    {
        case 0:
            char a;
        default:
            long b;
    } union_t;

    typedef [transmit_as(unsigned long)] long long_as_long_t;

    /* 07-Mar-91: Temporary restriction, no pointers in transmit_as network rep */
    typedef /*[transmit_as(struct_t)]*/ long long_as_struct_t;

    typedef [transmit_as(long_t)] struct_t struct_as_long_t;

    typedef [transmit_as(array_t)] long_t long_as_array_t;
    
    typedef [transmit_as(long_t)] array_t array_as_long_t;
    
    typedef [transmit_as(union_t)] long_t long_as_union_t;

    typedef [transmit_as(long_t)] union_t union_as_long_t;

    long_as_long_t lal(
        [in] handle_t h, 
        [in, out] long_as_long_t *a1,
        [in, out, ptr] long_as_long_t *a2,
        [in] long_as_long_t a3,
        [in, out, ptr] long_as_long_t *a4 /* Checks for alias detection with a2 */
        );

    long_as_struct_t las(
        [in] handle_t h, 
        [in, out] long_as_struct_t *a1,
        [in, out, ptr] long_as_struct_t *a2,
        [in] long_as_struct_t a3
        );

    struct_as_long_t sal(
        [in] handle_t h, 
        [in, out] struct_as_long_t *a1,
        [in, out, ptr] struct_as_long_t *a2,
        [in] struct_as_long_t a3
        );

/*
    void las([in] handle_t h, [in, out] long_as_struct_t *arg);
    void laa([in] handle_t h, [in, out] long_as_array_t *arg);
    void aal([in] handle_t h, [in, out] array_as_long_t *arg);
    void lau([in] handle_t h, [in, out] long_as_union_t *arg);
    void ual([in] handle_t h, [in, out] union_as_long_t *arg);
*/
}

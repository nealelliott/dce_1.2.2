/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: mtsaconf.idl,v $
 * Revision 1.1.4.2  1996/03/11  02:14:53  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  19:53:41  marty]
 *
 * Revision 1.1.4.1  1995/12/11  20:08:57  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:32:45  root]
 * 
 * Revision 1.1.2.2  1993/08/11  16:28:00  ganni
 * 	tests for new IDL functionality
 * 	[1993/08/11  16:15:44  ganni]
 * 
 * $EndLog$
 */
/*
*/
[
uuid(00dcfc86-c202-11ca-bbb2-08002b107359),
version(0.0)
]
interface mtsaconf
{

    const long LDIM1 = 3;
    const long UDIM1 = 10;
    const long LDIM2 = -4;
    const long UDIM2 = 1;
    const long LDIM3 = -1;
    const long UDIM3 = 2;

    void op0( [in] handle_t h,
              [in,out] long fa3[LDIM1..UDIM1][LDIM2..UDIM2][LDIM3..UDIM3]
            );

    void op1( [in] handle_t h,
              [in,out,size_is(s1),first_is(*p_f1)] small a1[LDIM1..*],
              [in] long s1,
              [in,out] short *p_f1
            );

    typedef struct three_smalls {
        small x;
        small y;
        small z;
    } three_smalls;

    void op2( [in] handle_t h,
              [in] long min1,
              [in] long max2,
              [in,out,min_is(min1,,min3),max_is(,max2,max3)]
                             three_smalls a2[*..UDIM1][LDIM2..*][*..*],
              [in] long min3,
              [in] long max3,
              [out] unsigned long *p_wrong_at_server
            );

    void op3( [in] handle_t h,
              [in] long min1,
              [in] long max2,
              [in] long min3,
              [in] long max3,
              [in,out,min_is(min1,,min3),max_is(,max2,max3),
                        first_is(*p_f1,*p_f2,*p_f3),last_is(*p_l1,*p_l2,*p_l3)]
                             three_smalls a2[*..UDIM1][LDIM2..*][*..*],
              [in,out] short *p_f1,
              [in,out] short *p_f2,
              [in,out] short *p_f3,
              [in,out] short *p_l1,
              [in,out] short *p_l2,
              [in,out] short *p_l3,
              [out] unsigned long *p_wrong_at_server
            );

    typedef struct multiconf_t {
        small min1;
        long max1;
        small min2;
        long max2;
        [min_is(min1,min2),max_is(max1,max2)] float a[*..*][*..*];
    } multiconf_t;

    void op4( [in] handle_t h,
              [in] multiconf_t *p_mc,
              [in] long min1,
              [in] long max1,
              [in] long min2,
              [in] long max2,
              [out,min_is(min1,min2),max_is(max1,max2)] float fl_a[*..*][*..*]
            );

    typedef struct multiopen_t {
        small min1;
        long max1;
        small min2;
        long max2;
        small first1;
        long last1;
        small first2;
        long last2;
        [min_is(min1,min2),max_is(max1,max2),
         first_is(first1,first2),last_is(last1,last2)] double d[*..*][*..*];
    } multiopen_t;

    void op5( [in] handle_t h,
              [in] multiopen_t *p_mo,
              [out,min_is(min1,min2),max_is(max1,max2),
            first_is(*p_f1,*p_f2),last_is(*p_l1,*p_l2)] double db_a[*..*][*..*],
              [in] long min1,
              [in] long max1,
              [in] long min2,
              [in] long max2,
              [out] short *p_f1,
              [out] short *p_f2,
              [out] short *p_l1,
              [out] short *p_l2
            );


    const long PMINI = 3;
    const long PMAXI = 12;
    const long PMINO = 10;
    const long PMAXO = 25;    

    typedef [string, ptr] char *strptr_t;

    void op6( [in] handle_t h,
              [in,ptr,min_is(min1),max_is(max1)] strptr_t *strptr_a1,
              [in] long min1,
              [in] long max1,
              [out, min_is(min2), max_is(max2), first_is(*p_f1), last_is(*p_l1)]
                                             strptr_t *strptr_a2,
              [in] long min2,
              [in] long max2,
              [out] short *p_f1,
              [out] short *p_l1
            );

}   

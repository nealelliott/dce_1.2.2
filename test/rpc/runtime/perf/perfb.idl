/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: perfb.idl,v $
 * Revision 1.1.6.2  1996/03/11  02:29:09  marty
 * 	Update OSF copyright years
 * 	[1996/03/10  20:00:38  marty]
 *
 * Revision 1.1.6.1  1995/12/11  20:15:09  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/11  19:48:02  root]
 * 
 * Revision 1.1.4.2  1993/01/13  19:57:07  bbelch
 * 	Embedding copyright notice
 * 	[1993/01/06  18:25:01  bbelch]
 * 
 * Revision 1.1.2.2  1992/05/01  15:41:25  rsalz
 * 	 03-jan-93 mishkin   Add perfb_null & perfb_null_idem
 * 	[1992/05/01  01:21:15  rsalz]
 * 
 * Revision 1.1  1992/01/19  03:41:29  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/*
**  Copyright (c) 1989 by
**      Hewlett-Packard Company, Palo Alto, Ca. & 
**      Digital Equipment Corporation, Maynard, Mass.
**
**
**  NAME
**
**      perfb.idl
**
**  FACILITY:
**
**      Remote Procedure Call (RPC) 
**
**  ABSTRACT:
**
**  Performance and system execiser auxiliary interface.  This interface is
**  dynamically registered by the server when request by the client through
**  a call to an operation in the "perf" interface.
**
**
*/

[uuid(35CCD2DC-0000-0000-0D00-00C366000000),
     version(1)]

interface perfb
{
typedef [v1_array] unsigned long perfb_data_t[0..*];

const long perfb_large_size = 3000;

void perfb_init
(
    [in]        handle_t            handle,
    [out, v1_array, v1_string] char name[256]
);

void perfb_in
(
    [in]        handle_t            handle,
    [in, last_is(l), max_is(l)] perfb_data_t data,
    [in]        unsigned long       l,
    [in]        boolean             v,
    [out]       unsigned long       *sum
);

[broadcast] void perfb_brd
(
    [in]        handle_t            handle,
    [out, v1_array, v1_string] char name[256]
);

void perfb_null
(
    [in]        handle_t            handle
);

[idempotent] void perfb_null_idem
(
    [in]        handle_t            handle
);

}
